{
	"id": "22a8a08a81aaf5b43d780491b0b17d29",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LpPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    \r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ninterface LP {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function token0() external view returns (IERC20);\r\n\r\n    function token1() external view returns (IERC20);\r\n}\r\n\r\ninterface Router {\r\n    function getAmountsOut(uint amountIn, address[] memory path) external\r\n        view\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract LpUtils {\r\n    using SafeMath for uint256;\r\n    address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\r\n    address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7;\r\n    uint256 amount = 1000000000000000000;\r\n\r\n    function price(Router routerAddress, address token) internal view returns(uint256){\r\n        address[] memory path = new address[](3);\r\n        path[0] = token;\r\n        path[1] = WBNB;\r\n        path[2] = BUSD;\r\n        return routerAddress.getAmountsOut(amount,path)[2];\r\n    }\r\n\r\n    function WBNBPrice(Router routerAddress, address token) internal view returns(uint256){\r\n        address[] memory path = new address[](2);\r\n        path[0] = token;\r\n        path[1] = BUSD;\r\n        return routerAddress.getAmountsOut(amount,path)[1];\r\n    }\r\n\r\n    function CalcLpPrice(LP lpAddress, Router routerAddress) external view returns(uint256){\r\n        uint256 phase1;\r\n        uint256 phase2;\r\n        if(address(WBNB) != address(lpAddress.token0())){\r\n            phase1 = (lpAddress.token0().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token0()))));\r\n        }else{\r\n            phase1 = (lpAddress.token0().balanceOf(address(lpAddress)).mul(WBNBPrice(routerAddress,address(lpAddress.token0()))));\r\n        }\r\n\r\n        if(address(WBNB) != address(lpAddress.token1())){\r\n            phase2 = (lpAddress.token1().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token1()))));\r\n        }else{\r\n            phase2 = (lpAddress.token1().balanceOf(address(lpAddress)).mul(WBNBPrice(routerAddress,address(lpAddress.token1()))));\r\n        }\r\n        \r\n        return ((phase1.add(phase2)).div(lpAddress.totalSupply()));\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LpPrice.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208f1d3c18e781d76d5f2b7cf1c0c7da407c8160f5439fc48d63e97a0cded6f16964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f1d3c18e781d76d5f2b7cf1c0c7da407c8160f5439fc48d63e97a0cded6f16964736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 SAR EXTCODECOPY XOR 0xE7 DUP2 0xD7 PUSH14 0x5F2B7CF1C0C7DA407C8160F5439F 0xC4 DUP14 PUSH4 0xE97A0CDE 0xD6 CALL PUSH10 0x64736F6C634300080700 CALLER ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f1d3c18e781d76d5f2b7cf1c0c7da407c8160f5439fc48d63e97a0cded6f16964736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 SAR EXTCODECOPY XOR 0xE7 DUP2 0xD7 PUSH14 0x5F2B7CF1C0C7DA407C8160F5439F 0xC4 DUP14 PUSH4 0xE97A0CDE 0xD6 CALL PUSH10 0x64736F6C634300080700 CALLER ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f1d3c18e781d76d5f2b7cf1c0c7da407c8160f5439fc48d63e97a0cded6f16964736f6c63430008070033",
									".code": [
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xde4aa73352a7ce4f48d1e77d8e96c9cb62399bdb716030304fafa0f9fc956eb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0044e6d84f273d3f85ecf685a703ffde0b8db35a498c48762ecdcd009e4608ca\",\"dweb:/ipfs/QmZa6pKzYvUWZ3GEWgBVqdp3q8UxPoEoPycNrifKq2QLTh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xde4aa73352a7ce4f48d1e77d8e96c9cb62399bdb716030304fafa0f9fc956eb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0044e6d84f273d3f85ecf685a703ffde0b8db35a498c48762ecdcd009e4608ca\",\"dweb:/ipfs/QmZa6pKzYvUWZ3GEWgBVqdp3q8UxPoEoPycNrifKq2QLTh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LP": {
					"abi": [
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LP\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xde4aa73352a7ce4f48d1e77d8e96c9cb62399bdb716030304fafa0f9fc956eb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0044e6d84f273d3f85ecf685a703ffde0b8db35a498c48762ecdcd009e4608ca\",\"dweb:/ipfs/QmZa6pKzYvUWZ3GEWgBVqdp3q8UxPoEoPycNrifKq2QLTh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LpUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "BUSD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract LP",
									"name": "lpAddress",
									"type": "address"
								},
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								}
							],
							"name": "CalcLpPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WBNB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":13649:15365  contract LpUtils {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LpPrice.sol\":13728:13770  0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0xae13d989dac2f0debff460ac112a837c89baa7cd\n    /* \"contracts/LpPrice.sol\":13706:13770  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":13799:13841  0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x78867bbeef44f2326bf8ddd1941a4439382ef2a7\n    /* \"contracts/LpPrice.sol\":13777:13841  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":13865:13884  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/LpPrice.sol\":13848:13884  uint256 amount = 1000000000000000000 */\n  0x02\n  sstore\n    /* \"contracts/LpPrice.sol\":13649:15365  contract LpUtils {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":13649:15365  contract LpUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x344e49d9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x484f4ea9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8dd95002\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LpPrice.sol\":14444:15362  function CalcLpPrice(LP lpAddress, Router routerAddress) external view returns(uint256){\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":13777:13841  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":13706:13770  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":14444:15362  function CalcLpPrice(LP lpAddress, Router routerAddress) external view returns(uint256){\r... */\n    tag_9:\n        /* \"contracts/LpPrice.sol\":14523:14530  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":14542:14556  uint256 phase1 */\n      dup1\n        /* \"contracts/LpPrice.sol\":14567:14581  uint256 phase2 */\n      0x00\n        /* \"contracts/LpPrice.sol\":14620:14629  lpAddress */\n      dup5\n        /* \"contracts/LpPrice.sol\":14620:14636  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":14620:14638  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"contracts/LpPrice.sol\":14595:14639  address(WBNB) != address(lpAddress.token0()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":14603:14607  WBNB */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":14595:14639  address(WBNB) != address(lpAddress.token0()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/LpPrice.sol\":14592:14928  if(address(WBNB) != address(lpAddress.token0())){\r... */\n      tag_25\n      jumpi\n        /* \"contracts/LpPrice.sol\":14665:14767  lpAddress.token0().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token0()))) */\n      tag_26\n        /* \"contracts/LpPrice.sol\":14718:14766  price(routerAddress,address(lpAddress.token0())) */\n      tag_27\n        /* \"contracts/LpPrice.sol\":14724:14737  routerAddress */\n      dup6\n        /* \"contracts/LpPrice.sol\":14746:14755  lpAddress */\n      dup8\n        /* \"contracts/LpPrice.sol\":14746:14762  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":14746:14764  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_31:\n        /* \"contracts/LpPrice.sol\":14718:14723  price */\n      tag_32\n        /* \"contracts/LpPrice.sol\":14718:14766  price(routerAddress,address(lpAddress.token0())) */\n      jump\t// in\n    tag_27:\n        /* \"contracts/LpPrice.sol\":14665:14674  lpAddress */\n      dup7\n        /* \"contracts/LpPrice.sol\":14665:14681  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":14665:14683  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_36:\n        /* \"contracts/LpPrice.sol\":14665:14693  lpAddress.token0().balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LpPrice.sol\":14702:14711  lpAddress */\n      dup9\n        /* \"contracts/LpPrice.sol\":14665:14713  lpAddress.token0().balanceOf(address(lpAddress)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_37:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"contracts/LpPrice.sol\":14665:14717  lpAddress.token0().balanceOf(address(lpAddress)).mul */\n      tag_43\n      swap1\n        /* \"contracts/LpPrice.sol\":14665:14767  lpAddress.token0().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token0()))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_26:\n        /* \"contracts/LpPrice.sol\":14655:14768  phase1 = (lpAddress.token0().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token0())))) */\n      swap2\n      pop\n        /* \"contracts/LpPrice.sol\":14592:14928  if(address(WBNB) != address(lpAddress.token0())){\r... */\n      jump(tag_44)\n    tag_25:\n        /* \"contracts/LpPrice.sol\":14809:14915  lpAddress.token0().balanceOf(address(lpAddress)).mul(WBNBPrice(routerAddress,address(lpAddress.token0()))) */\n      tag_45\n        /* \"contracts/LpPrice.sol\":14862:14914  WBNBPrice(routerAddress,address(lpAddress.token0())) */\n      tag_46\n        /* \"contracts/LpPrice.sol\":14872:14885  routerAddress */\n      dup6\n        /* \"contracts/LpPrice.sol\":14894:14903  lpAddress */\n      dup8\n        /* \"contracts/LpPrice.sol\":14894:14910  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":14894:14912  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_50:\n        /* \"contracts/LpPrice.sol\":14862:14871  WBNBPrice */\n      tag_51\n        /* \"contracts/LpPrice.sol\":14862:14914  WBNBPrice(routerAddress,address(lpAddress.token0())) */\n      jump\t// in\n    tag_46:\n        /* \"contracts/LpPrice.sol\":14809:14818  lpAddress */\n      dup7\n        /* \"contracts/LpPrice.sol\":14809:14825  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":14809:14827  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_55:\n        /* \"contracts/LpPrice.sol\":14809:14837  lpAddress.token0().balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LpPrice.sol\":14846:14855  lpAddress */\n      dup9\n        /* \"contracts/LpPrice.sol\":14809:14857  lpAddress.token0().balanceOf(address(lpAddress)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_56:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_60:\n        /* \"contracts/LpPrice.sol\":14809:14861  lpAddress.token0().balanceOf(address(lpAddress)).mul */\n      tag_43\n      swap1\n        /* \"contracts/LpPrice.sol\":14809:14915  lpAddress.token0().balanceOf(address(lpAddress)).mul(WBNBPrice(routerAddress,address(lpAddress.token0()))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_45:\n        /* \"contracts/LpPrice.sol\":14799:14916  phase1 = (lpAddress.token0().balanceOf(address(lpAddress)).mul(WBNBPrice(routerAddress,address(lpAddress.token0())))) */\n      swap2\n      pop\n        /* \"contracts/LpPrice.sol\":14592:14928  if(address(WBNB) != address(lpAddress.token0())){\r... */\n    tag_44:\n        /* \"contracts/LpPrice.sol\":14968:14977  lpAddress */\n      dup5\n        /* \"contracts/LpPrice.sol\":14968:14984  lpAddress.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/LpPrice.sol\":14968:14986  lpAddress.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_64:\n        /* \"contracts/LpPrice.sol\":14943:14987  address(WBNB) != address(lpAddress.token1()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":14951:14955  WBNB */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":14943:14987  address(WBNB) != address(lpAddress.token1()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/LpPrice.sol\":14940:15276  if(address(WBNB) != address(lpAddress.token1())){\r... */\n      tag_65\n      jumpi\n        /* \"contracts/LpPrice.sol\":15013:15115  lpAddress.token1().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token1()))) */\n      tag_66\n        /* \"contracts/LpPrice.sol\":15066:15114  price(routerAddress,address(lpAddress.token1())) */\n      tag_67\n        /* \"contracts/LpPrice.sol\":15072:15085  routerAddress */\n      dup6\n        /* \"contracts/LpPrice.sol\":15094:15103  lpAddress */\n      dup8\n        /* \"contracts/LpPrice.sol\":15094:15110  lpAddress.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/LpPrice.sol\":15094:15112  lpAddress.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_71:\n        /* \"contracts/LpPrice.sol\":15066:15071  price */\n      tag_32\n        /* \"contracts/LpPrice.sol\":15066:15114  price(routerAddress,address(lpAddress.token1())) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/LpPrice.sol\":15013:15022  lpAddress */\n      dup7\n        /* \"contracts/LpPrice.sol\":15013:15029  lpAddress.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/LpPrice.sol\":15013:15031  lpAddress.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_75:\n        /* \"contracts/LpPrice.sol\":15013:15041  lpAddress.token1().balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LpPrice.sol\":15050:15059  lpAddress */\n      dup9\n        /* \"contracts/LpPrice.sol\":15013:15061  lpAddress.token1().balanceOf(address(lpAddress)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_76:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_80:\n        /* \"contracts/LpPrice.sol\":15013:15065  lpAddress.token1().balanceOf(address(lpAddress)).mul */\n      tag_43\n      swap1\n        /* \"contracts/LpPrice.sol\":15013:15115  lpAddress.token1().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token1()))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_66:\n        /* \"contracts/LpPrice.sol\":15003:15116  phase2 = (lpAddress.token1().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token1())))) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":14940:15276  if(address(WBNB) != address(lpAddress.token1())){\r... */\n      jump(tag_81)\n    tag_65:\n        /* \"contracts/LpPrice.sol\":15157:15263  lpAddress.token1().balanceOf(address(lpAddress)).mul(WBNBPrice(routerAddress,address(lpAddress.token1()))) */\n      tag_82\n        /* \"contracts/LpPrice.sol\":15210:15262  WBNBPrice(routerAddress,address(lpAddress.token1())) */\n      tag_83\n        /* \"contracts/LpPrice.sol\":15220:15233  routerAddress */\n      dup6\n        /* \"contracts/LpPrice.sol\":15242:15251  lpAddress */\n      dup8\n        /* \"contracts/LpPrice.sol\":15242:15258  lpAddress.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/LpPrice.sol\":15242:15260  lpAddress.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_87:\n        /* \"contracts/LpPrice.sol\":15210:15219  WBNBPrice */\n      tag_51\n        /* \"contracts/LpPrice.sol\":15210:15262  WBNBPrice(routerAddress,address(lpAddress.token1())) */\n      jump\t// in\n    tag_83:\n        /* \"contracts/LpPrice.sol\":15157:15166  lpAddress */\n      dup7\n        /* \"contracts/LpPrice.sol\":15157:15173  lpAddress.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/LpPrice.sol\":15157:15175  lpAddress.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_91:\n        /* \"contracts/LpPrice.sol\":15157:15185  lpAddress.token1().balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LpPrice.sol\":15194:15203  lpAddress */\n      dup9\n        /* \"contracts/LpPrice.sol\":15157:15205  lpAddress.token1().balanceOf(address(lpAddress)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_92:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_96:\n        /* \"contracts/LpPrice.sol\":15157:15209  lpAddress.token1().balanceOf(address(lpAddress)).mul */\n      tag_43\n      swap1\n        /* \"contracts/LpPrice.sol\":15157:15263  lpAddress.token1().balanceOf(address(lpAddress)).mul(WBNBPrice(routerAddress,address(lpAddress.token1()))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_82:\n        /* \"contracts/LpPrice.sol\":15147:15264  phase2 = (lpAddress.token1().balanceOf(address(lpAddress)).mul(WBNBPrice(routerAddress,address(lpAddress.token1())))) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":14940:15276  if(address(WBNB) != address(lpAddress.token1())){\r... */\n    tag_81:\n        /* \"contracts/LpPrice.sol\":15304:15353  (phase1.add(phase2)).div(lpAddress.totalSupply()) */\n      tag_97\n        /* \"contracts/LpPrice.sol\":15329:15338  lpAddress */\n      dup6\n        /* \"contracts/LpPrice.sol\":15329:15350  lpAddress.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/LpPrice.sol\":15329:15352  lpAddress.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_101:\n        /* \"contracts/LpPrice.sol\":15305:15323  phase1.add(phase2) */\n      tag_102\n        /* \"contracts/LpPrice.sol\":15316:15322  phase2 */\n      dup4\n        /* \"contracts/LpPrice.sol\":15305:15311  phase1 */\n      dup6\n        /* \"contracts/LpPrice.sol\":15305:15315  phase1.add */\n      tag_103\n      swap1\n        /* \"contracts/LpPrice.sol\":15305:15323  phase1.add(phase2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"contracts/LpPrice.sol\":15304:15328  (phase1.add(phase2)).div */\n      tag_104\n      swap1\n        /* \"contracts/LpPrice.sol\":15304:15353  (phase1.add(phase2)).div(lpAddress.totalSupply()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_97:\n        /* \"contracts/LpPrice.sol\":15296:15354  return ((phase1.add(phase2)).div(lpAddress.totalSupply())) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14444:15362  function CalcLpPrice(LP lpAddress, Router routerAddress) external view returns(uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":13777:13841  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_13:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":13706:13770  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_17:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":13893:14171  function price(Router routerAddress, address token) internal view returns(uint256){\r... */\n    tag_32:\n        /* \"contracts/LpPrice.sol\":13967:13974  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":13986:14007  address[] memory path */\n      dup1\n        /* \"contracts/LpPrice.sol\":14024:14025  3 */\n      0x03\n        /* \"contracts/LpPrice.sol\":14010:14026  new address[](3) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_106\n      jumpi\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n    tag_106:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_109:\n      pop\n        /* \"contracts/LpPrice.sol\":13986:14026  address[] memory path = new address[](3) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":14047:14052  token */\n      dup3\n        /* \"contracts/LpPrice.sol\":14037:14041  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":14042:14043  0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":14037:14044  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_110\n      jumpi\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n    tag_110:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":14037:14052  path[0] = token */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14073:14077  WBNB */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":14063:14067  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":14068:14069  1 */\n      0x01\n        /* \"contracts/LpPrice.sol\":14063:14070  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_113\n      jumpi\n      tag_114\n      tag_112\n      jump\t// in\n    tag_114:\n    tag_113:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":14063:14077  path[1] = WBNB */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14098:14102  BUSD */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":14088:14092  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":14093:14094  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":14088:14095  path[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_115\n      jumpi\n      tag_116\n      tag_112\n      jump\t// in\n    tag_116:\n    tag_115:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":14088:14102  path[2] = BUSD */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14120:14133  routerAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":14120:14147  routerAddress.getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd06ca61f\n        /* \"contracts/LpPrice.sol\":14148:14154  amount */\n      sload(0x02)\n        /* \"contracts/LpPrice.sol\":14155:14159  path */\n      dup4\n        /* \"contracts/LpPrice.sol\":14120:14160  routerAddress.getAmountsOut(amount,path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"contracts/LpPrice.sol\":14161:14162  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":14120:14163  routerAddress.getAmountsOut(amount,path)[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_124\n      jumpi\n      tag_125\n      tag_112\n      jump\t// in\n    tag_125:\n    tag_124:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/LpPrice.sol\":14113:14163  return routerAddress.getAmountsOut(amount,path)[2] */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":13893:14171  function price(Router routerAddress, address token) internal view returns(uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9965:10436  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_43:\n        /* \"contracts/LpPrice.sol\":10023:10030  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":10273:10274  0 */\n      dup1\n        /* \"contracts/LpPrice.sol\":10268:10269  a */\n      dup4\n        /* \"contracts/LpPrice.sol\":10268:10274  a == 0 */\n      eq\n        /* \"contracts/LpPrice.sol\":10264:10311  if (a == 0) {\r... */\n      iszero\n      tag_127\n      jumpi\n        /* \"contracts/LpPrice.sol\":10298:10299  0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":10291:10299  return 0 */\n      swap1\n      pop\n      jump(tag_126)\n        /* \"contracts/LpPrice.sol\":10264:10311  if (a == 0) {\r... */\n    tag_127:\n        /* \"contracts/LpPrice.sol\":10323:10332  uint256 c */\n      0x00\n        /* \"contracts/LpPrice.sol\":10339:10340  b */\n      dup3\n        /* \"contracts/LpPrice.sol\":10335:10336  a */\n      dup5\n        /* \"contracts/LpPrice.sol\":10335:10340  a * b */\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"contracts/LpPrice.sol\":10323:10340  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":10368:10369  b */\n      dup3\n        /* \"contracts/LpPrice.sol\":10363:10364  a */\n      dup5\n        /* \"contracts/LpPrice.sol\":10359:10360  c */\n      dup3\n        /* \"contracts/LpPrice.sol\":10359:10364  c / a */\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"contracts/LpPrice.sol\":10359:10369  c / a == b */\n      eq\n        /* \"contracts/LpPrice.sol\":10351:10407  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/LpPrice.sol\":10427:10428  c */\n      dup1\n        /* \"contracts/LpPrice.sol\":10420:10428  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9965:10436  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_126:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":14179:14436  function WBNBPrice(Router routerAddress, address token) internal view returns(uint256){\r... */\n    tag_51:\n        /* \"contracts/LpPrice.sol\":14257:14264  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":14276:14297  address[] memory path */\n      dup1\n        /* \"contracts/LpPrice.sol\":14314:14315  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":14300:14316  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_136\n      jumpi\n      tag_137\n      tag_108\n      jump\t// in\n    tag_137:\n    tag_136:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_138:\n      pop\n        /* \"contracts/LpPrice.sol\":14276:14316  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":14337:14342  token */\n      dup3\n        /* \"contracts/LpPrice.sol\":14327:14331  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":14332:14333  0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":14327:14334  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_139\n      jumpi\n      tag_140\n      tag_112\n      jump\t// in\n    tag_140:\n    tag_139:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":14327:14342  path[0] = token */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14363:14367  BUSD */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":14353:14357  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":14358:14359  1 */\n      0x01\n        /* \"contracts/LpPrice.sol\":14353:14360  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_141\n      jumpi\n      tag_142\n      tag_112\n      jump\t// in\n    tag_142:\n    tag_141:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":14353:14367  path[1] = BUSD */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14385:14398  routerAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":14385:14412  routerAddress.getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd06ca61f\n        /* \"contracts/LpPrice.sol\":14413:14419  amount */\n      sload(0x02)\n        /* \"contracts/LpPrice.sol\":14420:14424  path */\n      dup4\n        /* \"contracts/LpPrice.sol\":14385:14425  routerAddress.getAmountsOut(amount,path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_143:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_147:\n        /* \"contracts/LpPrice.sol\":14426:14427  1 */\n      0x01\n        /* \"contracts/LpPrice.sol\":14385:14428  routerAddress.getAmountsOut(amount,path)[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_148\n      jumpi\n      tag_149\n      tag_112\n      jump\t// in\n    tag_149:\n    tag_148:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/LpPrice.sol\":14378:14428  return routerAddress.getAmountsOut(amount,path)[1] */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14179:14436  function WBNBPrice(Router routerAddress, address token) internal view returns(uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8593:8774  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_103:\n        /* \"contracts/LpPrice.sol\":8651:8658  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":8671:8680  uint256 c */\n      dup1\n        /* \"contracts/LpPrice.sol\":8687:8688  b */\n      dup3\n        /* \"contracts/LpPrice.sol\":8683:8684  a */\n      dup5\n        /* \"contracts/LpPrice.sol\":8683:8688  a + b */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"contracts/LpPrice.sol\":8671:8688  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":8712:8713  a */\n      dup4\n        /* \"contracts/LpPrice.sol\":8707:8708  c */\n      dup2\n        /* \"contracts/LpPrice.sol\":8707:8713  c >= a */\n      lt\n      iszero\n        /* \"contracts/LpPrice.sol\":8699:8745  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contracts/LpPrice.sol\":8765:8766  c */\n      dup1\n        /* \"contracts/LpPrice.sol\":8758:8766  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":8593:8774  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":10904:11036  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_104:\n        /* \"contracts/LpPrice.sol\":10962:10969  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":10989:11028  div(a, b, \"SafeMath: division by zero\") */\n      tag_157\n        /* \"contracts/LpPrice.sol\":10993:10994  a */\n      dup4\n        /* \"contracts/LpPrice.sol\":10996:10997  b */\n      dup4\n        /* \"contracts/LpPrice.sol\":10989:11028  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/LpPrice.sol\":10989:10992  div */\n      tag_158\n        /* \"contracts/LpPrice.sol\":10989:11028  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_157:\n        /* \"contracts/LpPrice.sol\":10982:11028  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":10904:11036  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":11566:11911  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_158:\n        /* \"contracts/LpPrice.sol\":11652:11659  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":11751:11752  0 */\n      dup1\n        /* \"contracts/LpPrice.sol\":11747:11748  b */\n      dup4\n        /* \"contracts/LpPrice.sol\":11747:11752  b > 0 */\n      gt\n        /* \"contracts/LpPrice.sol\":11754:11766  errorMessage */\n      dup3\n        /* \"contracts/LpPrice.sol\":11739:11767  require(b > 0, errorMessage) */\n      swap1\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n      pop\n        /* \"contracts/LpPrice.sol\":11778:11787  uint256 c */\n      0x00\n        /* \"contracts/LpPrice.sol\":11794:11795  b */\n      dup4\n        /* \"contracts/LpPrice.sol\":11790:11791  a */\n      dup6\n        /* \"contracts/LpPrice.sol\":11790:11795  a / b */\n      tag_163\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_163:\n        /* \"contracts/LpPrice.sol\":11778:11795  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":11902:11903  c */\n      dup1\n        /* \"contracts/LpPrice.sol\":11895:11903  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":11566:11911  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:768   */\n    tag_165:\n        /* \"#utility.yul\":131:136   */\n      0x00\n        /* \"#utility.yul\":156:237   */\n      tag_167\n        /* \"#utility.yul\":172:236   */\n      tag_168\n        /* \"#utility.yul\":229:235   */\n      dup5\n        /* \"#utility.yul\":172:236   */\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":156:237   */\n      tag_170\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":147:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":257:262   */\n      dup1\n        /* \"#utility.yul\":286:292   */\n      dup4\n        /* \"#utility.yul\":279:284   */\n      dup3\n        /* \"#utility.yul\":272:293   */\n      mstore\n        /* \"#utility.yul\":320:324   */\n      0x20\n        /* \"#utility.yul\":313:318   */\n      dup3\n        /* \"#utility.yul\":309:325   */\n      add\n        /* \"#utility.yul\":302:325   */\n      swap1\n      pop\n        /* \"#utility.yul\":346:352   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":388:392   */\n      0x20\n        /* \"#utility.yul\":380:386   */\n      dup7\n        /* \"#utility.yul\":376:393   */\n      mul\n        /* \"#utility.yul\":371:374   */\n      dup3\n        /* \"#utility.yul\":367:394   */\n      add\n        /* \"#utility.yul\":364:400   */\n      gt\n        /* \"#utility.yul\":361:504   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":361:504   */\n    tag_171:\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":513:762   */\n    tag_174:\n        /* \"#utility.yul\":538:544   */\n      dup6\n        /* \"#utility.yul\":535:536   */\n      dup2\n        /* \"#utility.yul\":532:545   */\n      lt\n        /* \"#utility.yul\":513:762   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":606:609   */\n      dup2\n        /* \"#utility.yul\":635:683   */\n      tag_177\n        /* \"#utility.yul\":679:682   */\n      dup9\n        /* \"#utility.yul\":667:677   */\n      dup3\n        /* \"#utility.yul\":635:683   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":630:633   */\n      dup5\n        /* \"#utility.yul\":623:684   */\n      mstore\n        /* \"#utility.yul\":713:717   */\n      0x20\n        /* \"#utility.yul\":708:711   */\n      dup5\n        /* \"#utility.yul\":704:718   */\n      add\n        /* \"#utility.yul\":697:718   */\n      swap4\n      pop\n        /* \"#utility.yul\":747:751   */\n      0x20\n        /* \"#utility.yul\":742:745   */\n      dup4\n        /* \"#utility.yul\":738:752   */\n      add\n        /* \"#utility.yul\":731:752   */\n      swap3\n      pop\n        /* \"#utility.yul\":573:762   */\n      pop\n        /* \"#utility.yul\":560:561   */\n      0x01\n        /* \"#utility.yul\":557:558   */\n      dup2\n        /* \"#utility.yul\":553:562   */\n      add\n        /* \"#utility.yul\":548:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":513:762   */\n      jump(tag_174)\n    tag_176:\n        /* \"#utility.yul\":517:531   */\n      pop\n        /* \"#utility.yul\":137:768   */\n      pop\n      pop\n        /* \"#utility.yul\":24:768   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":791:1176   */\n    tag_179:\n        /* \"#utility.yul\":873:878   */\n      0x00\n        /* \"#utility.yul\":922:925   */\n      dup3\n        /* \"#utility.yul\":915:919   */\n      0x1f\n        /* \"#utility.yul\":907:913   */\n      dup4\n        /* \"#utility.yul\":903:920   */\n      add\n        /* \"#utility.yul\":899:926   */\n      slt\n        /* \"#utility.yul\":889:1011   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":930:1009   */\n      tag_182\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":889:1011   */\n    tag_181:\n        /* \"#utility.yul\":1040:1046   */\n      dup2\n        /* \"#utility.yul\":1034:1047   */\n      mload\n        /* \"#utility.yul\":1065:1170   */\n      tag_184\n        /* \"#utility.yul\":1166:1169   */\n      dup5\n        /* \"#utility.yul\":1158:1164   */\n      dup3\n        /* \"#utility.yul\":1151:1155   */\n      0x20\n        /* \"#utility.yul\":1143:1149   */\n      dup7\n        /* \"#utility.yul\":1139:1156   */\n      add\n        /* \"#utility.yul\":1065:1170   */\n      tag_165\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1056:1170   */\n      swap2\n      pop\n        /* \"#utility.yul\":879:1176   */\n      pop\n        /* \"#utility.yul\":791:1176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1182:1353   */\n    tag_185:\n        /* \"#utility.yul\":1253:1258   */\n      0x00\n        /* \"#utility.yul\":1284:1290   */\n      dup2\n        /* \"#utility.yul\":1278:1291   */\n      mload\n        /* \"#utility.yul\":1269:1291   */\n      swap1\n      pop\n        /* \"#utility.yul\":1300:1347   */\n      tag_187\n        /* \"#utility.yul\":1341:1346   */\n      dup2\n        /* \"#utility.yul\":1300:1347   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1182:1353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1359:1518   */\n    tag_189:\n        /* \"#utility.yul\":1415:1420   */\n      0x00\n        /* \"#utility.yul\":1453:1459   */\n      dup2\n        /* \"#utility.yul\":1440:1460   */\n      calldataload\n        /* \"#utility.yul\":1431:1460   */\n      swap1\n      pop\n        /* \"#utility.yul\":1469:1512   */\n      tag_191\n        /* \"#utility.yul\":1506:1511   */\n      dup2\n        /* \"#utility.yul\":1469:1512   */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1359:1518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1524:1691   */\n    tag_193:\n        /* \"#utility.yul\":1584:1589   */\n      0x00\n        /* \"#utility.yul\":1622:1628   */\n      dup2\n        /* \"#utility.yul\":1609:1629   */\n      calldataload\n        /* \"#utility.yul\":1600:1629   */\n      swap1\n      pop\n        /* \"#utility.yul\":1638:1685   */\n      tag_195\n        /* \"#utility.yul\":1679:1684   */\n      dup2\n        /* \"#utility.yul\":1638:1685   */\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1524:1691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1697:1840   */\n    tag_178:\n        /* \"#utility.yul\":1754:1759   */\n      0x00\n        /* \"#utility.yul\":1785:1791   */\n      dup2\n        /* \"#utility.yul\":1779:1792   */\n      mload\n        /* \"#utility.yul\":1770:1792   */\n      swap1\n      pop\n        /* \"#utility.yul\":1801:1834   */\n      tag_198\n        /* \"#utility.yul\":1828:1833   */\n      dup2\n        /* \"#utility.yul\":1801:1834   */\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1697:1840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1846:2400   */\n    tag_123:\n        /* \"#utility.yul\":1941:1947   */\n      0x00\n        /* \"#utility.yul\":1990:1992   */\n      0x20\n        /* \"#utility.yul\":1978:1987   */\n      dup3\n        /* \"#utility.yul\":1969:1976   */\n      dup5\n        /* \"#utility.yul\":1965:1988   */\n      sub\n        /* \"#utility.yul\":1961:1993   */\n      slt\n        /* \"#utility.yul\":1958:2077   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":1996:2075   */\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1958:2077   */\n    tag_201:\n        /* \"#utility.yul\":2137:2138   */\n      0x00\n        /* \"#utility.yul\":2126:2135   */\n      dup3\n        /* \"#utility.yul\":2122:2139   */\n      add\n        /* \"#utility.yul\":2116:2140   */\n      mload\n        /* \"#utility.yul\":2167:2185   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2159:2165   */\n      dup2\n        /* \"#utility.yul\":2156:2186   */\n      gt\n        /* \"#utility.yul\":2153:2270   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":2189:2268   */\n      tag_205\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2153:2270   */\n    tag_204:\n        /* \"#utility.yul\":2294:2383   */\n      tag_207\n        /* \"#utility.yul\":2375:2382   */\n      dup5\n        /* \"#utility.yul\":2366:2372   */\n      dup3\n        /* \"#utility.yul\":2355:2364   */\n      dup6\n        /* \"#utility.yul\":2351:2373   */\n      add\n        /* \"#utility.yul\":2294:2383   */\n      tag_179\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2284:2383   */\n      swap2\n      pop\n        /* \"#utility.yul\":2087:2393   */\n      pop\n        /* \"#utility.yul\":1846:2400   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2406:2785   */\n    tag_24:\n        /* \"#utility.yul\":2490:2496   */\n      0x00\n        /* \"#utility.yul\":2539:2541   */\n      0x20\n        /* \"#utility.yul\":2527:2536   */\n      dup3\n        /* \"#utility.yul\":2518:2525   */\n      dup5\n        /* \"#utility.yul\":2514:2537   */\n      sub\n        /* \"#utility.yul\":2510:2542   */\n      slt\n        /* \"#utility.yul\":2507:2626   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":2545:2624   */\n      tag_210\n      tag_203\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2507:2626   */\n    tag_209:\n        /* \"#utility.yul\":2665:2666   */\n      0x00\n        /* \"#utility.yul\":2690:2768   */\n      tag_211\n        /* \"#utility.yul\":2760:2767   */\n      dup5\n        /* \"#utility.yul\":2751:2757   */\n      dup3\n        /* \"#utility.yul\":2740:2749   */\n      dup6\n        /* \"#utility.yul\":2736:2758   */\n      add\n        /* \"#utility.yul\":2690:2768   */\n      tag_185\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2680:2768   */\n      swap2\n      pop\n        /* \"#utility.yul\":2636:2778   */\n      pop\n        /* \"#utility.yul\":2406:2785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:3313   */\n    tag_8:\n        /* \"#utility.yul\":2883:2889   */\n      0x00\n        /* \"#utility.yul\":2891:2897   */\n      dup1\n        /* \"#utility.yul\":2940:2942   */\n      0x40\n        /* \"#utility.yul\":2928:2937   */\n      dup4\n        /* \"#utility.yul\":2919:2926   */\n      dup6\n        /* \"#utility.yul\":2915:2938   */\n      sub\n        /* \"#utility.yul\":2911:2943   */\n      slt\n        /* \"#utility.yul\":2908:3027   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":2946:3025   */\n      tag_214\n      tag_203\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2908:3027   */\n    tag_213:\n        /* \"#utility.yul\":3066:3067   */\n      0x00\n        /* \"#utility.yul\":3091:3154   */\n      tag_215\n        /* \"#utility.yul\":3146:3153   */\n      dup6\n        /* \"#utility.yul\":3137:3143   */\n      dup3\n        /* \"#utility.yul\":3126:3135   */\n      dup7\n        /* \"#utility.yul\":3122:3144   */\n      add\n        /* \"#utility.yul\":3091:3154   */\n      tag_189\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3081:3154   */\n      swap3\n      pop\n        /* \"#utility.yul\":3037:3164   */\n      pop\n        /* \"#utility.yul\":3203:3205   */\n      0x20\n        /* \"#utility.yul\":3229:3296   */\n      tag_216\n        /* \"#utility.yul\":3288:3295   */\n      dup6\n        /* \"#utility.yul\":3279:3285   */\n      dup3\n        /* \"#utility.yul\":3268:3277   */\n      dup7\n        /* \"#utility.yul\":3264:3286   */\n      add\n        /* \"#utility.yul\":3229:3296   */\n      tag_193\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":3219:3296   */\n      swap2\n      pop\n        /* \"#utility.yul\":3174:3306   */\n      pop\n        /* \"#utility.yul\":2791:3313   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3319:3670   */\n    tag_42:\n        /* \"#utility.yul\":3389:3395   */\n      0x00\n        /* \"#utility.yul\":3438:3440   */\n      0x20\n        /* \"#utility.yul\":3426:3435   */\n      dup3\n        /* \"#utility.yul\":3417:3424   */\n      dup5\n        /* \"#utility.yul\":3413:3436   */\n      sub\n        /* \"#utility.yul\":3409:3441   */\n      slt\n        /* \"#utility.yul\":3406:3525   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":3444:3523   */\n      tag_219\n      tag_203\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3406:3525   */\n    tag_218:\n        /* \"#utility.yul\":3564:3565   */\n      0x00\n        /* \"#utility.yul\":3589:3653   */\n      tag_220\n        /* \"#utility.yul\":3645:3652   */\n      dup5\n        /* \"#utility.yul\":3636:3642   */\n      dup3\n        /* \"#utility.yul\":3625:3634   */\n      dup6\n        /* \"#utility.yul\":3621:3643   */\n      add\n        /* \"#utility.yul\":3589:3653   */\n      tag_178\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3579:3653   */\n      swap2\n      pop\n        /* \"#utility.yul\":3535:3663   */\n      pop\n        /* \"#utility.yul\":3319:3670   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3676:3855   */\n    tag_221:\n        /* \"#utility.yul\":3745:3755   */\n      0x00\n        /* \"#utility.yul\":3766:3812   */\n      tag_223\n        /* \"#utility.yul\":3808:3811   */\n      dup4\n        /* \"#utility.yul\":3800:3806   */\n      dup4\n        /* \"#utility.yul\":3766:3812   */\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3844:3848   */\n      0x20\n        /* \"#utility.yul\":3839:3842   */\n      dup4\n        /* \"#utility.yul\":3835:3849   */\n      add\n        /* \"#utility.yul\":3821:3849   */\n      swap1\n      pop\n        /* \"#utility.yul\":3676:3855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3861:3969   */\n    tag_224:\n        /* \"#utility.yul\":3938:3962   */\n      tag_226\n        /* \"#utility.yul\":3956:3961   */\n      dup2\n        /* \"#utility.yul\":3938:3962   */\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3933:3936   */\n      dup3\n        /* \"#utility.yul\":3926:3963   */\n      mstore\n        /* \"#utility.yul\":3861:3969   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3975:4093   */\n    tag_228:\n        /* \"#utility.yul\":4062:4086   */\n      tag_230\n        /* \"#utility.yul\":4080:4085   */\n      dup2\n        /* \"#utility.yul\":4062:4086   */\n      tag_227\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4057:4060   */\n      dup3\n        /* \"#utility.yul\":4050:4087   */\n      mstore\n        /* \"#utility.yul\":3975:4093   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4129:4861   */\n    tag_231:\n        /* \"#utility.yul\":4248:4251   */\n      0x00\n        /* \"#utility.yul\":4277:4331   */\n      tag_233\n        /* \"#utility.yul\":4325:4330   */\n      dup3\n        /* \"#utility.yul\":4277:4331   */\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4347:4433   */\n      tag_235\n        /* \"#utility.yul\":4426:4432   */\n      dup2\n        /* \"#utility.yul\":4421:4424   */\n      dup6\n        /* \"#utility.yul\":4347:4433   */\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4340:4433   */\n      swap4\n      pop\n        /* \"#utility.yul\":4457:4513   */\n      tag_237\n        /* \"#utility.yul\":4507:4512   */\n      dup4\n        /* \"#utility.yul\":4457:4513   */\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4536:4543   */\n      dup1\n        /* \"#utility.yul\":4567:4568   */\n      0x00\n        /* \"#utility.yul\":4552:4836   */\n    tag_239:\n        /* \"#utility.yul\":4577:4583   */\n      dup4\n        /* \"#utility.yul\":4574:4575   */\n      dup2\n        /* \"#utility.yul\":4571:4584   */\n      lt\n        /* \"#utility.yul\":4552:4836   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":4653:4659   */\n      dup2\n        /* \"#utility.yul\":4647:4660   */\n      mload\n        /* \"#utility.yul\":4680:4743   */\n      tag_242\n        /* \"#utility.yul\":4739:4742   */\n      dup9\n        /* \"#utility.yul\":4724:4737   */\n      dup3\n        /* \"#utility.yul\":4680:4743   */\n      tag_221\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":4673:4743   */\n      swap8\n      pop\n        /* \"#utility.yul\":4766:4826   */\n      tag_243\n        /* \"#utility.yul\":4819:4825   */\n      dup4\n        /* \"#utility.yul\":4766:4826   */\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4756:4826   */\n      swap3\n      pop\n        /* \"#utility.yul\":4612:4836   */\n      pop\n        /* \"#utility.yul\":4599:4600   */\n      0x01\n        /* \"#utility.yul\":4596:4597   */\n      dup2\n        /* \"#utility.yul\":4592:4601   */\n      add\n        /* \"#utility.yul\":4587:4601   */\n      swap1\n      pop\n        /* \"#utility.yul\":4552:4836   */\n      jump(tag_239)\n    tag_241:\n        /* \"#utility.yul\":4556:4570   */\n      pop\n        /* \"#utility.yul\":4852:4855   */\n      dup6\n        /* \"#utility.yul\":4845:4855   */\n      swap4\n      pop\n        /* \"#utility.yul\":4253:4861   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4129:4861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4867:5231   */\n    tag_245:\n        /* \"#utility.yul\":4955:4958   */\n      0x00\n        /* \"#utility.yul\":4983:5022   */\n      tag_247\n        /* \"#utility.yul\":5016:5021   */\n      dup3\n        /* \"#utility.yul\":4983:5022   */\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5038:5109   */\n      tag_249\n        /* \"#utility.yul\":5102:5108   */\n      dup2\n        /* \"#utility.yul\":5097:5100   */\n      dup6\n        /* \"#utility.yul\":5038:5109   */\n      tag_250\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":5031:5109   */\n      swap4\n      pop\n        /* \"#utility.yul\":5118:5170   */\n      tag_251\n        /* \"#utility.yul\":5163:5169   */\n      dup2\n        /* \"#utility.yul\":5158:5161   */\n      dup6\n        /* \"#utility.yul\":5151:5155   */\n      0x20\n        /* \"#utility.yul\":5144:5149   */\n      dup7\n        /* \"#utility.yul\":5140:5156   */\n      add\n        /* \"#utility.yul\":5118:5170   */\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5195:5224   */\n      tag_253\n        /* \"#utility.yul\":5217:5223   */\n      dup2\n        /* \"#utility.yul\":5195:5224   */\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5190:5193   */\n      dup5\n        /* \"#utility.yul\":5186:5225   */\n      add\n        /* \"#utility.yul\":5179:5225   */\n      swap2\n      pop\n        /* \"#utility.yul\":4959:5231   */\n      pop\n        /* \"#utility.yul\":4867:5231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5237:5603   */\n    tag_255:\n        /* \"#utility.yul\":5379:5382   */\n      0x00\n        /* \"#utility.yul\":5400:5467   */\n      tag_257\n        /* \"#utility.yul\":5464:5466   */\n      0x1b\n        /* \"#utility.yul\":5459:5462   */\n      dup4\n        /* \"#utility.yul\":5400:5467   */\n      tag_250\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5393:5467   */\n      swap2\n      pop\n        /* \"#utility.yul\":5476:5569   */\n      tag_258\n        /* \"#utility.yul\":5565:5568   */\n      dup3\n        /* \"#utility.yul\":5476:5569   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5594:5596   */\n      0x20\n        /* \"#utility.yul\":5589:5592   */\n      dup3\n        /* \"#utility.yul\":5585:5597   */\n      add\n        /* \"#utility.yul\":5578:5597   */\n      swap1\n      pop\n        /* \"#utility.yul\":5237:5603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5609:5975   */\n    tag_260:\n        /* \"#utility.yul\":5751:5754   */\n      0x00\n        /* \"#utility.yul\":5772:5839   */\n      tag_262\n        /* \"#utility.yul\":5836:5838   */\n      0x21\n        /* \"#utility.yul\":5831:5834   */\n      dup4\n        /* \"#utility.yul\":5772:5839   */\n      tag_250\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5765:5839   */\n      swap2\n      pop\n        /* \"#utility.yul\":5848:5941   */\n      tag_263\n        /* \"#utility.yul\":5937:5940   */\n      dup3\n        /* \"#utility.yul\":5848:5941   */\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":5966:5968   */\n      0x40\n        /* \"#utility.yul\":5961:5964   */\n      dup3\n        /* \"#utility.yul\":5957:5969   */\n      add\n        /* \"#utility.yul\":5950:5969   */\n      swap1\n      pop\n        /* \"#utility.yul\":5609:5975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5981:6099   */\n    tag_265:\n        /* \"#utility.yul\":6068:6092   */\n      tag_267\n        /* \"#utility.yul\":6086:6091   */\n      dup2\n        /* \"#utility.yul\":6068:6092   */\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":6063:6066   */\n      dup3\n        /* \"#utility.yul\":6056:6093   */\n      mstore\n        /* \"#utility.yul\":5981:6099   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6105:6327   */\n    tag_15:\n        /* \"#utility.yul\":6198:6202   */\n      0x00\n        /* \"#utility.yul\":6236:6238   */\n      0x20\n        /* \"#utility.yul\":6225:6234   */\n      dup3\n        /* \"#utility.yul\":6221:6239   */\n      add\n        /* \"#utility.yul\":6213:6239   */\n      swap1\n      pop\n        /* \"#utility.yul\":6249:6320   */\n      tag_270\n        /* \"#utility.yul\":6317:6318   */\n      0x00\n        /* \"#utility.yul\":6306:6315   */\n      dup4\n        /* \"#utility.yul\":6302:6319   */\n      add\n        /* \"#utility.yul\":6293:6299   */\n      dup5\n        /* \"#utility.yul\":6249:6320   */\n      tag_228\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":6105:6327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6333:6646   */\n    tag_162:\n        /* \"#utility.yul\":6446:6450   */\n      0x00\n        /* \"#utility.yul\":6484:6486   */\n      0x20\n        /* \"#utility.yul\":6473:6482   */\n      dup3\n        /* \"#utility.yul\":6469:6487   */\n      add\n        /* \"#utility.yul\":6461:6487   */\n      swap1\n      pop\n        /* \"#utility.yul\":6533:6542   */\n      dup2\n        /* \"#utility.yul\":6527:6531   */\n      dup2\n        /* \"#utility.yul\":6523:6543   */\n      sub\n        /* \"#utility.yul\":6519:6520   */\n      0x00\n        /* \"#utility.yul\":6508:6517   */\n      dup4\n        /* \"#utility.yul\":6504:6521   */\n      add\n        /* \"#utility.yul\":6497:6544   */\n      mstore\n        /* \"#utility.yul\":6561:6639   */\n      tag_272\n        /* \"#utility.yul\":6634:6638   */\n      dup2\n        /* \"#utility.yul\":6625:6631   */\n      dup5\n        /* \"#utility.yul\":6561:6639   */\n      tag_245\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":6553:6639   */\n      swap1\n      pop\n        /* \"#utility.yul\":6333:6646   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6652:7071   */\n    tag_155:\n        /* \"#utility.yul\":6818:6822   */\n      0x00\n        /* \"#utility.yul\":6856:6858   */\n      0x20\n        /* \"#utility.yul\":6845:6854   */\n      dup3\n        /* \"#utility.yul\":6841:6859   */\n      add\n        /* \"#utility.yul\":6833:6859   */\n      swap1\n      pop\n        /* \"#utility.yul\":6905:6914   */\n      dup2\n        /* \"#utility.yul\":6899:6903   */\n      dup2\n        /* \"#utility.yul\":6895:6915   */\n      sub\n        /* \"#utility.yul\":6891:6892   */\n      0x00\n        /* \"#utility.yul\":6880:6889   */\n      dup4\n        /* \"#utility.yul\":6876:6893   */\n      add\n        /* \"#utility.yul\":6869:6916   */\n      mstore\n        /* \"#utility.yul\":6933:7064   */\n      tag_274\n        /* \"#utility.yul\":7059:7063   */\n      dup2\n        /* \"#utility.yul\":6933:7064   */\n      tag_255\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":6925:7064   */\n      swap1\n      pop\n        /* \"#utility.yul\":6652:7071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7077:7496   */\n    tag_134:\n        /* \"#utility.yul\":7243:7247   */\n      0x00\n        /* \"#utility.yul\":7281:7283   */\n      0x20\n        /* \"#utility.yul\":7270:7279   */\n      dup3\n        /* \"#utility.yul\":7266:7284   */\n      add\n        /* \"#utility.yul\":7258:7284   */\n      swap1\n      pop\n        /* \"#utility.yul\":7330:7339   */\n      dup2\n        /* \"#utility.yul\":7324:7328   */\n      dup2\n        /* \"#utility.yul\":7320:7340   */\n      sub\n        /* \"#utility.yul\":7316:7317   */\n      0x00\n        /* \"#utility.yul\":7305:7314   */\n      dup4\n        /* \"#utility.yul\":7301:7318   */\n      add\n        /* \"#utility.yul\":7294:7341   */\n      mstore\n        /* \"#utility.yul\":7358:7489   */\n      tag_276\n        /* \"#utility.yul\":7484:7488   */\n      dup2\n        /* \"#utility.yul\":7358:7489   */\n      tag_260\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7350:7489   */\n      swap1\n      pop\n        /* \"#utility.yul\":7077:7496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7502:7724   */\n    tag_11:\n        /* \"#utility.yul\":7595:7599   */\n      0x00\n        /* \"#utility.yul\":7633:7635   */\n      0x20\n        /* \"#utility.yul\":7622:7631   */\n      dup3\n        /* \"#utility.yul\":7618:7636   */\n      add\n        /* \"#utility.yul\":7610:7636   */\n      swap1\n      pop\n        /* \"#utility.yul\":7646:7717   */\n      tag_278\n        /* \"#utility.yul\":7714:7715   */\n      0x00\n        /* \"#utility.yul\":7703:7712   */\n      dup4\n        /* \"#utility.yul\":7699:7716   */\n      add\n        /* \"#utility.yul\":7690:7696   */\n      dup5\n        /* \"#utility.yul\":7646:7717   */\n      tag_265\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":7502:7724   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7730:8213   */\n    tag_118:\n        /* \"#utility.yul\":7901:7905   */\n      0x00\n        /* \"#utility.yul\":7939:7941   */\n      0x40\n        /* \"#utility.yul\":7928:7937   */\n      dup3\n        /* \"#utility.yul\":7924:7942   */\n      add\n        /* \"#utility.yul\":7916:7942   */\n      swap1\n      pop\n        /* \"#utility.yul\":7952:8023   */\n      tag_280\n        /* \"#utility.yul\":8020:8021   */\n      0x00\n        /* \"#utility.yul\":8009:8018   */\n      dup4\n        /* \"#utility.yul\":8005:8022   */\n      add\n        /* \"#utility.yul\":7996:8002   */\n      dup6\n        /* \"#utility.yul\":7952:8023   */\n      tag_265\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":8070:8079   */\n      dup2\n        /* \"#utility.yul\":8064:8068   */\n      dup2\n        /* \"#utility.yul\":8060:8080   */\n      sub\n        /* \"#utility.yul\":8055:8057   */\n      0x20\n        /* \"#utility.yul\":8044:8053   */\n      dup4\n        /* \"#utility.yul\":8040:8058   */\n      add\n        /* \"#utility.yul\":8033:8081   */\n      mstore\n        /* \"#utility.yul\":8098:8206   */\n      tag_281\n        /* \"#utility.yul\":8201:8205   */\n      dup2\n        /* \"#utility.yul\":8192:8198   */\n      dup5\n        /* \"#utility.yul\":8098:8206   */\n      tag_231\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":8090:8206   */\n      swap1\n      pop\n        /* \"#utility.yul\":7730:8213   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8219:8348   */\n    tag_170:\n        /* \"#utility.yul\":8253:8259   */\n      0x00\n        /* \"#utility.yul\":8280:8300   */\n      tag_283\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8270:8300   */\n      swap1\n      pop\n        /* \"#utility.yul\":8309:8342   */\n      tag_285\n        /* \"#utility.yul\":8337:8341   */\n      dup3\n        /* \"#utility.yul\":8329:8335   */\n      dup3\n        /* \"#utility.yul\":8309:8342   */\n      tag_286\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":8219:8348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8354:8429   */\n    tag_284:\n        /* \"#utility.yul\":8387:8393   */\n      0x00\n        /* \"#utility.yul\":8420:8422   */\n      0x40\n        /* \"#utility.yul\":8414:8423   */\n      mload\n        /* \"#utility.yul\":8404:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8354:8429   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":8435:8746   */\n    tag_169:\n        /* \"#utility.yul\":8512:8516   */\n      0x00\n        /* \"#utility.yul\":8602:8620   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8594:8600   */\n      dup3\n        /* \"#utility.yul\":8591:8621   */\n      gt\n        /* \"#utility.yul\":8588:8644   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":8624:8642   */\n      tag_290\n      tag_108\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8588:8644   */\n    tag_289:\n        /* \"#utility.yul\":8674:8678   */\n      0x20\n        /* \"#utility.yul\":8666:8672   */\n      dup3\n        /* \"#utility.yul\":8662:8679   */\n      mul\n        /* \"#utility.yul\":8654:8679   */\n      swap1\n      pop\n        /* \"#utility.yul\":8734:8738   */\n      0x20\n        /* \"#utility.yul\":8728:8732   */\n      dup2\n        /* \"#utility.yul\":8724:8739   */\n      add\n        /* \"#utility.yul\":8716:8739   */\n      swap1\n      pop\n        /* \"#utility.yul\":8435:8746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8752:8884   */\n    tag_238:\n        /* \"#utility.yul\":8819:8823   */\n      0x00\n        /* \"#utility.yul\":8842:8845   */\n      dup2\n        /* \"#utility.yul\":8834:8845   */\n      swap1\n      pop\n        /* \"#utility.yul\":8872:8876   */\n      0x20\n        /* \"#utility.yul\":8867:8870   */\n      dup3\n        /* \"#utility.yul\":8863:8877   */\n      add\n        /* \"#utility.yul\":8855:8877   */\n      swap1\n      pop\n        /* \"#utility.yul\":8752:8884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8890:9004   */\n    tag_234:\n        /* \"#utility.yul\":8957:8963   */\n      0x00\n        /* \"#utility.yul\":8991:8996   */\n      dup2\n        /* \"#utility.yul\":8985:8997   */\n      mload\n        /* \"#utility.yul\":8975:8997   */\n      swap1\n      pop\n        /* \"#utility.yul\":8890:9004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9010:9109   */\n    tag_248:\n        /* \"#utility.yul\":9062:9068   */\n      0x00\n        /* \"#utility.yul\":9096:9101   */\n      dup2\n        /* \"#utility.yul\":9090:9102   */\n      mload\n        /* \"#utility.yul\":9080:9102   */\n      swap1\n      pop\n        /* \"#utility.yul\":9010:9109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9115:9228   */\n    tag_244:\n        /* \"#utility.yul\":9185:9189   */\n      0x00\n        /* \"#utility.yul\":9217:9221   */\n      0x20\n        /* \"#utility.yul\":9212:9215   */\n      dup3\n        /* \"#utility.yul\":9208:9222   */\n      add\n        /* \"#utility.yul\":9200:9222   */\n      swap1\n      pop\n        /* \"#utility.yul\":9115:9228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9234:9418   */\n    tag_236:\n        /* \"#utility.yul\":9333:9344   */\n      0x00\n        /* \"#utility.yul\":9367:9373   */\n      dup3\n        /* \"#utility.yul\":9362:9365   */\n      dup3\n        /* \"#utility.yul\":9355:9374   */\n      mstore\n        /* \"#utility.yul\":9407:9411   */\n      0x20\n        /* \"#utility.yul\":9402:9405   */\n      dup3\n        /* \"#utility.yul\":9398:9412   */\n      add\n        /* \"#utility.yul\":9383:9412   */\n      swap1\n      pop\n        /* \"#utility.yul\":9234:9418   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9424:9593   */\n    tag_250:\n        /* \"#utility.yul\":9508:9519   */\n      0x00\n        /* \"#utility.yul\":9542:9548   */\n      dup3\n        /* \"#utility.yul\":9537:9540   */\n      dup3\n        /* \"#utility.yul\":9530:9549   */\n      mstore\n        /* \"#utility.yul\":9582:9586   */\n      0x20\n        /* \"#utility.yul\":9577:9580   */\n      dup3\n        /* \"#utility.yul\":9573:9587   */\n      add\n        /* \"#utility.yul\":9558:9587   */\n      swap1\n      pop\n        /* \"#utility.yul\":9424:9593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9599:9904   */\n    tag_152:\n        /* \"#utility.yul\":9639:9642   */\n      0x00\n        /* \"#utility.yul\":9658:9678   */\n      tag_298\n        /* \"#utility.yul\":9676:9677   */\n      dup3\n        /* \"#utility.yul\":9658:9678   */\n      tag_268\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":9653:9678   */\n      swap2\n      pop\n        /* \"#utility.yul\":9692:9712   */\n      tag_299\n        /* \"#utility.yul\":9710:9711   */\n      dup4\n        /* \"#utility.yul\":9692:9712   */\n      tag_268\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9687:9712   */\n      swap3\n      pop\n        /* \"#utility.yul\":9846:9847   */\n      dup3\n        /* \"#utility.yul\":9778:9844   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9774:9848   */\n      sub\n        /* \"#utility.yul\":9771:9772   */\n      dup3\n        /* \"#utility.yul\":9768:9849   */\n      gt\n        /* \"#utility.yul\":9765:9872   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":9852:9870   */\n      tag_301\n      tag_302\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":9765:9872   */\n    tag_300:\n        /* \"#utility.yul\":9896:9897   */\n      dup3\n        /* \"#utility.yul\":9893:9894   */\n      dup3\n        /* \"#utility.yul\":9889:9898   */\n      add\n        /* \"#utility.yul\":9882:9898   */\n      swap1\n      pop\n        /* \"#utility.yul\":9599:9904   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9910:10095   */\n    tag_131:\n        /* \"#utility.yul\":9950:9951   */\n      0x00\n        /* \"#utility.yul\":9967:9987   */\n      tag_304\n        /* \"#utility.yul\":9985:9986   */\n      dup3\n        /* \"#utility.yul\":9967:9987   */\n      tag_268\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":9962:9987   */\n      swap2\n      pop\n        /* \"#utility.yul\":10001:10021   */\n      tag_305\n        /* \"#utility.yul\":10019:10020   */\n      dup4\n        /* \"#utility.yul\":10001:10021   */\n      tag_268\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":9996:10021   */\n      swap3\n      pop\n        /* \"#utility.yul\":10040:10041   */\n      dup3\n        /* \"#utility.yul\":10030:10065   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":10045:10063   */\n      tag_307\n      tag_308\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":10030:10065   */\n    tag_306:\n        /* \"#utility.yul\":10087:10088   */\n      dup3\n        /* \"#utility.yul\":10084:10085   */\n      dup3\n        /* \"#utility.yul\":10080:10089   */\n      div\n        /* \"#utility.yul\":10075:10089   */\n      swap1\n      pop\n        /* \"#utility.yul\":9910:10095   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10101:10449   */\n    tag_129:\n        /* \"#utility.yul\":10141:10148   */\n      0x00\n        /* \"#utility.yul\":10164:10184   */\n      tag_310\n        /* \"#utility.yul\":10182:10183   */\n      dup3\n        /* \"#utility.yul\":10164:10184   */\n      tag_268\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":10159:10184   */\n      swap2\n      pop\n        /* \"#utility.yul\":10198:10218   */\n      tag_311\n        /* \"#utility.yul\":10216:10217   */\n      dup4\n        /* \"#utility.yul\":10198:10218   */\n      tag_268\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":10193:10218   */\n      swap3\n      pop\n        /* \"#utility.yul\":10386:10387   */\n      dup2\n        /* \"#utility.yul\":10318:10384   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10314:10388   */\n      div\n        /* \"#utility.yul\":10311:10312   */\n      dup4\n        /* \"#utility.yul\":10308:10389   */\n      gt\n        /* \"#utility.yul\":10303:10304   */\n      dup3\n        /* \"#utility.yul\":10296:10305   */\n      iszero\n        /* \"#utility.yul\":10289:10306   */\n      iszero\n        /* \"#utility.yul\":10285:10390   */\n      and\n        /* \"#utility.yul\":10282:10413   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":10393:10411   */\n      tag_313\n      tag_302\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":10282:10413   */\n    tag_312:\n        /* \"#utility.yul\":10441:10442   */\n      dup3\n        /* \"#utility.yul\":10438:10439   */\n      dup3\n        /* \"#utility.yul\":10434:10443   */\n      mul\n        /* \"#utility.yul\":10423:10443   */\n      swap1\n      pop\n        /* \"#utility.yul\":10101:10449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10455:10551   */\n    tag_227:\n        /* \"#utility.yul\":10492:10499   */\n      0x00\n        /* \"#utility.yul\":10521:10545   */\n      tag_315\n        /* \"#utility.yul\":10539:10544   */\n      dup3\n        /* \"#utility.yul\":10521:10545   */\n      tag_316\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":10510:10545   */\n      swap1\n      pop\n        /* \"#utility.yul\":10455:10551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10557:10667   */\n    tag_317:\n        /* \"#utility.yul\":10608:10615   */\n      0x00\n        /* \"#utility.yul\":10637:10661   */\n      tag_319\n        /* \"#utility.yul\":10655:10660   */\n      dup3\n        /* \"#utility.yul\":10637:10661   */\n      tag_227\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":10626:10661   */\n      swap1\n      pop\n        /* \"#utility.yul\":10557:10667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10673:10779   */\n    tag_320:\n        /* \"#utility.yul\":10720:10727   */\n      0x00\n        /* \"#utility.yul\":10749:10773   */\n      tag_322\n        /* \"#utility.yul\":10767:10772   */\n      dup3\n        /* \"#utility.yul\":10749:10773   */\n      tag_227\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":10738:10773   */\n      swap1\n      pop\n        /* \"#utility.yul\":10673:10779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10785:10895   */\n    tag_323:\n        /* \"#utility.yul\":10836:10843   */\n      0x00\n        /* \"#utility.yul\":10865:10889   */\n      tag_325\n        /* \"#utility.yul\":10883:10888   */\n      dup3\n        /* \"#utility.yul\":10865:10889   */\n      tag_227\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":10854:10889   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10901:11027   */\n    tag_316:\n        /* \"#utility.yul\":10938:10945   */\n      0x00\n        /* \"#utility.yul\":10978:11020   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10971:10976   */\n      dup3\n        /* \"#utility.yul\":10967:11021   */\n      and\n        /* \"#utility.yul\":10956:11021   */\n      swap1\n      pop\n        /* \"#utility.yul\":10901:11027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11033:11110   */\n    tag_268:\n        /* \"#utility.yul\":11070:11077   */\n      0x00\n        /* \"#utility.yul\":11099:11104   */\n      dup2\n        /* \"#utility.yul\":11088:11104   */\n      swap1\n      pop\n        /* \"#utility.yul\":11033:11110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11116:11423   */\n    tag_252:\n        /* \"#utility.yul\":11184:11185   */\n      0x00\n        /* \"#utility.yul\":11194:11307   */\n    tag_329:\n        /* \"#utility.yul\":11208:11214   */\n      dup4\n        /* \"#utility.yul\":11205:11206   */\n      dup2\n        /* \"#utility.yul\":11202:11215   */\n      lt\n        /* \"#utility.yul\":11194:11307   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":11293:11294   */\n      dup1\n        /* \"#utility.yul\":11288:11291   */\n      dup3\n        /* \"#utility.yul\":11284:11295   */\n      add\n        /* \"#utility.yul\":11278:11296   */\n      mload\n        /* \"#utility.yul\":11274:11275   */\n      dup2\n        /* \"#utility.yul\":11269:11272   */\n      dup5\n        /* \"#utility.yul\":11265:11276   */\n      add\n        /* \"#utility.yul\":11258:11297   */\n      mstore\n        /* \"#utility.yul\":11230:11232   */\n      0x20\n        /* \"#utility.yul\":11227:11228   */\n      dup2\n        /* \"#utility.yul\":11223:11233   */\n      add\n        /* \"#utility.yul\":11218:11233   */\n      swap1\n      pop\n        /* \"#utility.yul\":11194:11307   */\n      jump(tag_329)\n    tag_331:\n        /* \"#utility.yul\":11325:11331   */\n      dup4\n        /* \"#utility.yul\":11322:11323   */\n      dup2\n        /* \"#utility.yul\":11319:11332   */\n      gt\n        /* \"#utility.yul\":11316:11417   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":11405:11406   */\n      0x00\n        /* \"#utility.yul\":11396:11402   */\n      dup5\n        /* \"#utility.yul\":11391:11394   */\n      dup5\n        /* \"#utility.yul\":11387:11403   */\n      add\n        /* \"#utility.yul\":11380:11407   */\n      mstore\n        /* \"#utility.yul\":11316:11417   */\n    tag_332:\n        /* \"#utility.yul\":11165:11423   */\n      pop\n        /* \"#utility.yul\":11116:11423   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11429:11710   */\n    tag_286:\n        /* \"#utility.yul\":11512:11539   */\n      tag_334\n        /* \"#utility.yul\":11534:11538   */\n      dup3\n        /* \"#utility.yul\":11512:11539   */\n      tag_254\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":11504:11510   */\n      dup2\n        /* \"#utility.yul\":11500:11540   */\n      add\n        /* \"#utility.yul\":11642:11648   */\n      dup2\n        /* \"#utility.yul\":11630:11640   */\n      dup2\n        /* \"#utility.yul\":11627:11649   */\n      lt\n        /* \"#utility.yul\":11606:11624   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11594:11604   */\n      dup3\n        /* \"#utility.yul\":11591:11625   */\n      gt\n        /* \"#utility.yul\":11588:11650   */\n      or\n        /* \"#utility.yul\":11585:11673   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":11653:11671   */\n      tag_336\n      tag_108\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":11585:11673   */\n    tag_335:\n        /* \"#utility.yul\":11693:11703   */\n      dup1\n        /* \"#utility.yul\":11689:11691   */\n      0x40\n        /* \"#utility.yul\":11682:11704   */\n      mstore\n        /* \"#utility.yul\":11472:11710   */\n      pop\n        /* \"#utility.yul\":11429:11710   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11716:11896   */\n    tag_302:\n        /* \"#utility.yul\":11764:11841   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11761:11762   */\n      0x00\n        /* \"#utility.yul\":11754:11842   */\n      mstore\n        /* \"#utility.yul\":11861:11865   */\n      0x11\n        /* \"#utility.yul\":11858:11859   */\n      0x04\n        /* \"#utility.yul\":11851:11866   */\n      mstore\n        /* \"#utility.yul\":11885:11889   */\n      0x24\n        /* \"#utility.yul\":11882:11883   */\n      0x00\n        /* \"#utility.yul\":11875:11890   */\n      revert\n        /* \"#utility.yul\":11902:12082   */\n    tag_308:\n        /* \"#utility.yul\":11950:12027   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11947:11948   */\n      0x00\n        /* \"#utility.yul\":11940:12028   */\n      mstore\n        /* \"#utility.yul\":12047:12051   */\n      0x12\n        /* \"#utility.yul\":12044:12045   */\n      0x04\n        /* \"#utility.yul\":12037:12052   */\n      mstore\n        /* \"#utility.yul\":12071:12075   */\n      0x24\n        /* \"#utility.yul\":12068:12069   */\n      0x00\n        /* \"#utility.yul\":12061:12076   */\n      revert\n        /* \"#utility.yul\":12088:12268   */\n    tag_112:\n        /* \"#utility.yul\":12136:12213   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12133:12134   */\n      0x00\n        /* \"#utility.yul\":12126:12214   */\n      mstore\n        /* \"#utility.yul\":12233:12237   */\n      0x32\n        /* \"#utility.yul\":12230:12231   */\n      0x04\n        /* \"#utility.yul\":12223:12238   */\n      mstore\n        /* \"#utility.yul\":12257:12261   */\n      0x24\n        /* \"#utility.yul\":12254:12255   */\n      0x00\n        /* \"#utility.yul\":12247:12262   */\n      revert\n        /* \"#utility.yul\":12274:12454   */\n    tag_108:\n        /* \"#utility.yul\":12322:12399   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12319:12320   */\n      0x00\n        /* \"#utility.yul\":12312:12400   */\n      mstore\n        /* \"#utility.yul\":12419:12423   */\n      0x41\n        /* \"#utility.yul\":12416:12417   */\n      0x04\n        /* \"#utility.yul\":12409:12424   */\n      mstore\n        /* \"#utility.yul\":12443:12447   */\n      0x24\n        /* \"#utility.yul\":12440:12441   */\n      0x00\n        /* \"#utility.yul\":12433:12448   */\n      revert\n        /* \"#utility.yul\":12460:12577   */\n    tag_183:\n        /* \"#utility.yul\":12569:12570   */\n      0x00\n        /* \"#utility.yul\":12566:12567   */\n      dup1\n        /* \"#utility.yul\":12559:12571   */\n      revert\n        /* \"#utility.yul\":12583:12700   */\n    tag_173:\n        /* \"#utility.yul\":12692:12693   */\n      0x00\n        /* \"#utility.yul\":12689:12690   */\n      dup1\n        /* \"#utility.yul\":12682:12694   */\n      revert\n        /* \"#utility.yul\":12706:12823   */\n    tag_206:\n        /* \"#utility.yul\":12815:12816   */\n      0x00\n        /* \"#utility.yul\":12812:12813   */\n      dup1\n        /* \"#utility.yul\":12805:12817   */\n      revert\n        /* \"#utility.yul\":12829:12946   */\n    tag_203:\n        /* \"#utility.yul\":12938:12939   */\n      0x00\n        /* \"#utility.yul\":12935:12936   */\n      dup1\n        /* \"#utility.yul\":12928:12940   */\n      revert\n        /* \"#utility.yul\":12952:13054   */\n    tag_254:\n        /* \"#utility.yul\":12993:12999   */\n      0x00\n        /* \"#utility.yul\":13044:13046   */\n      0x1f\n        /* \"#utility.yul\":13040:13047   */\n      not\n        /* \"#utility.yul\":13035:13037   */\n      0x1f\n        /* \"#utility.yul\":13028:13033   */\n      dup4\n        /* \"#utility.yul\":13024:13038   */\n      add\n        /* \"#utility.yul\":13020:13048   */\n      and\n        /* \"#utility.yul\":13010:13048   */\n      swap1\n      pop\n        /* \"#utility.yul\":12952:13054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13060:13237   */\n    tag_259:\n        /* \"#utility.yul\":13200:13229   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":13196:13197   */\n      0x00\n        /* \"#utility.yul\":13188:13194   */\n      dup3\n        /* \"#utility.yul\":13184:13198   */\n      add\n        /* \"#utility.yul\":13177:13230   */\n      mstore\n        /* \"#utility.yul\":13060:13237   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13243:13463   */\n    tag_264:\n        /* \"#utility.yul\":13383:13417   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":13379:13380   */\n      0x00\n        /* \"#utility.yul\":13371:13377   */\n      dup3\n        /* \"#utility.yul\":13367:13381   */\n      add\n        /* \"#utility.yul\":13360:13418   */\n      mstore\n        /* \"#utility.yul\":13452:13455   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13447:13449   */\n      0x20\n        /* \"#utility.yul\":13439:13445   */\n      dup3\n        /* \"#utility.yul\":13435:13450   */\n      add\n        /* \"#utility.yul\":13428:13456   */\n      mstore\n        /* \"#utility.yul\":13243:13463   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13469:13619   */\n    tag_188:\n        /* \"#utility.yul\":13556:13594   */\n      tag_349\n        /* \"#utility.yul\":13588:13593   */\n      dup2\n        /* \"#utility.yul\":13556:13594   */\n      tag_317\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":13549:13554   */\n      dup2\n        /* \"#utility.yul\":13546:13595   */\n      eq\n        /* \"#utility.yul\":13536:13613   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":13609:13610   */\n      0x00\n        /* \"#utility.yul\":13606:13607   */\n      dup1\n        /* \"#utility.yul\":13599:13611   */\n      revert\n        /* \"#utility.yul\":13536:13613   */\n    tag_350:\n        /* \"#utility.yul\":13469:13619   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13625:13767   */\n    tag_192:\n        /* \"#utility.yul\":13708:13742   */\n      tag_352\n        /* \"#utility.yul\":13736:13741   */\n      dup2\n        /* \"#utility.yul\":13708:13742   */\n      tag_320\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":13701:13706   */\n      dup2\n        /* \"#utility.yul\":13698:13743   */\n      eq\n        /* \"#utility.yul\":13688:13761   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":13757:13758   */\n      0x00\n        /* \"#utility.yul\":13754:13755   */\n      dup1\n        /* \"#utility.yul\":13747:13759   */\n      revert\n        /* \"#utility.yul\":13688:13761   */\n    tag_353:\n        /* \"#utility.yul\":13625:13767   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13773:13923   */\n    tag_196:\n        /* \"#utility.yul\":13860:13898   */\n      tag_355\n        /* \"#utility.yul\":13892:13897   */\n      dup2\n        /* \"#utility.yul\":13860:13898   */\n      tag_323\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":13853:13858   */\n      dup2\n        /* \"#utility.yul\":13850:13899   */\n      eq\n        /* \"#utility.yul\":13840:13917   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":13913:13914   */\n      0x00\n        /* \"#utility.yul\":13910:13911   */\n      dup1\n        /* \"#utility.yul\":13903:13915   */\n      revert\n        /* \"#utility.yul\":13840:13917   */\n    tag_356:\n        /* \"#utility.yul\":13773:13923   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13929:14051   */\n    tag_199:\n        /* \"#utility.yul\":14002:14026   */\n      tag_358\n        /* \"#utility.yul\":14020:14025   */\n      dup2\n        /* \"#utility.yul\":14002:14026   */\n      tag_268\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":13995:14000   */\n      dup2\n        /* \"#utility.yul\":13992:14027   */\n      eq\n        /* \"#utility.yul\":13982:14045   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":14041:14042   */\n      0x00\n        /* \"#utility.yul\":14038:14039   */\n      dup1\n        /* \"#utility.yul\":14031:14043   */\n      revert\n        /* \"#utility.yul\":13982:14045   */\n    tag_359:\n        /* \"#utility.yul\":13929:14051   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ab785c3b892b4e6228511d6f72bb6a7c800bf495e5ee2eba1d102083615dd76364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ae13d989dac2f0debff460ac112a837c89baa7cd6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507378867bbeef44f2326bf8ddd1941a4439382ef2a7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002553480156100c557600080fd5b5061175f806100d56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063344e49d914610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b91906110c0565b6100b2565b60405161006d91906112cc565b60405180910390f35b61007e61098f565b60405161008b919061124f565b60405180910390f35b61009c6109b5565b6040516100a9919061124f565b60405180910390f35b60008060008473ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156100fd57600080fd5b505afa158015610111573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101359190611093565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461032c57610325610211858773ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156101d457600080fd5b505afa1580156101e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020c9190611093565b6109d9565b8673ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561025757600080fd5b505afa15801561026b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028f9190611093565b73ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b81526004016102c7919061124f565b60206040518083038186803b1580156102df57600080fd5b505afa1580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103179190611100565b610c0d90919063ffffffff16565b91506104cd565b6104ca6103b6858773ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561037957600080fd5b505afa15801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b19190611093565b610c88565b8673ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156103fc57600080fd5b505afa158015610410573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104349190611093565b73ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b815260040161046c919061124f565b60206040518083038186803b15801561048457600080fd5b505afa158015610498573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bc9190611100565b610c0d90919063ffffffff16565b91505b8473ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561051357600080fd5b505afa158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190611093565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107425761073b610627858773ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156105ea57600080fd5b505afa1580156105fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106229190611093565b6109d9565b8673ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561066d57600080fd5b505afa158015610681573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a59190611093565b73ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b81526004016106dd919061124f565b60206040518083038186803b1580156106f557600080fd5b505afa158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d9190611100565b610c0d90919063ffffffff16565b90506108e3565b6108e06107cc858773ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561078f57600080fd5b505afa1580156107a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c79190611093565b610c88565b8673ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561081257600080fd5b505afa158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a9190611093565b73ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b8152600401610882919061124f565b60206040518083038186803b15801561089a57600080fd5b505afa1580156108ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d29190611100565b610c0d90919063ffffffff16565b90505b6109858573ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561092c57600080fd5b505afa158015610940573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109649190611100565b6109778385610e4d90919063ffffffff16565b610eab90919063ffffffff16565b9250505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600367ffffffffffffffff8111156109f7576109f6611601565b5b604051908082528060200260200182016040528015610a255781602001602082028036833780820191505090505b5090508281600081518110610a3d57610a3c6115d2565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600181518110610aac57610aab6115d2565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600281518110610b1d57610b1c6115d2565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b8152600401610b949291906112e7565b60006040518083038186803b158015610bac57600080fd5b505afa158015610bc0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610be9919061104a565b600281518110610bfc57610bfb6115d2565b5b602002602001015191505092915050565b600080831415610c205760009050610c82565b60008284610c2e9190611444565b9050828482610c3d9190611413565b14610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c74906112ac565b60405180910390fd5b809150505b92915050565b600080600267ffffffffffffffff811115610ca657610ca5611601565b5b604051908082528060200260200182016040528015610cd45781602001602082028036833780820191505090505b5090508281600081518110610cec57610ceb6115d2565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600181518110610d5d57610d5c6115d2565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b8152600401610dd49291906112e7565b60006040518083038186803b158015610dec57600080fd5b505afa158015610e00573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610e29919061104a565b600181518110610e3c57610e3b6115d2565b5b602002602001015191505092915050565b6000808284610e5c91906113bd565b905083811015610ea1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e989061128c565b60405180910390fd5b8091505092915050565b6000610eed83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610ef5565b905092915050565b60008083118290610f3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f33919061126a565b60405180910390fd5b5060008385610f4b9190611413565b9050809150509392505050565b6000610f6b610f668461133c565b611317565b90508083825260208201905082856020860282011115610f8e57610f8d611635565b5b60005b85811015610fbe5781610fa48882611035565b845260208401935060208301925050600181019050610f91565b5050509392505050565b600082601f830112610fdd57610fdc611630565b5b8151610fed848260208601610f58565b91505092915050565b600081519050611005816116cd565b92915050565b60008135905061101a816116e4565b92915050565b60008135905061102f816116fb565b92915050565b60008151905061104481611712565b92915050565b6000602082840312156110605761105f61163f565b5b600082015167ffffffffffffffff81111561107e5761107d61163a565b5b61108a84828501610fc8565b91505092915050565b6000602082840312156110a9576110a861163f565b5b60006110b784828501610ff6565b91505092915050565b600080604083850312156110d7576110d661163f565b5b60006110e58582860161100b565b92505060206110f685828601611020565b9150509250929050565b6000602082840312156111165761111561163f565b5b600061112484828501611035565b91505092915050565b60006111398383611145565b60208301905092915050565b61114e8161149e565b82525050565b61115d8161149e565b82525050565b600061116e82611378565b611178818561139b565b935061118383611368565b8060005b838110156111b457815161119b888261112d565b97506111a68361138e565b925050600181019050611187565b5085935050505092915050565b60006111cc82611383565b6111d681856113ac565b93506111e6818560208601611510565b6111ef81611644565b840191505092915050565b6000611207601b836113ac565b915061121282611655565b602082019050919050565b600061122a6021836113ac565b91506112358261167e565b604082019050919050565b61124981611506565b82525050565b60006020820190506112646000830184611154565b92915050565b6000602082019050818103600083015261128481846111c1565b905092915050565b600060208201905081810360008301526112a5816111fa565b9050919050565b600060208201905081810360008301526112c58161121d565b9050919050565b60006020820190506112e16000830184611240565b92915050565b60006040820190506112fc6000830185611240565b818103602083015261130e8184611163565b90509392505050565b6000611321611332565b905061132d8282611543565b919050565b6000604051905090565b600067ffffffffffffffff82111561135757611356611601565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113c882611506565b91506113d383611506565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561140857611407611574565b5b828201905092915050565b600061141e82611506565b915061142983611506565b925082611439576114386115a3565b5b828204905092915050565b600061144f82611506565b915061145a83611506565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561149357611492611574565b5b828202905092915050565b60006114a9826114e6565b9050919050565b60006114bb8261149e565b9050919050565b60006114cd8261149e565b9050919050565b60006114df8261149e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561152e578082015181840152602081019050611513565b8381111561153d576000848401525b50505050565b61154c82611644565b810181811067ffffffffffffffff8211171561156b5761156a611601565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6116d6816114b0565b81146116e157600080fd5b50565b6116ed816114c2565b81146116f857600080fd5b50565b611704816114d4565b811461170f57600080fd5b50565b61171b81611506565b811461172657600080fd5b5056fea2646970667358221220ab785c3b892b4e6228511d6f72bb6a7c800bf495e5ee2eba1d102083615dd76364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAE13D989DAC2F0DEBFF460AC112A837C89BAA7CD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x78867BBEEF44F2326BF8DDD1941A4439382EF2A7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175F DUP1 PUSH2 0xD5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x344E49D9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x10C0 JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x111 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x32C JUMPI PUSH2 0x325 PUSH2 0x211 DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH2 0x9D9 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0xC0D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x4CA PUSH2 0x3B6 DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH2 0xC88 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x410 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x498 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0xC0D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x527 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x742 JUMPI PUSH2 0x73B PUSH2 0x627 DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x622 SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH2 0x9D9 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x681 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x709 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x72D SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0xC0D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8E3 JUMP JUMPDEST PUSH2 0x8E0 PUSH2 0x7CC DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x78F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C7 SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH2 0xC88 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x826 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84A SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D2 SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0xC0D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x985 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x940 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x964 SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0x977 DUP4 DUP6 PUSH2 0xE4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9F7 JUMPI PUSH2 0x9F6 PUSH2 0x1601 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA25 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA3D JUMPI PUSH2 0xA3C PUSH2 0x15D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xAAC JUMPI PUSH2 0xAAB PUSH2 0x15D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xB1D JUMPI PUSH2 0xB1C PUSH2 0x15D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB94 SWAP3 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xBFC JUMPI PUSH2 0xBFB PUSH2 0x15D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0xC20 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0xC2E SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1413 JUMP JUMPDEST EQ PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC74 SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA6 JUMPI PUSH2 0xCA5 PUSH2 0x1601 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCD4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0x15D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD5D JUMPI PUSH2 0xD5C PUSH2 0x15D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD4 SWAP3 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE29 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE3C JUMPI PUSH2 0xE3B PUSH2 0x15D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xE5C SWAP2 SWAP1 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE98 SWAP1 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEED DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xEF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0xF3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF33 SWAP2 SWAP1 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0xF4B SWAP2 SWAP1 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6B PUSH2 0xF66 DUP5 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x1317 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xF8E JUMPI PUSH2 0xF8D PUSH2 0x1635 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xFBE JUMPI DUP2 PUSH2 0xFA4 DUP9 DUP3 PUSH2 0x1035 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xF91 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFDD JUMPI PUSH2 0xFDC PUSH2 0x1630 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xFED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1005 DUP2 PUSH2 0x16CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x101A DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x102F DUP2 PUSH2 0x16FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1044 DUP2 PUSH2 0x1712 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1060 JUMPI PUSH2 0x105F PUSH2 0x163F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x107E JUMPI PUSH2 0x107D PUSH2 0x163A JUMP JUMPDEST JUMPDEST PUSH2 0x108A DUP5 DUP3 DUP6 ADD PUSH2 0xFC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10A9 JUMPI PUSH2 0x10A8 PUSH2 0x163F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10B7 DUP5 DUP3 DUP6 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10D7 JUMPI PUSH2 0x10D6 PUSH2 0x163F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10E5 DUP6 DUP3 DUP7 ADD PUSH2 0x100B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10F6 DUP6 DUP3 DUP7 ADD PUSH2 0x1020 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1116 JUMPI PUSH2 0x1115 PUSH2 0x163F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1124 DUP5 DUP3 DUP6 ADD PUSH2 0x1035 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1139 DUP4 DUP4 PUSH2 0x1145 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x114E DUP2 PUSH2 0x149E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x115D DUP2 PUSH2 0x149E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x116E DUP3 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x1178 DUP2 DUP6 PUSH2 0x139B JUMP JUMPDEST SWAP4 POP PUSH2 0x1183 DUP4 PUSH2 0x1368 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11B4 JUMPI DUP2 MLOAD PUSH2 0x119B DUP9 DUP3 PUSH2 0x112D JUMP JUMPDEST SWAP8 POP PUSH2 0x11A6 DUP4 PUSH2 0x138E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1187 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CC DUP3 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x11D6 DUP2 DUP6 PUSH2 0x13AC JUMP JUMPDEST SWAP4 POP PUSH2 0x11E6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x11EF DUP2 PUSH2 0x1644 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1207 PUSH1 0x1B DUP4 PUSH2 0x13AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1212 DUP3 PUSH2 0x1655 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122A PUSH1 0x21 DUP4 PUSH2 0x13AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1235 DUP3 PUSH2 0x167E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1249 DUP2 PUSH2 0x1506 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1264 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1154 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1284 DUP2 DUP5 PUSH2 0x11C1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12A5 DUP2 PUSH2 0x11FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12C5 DUP2 PUSH2 0x121D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1240 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12FC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1240 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x130E DUP2 DUP5 PUSH2 0x1163 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1321 PUSH2 0x1332 JUMP JUMPDEST SWAP1 POP PUSH2 0x132D DUP3 DUP3 PUSH2 0x1543 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1357 JUMPI PUSH2 0x1356 PUSH2 0x1601 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C8 DUP3 PUSH2 0x1506 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D3 DUP4 PUSH2 0x1506 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1408 JUMPI PUSH2 0x1407 PUSH2 0x1574 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141E DUP3 PUSH2 0x1506 JUMP JUMPDEST SWAP2 POP PUSH2 0x1429 DUP4 PUSH2 0x1506 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1439 JUMPI PUSH2 0x1438 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144F DUP3 PUSH2 0x1506 JUMP JUMPDEST SWAP2 POP PUSH2 0x145A DUP4 PUSH2 0x1506 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1493 JUMPI PUSH2 0x1492 PUSH2 0x1574 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP3 PUSH2 0x14E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BB DUP3 PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CD DUP3 PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DF DUP3 PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x152E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1513 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x153D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x154C DUP3 PUSH2 0x1644 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x156B JUMPI PUSH2 0x156A PUSH2 0x1601 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x16D6 DUP2 PUSH2 0x14B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x16E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x16ED DUP2 PUSH2 0x14C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x16F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1704 DUP2 PUSH2 0x14D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x170F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x171B DUP2 PUSH2 0x1506 JUMP JUMPDEST DUP2 EQ PUSH2 0x1726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH25 0x5C3B892B4E6228511D6F72BB6A7C800BF495E5EE2EBA1D1020 DUP4 PUSH2 0x5DD7 PUSH4 0x64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "13649:1716:0:-:0;;;13728:42;13706:64;;;;;;;;;;;;;;;;;;;;13799:42;13777:64;;;;;;;;;;;;;;;;;;;;13865:19;13848:36;;13649:1716;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUSD_533": {
									"entryPoint": 2447,
									"id": 533,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CalcLpPrice_780": {
									"entryPoint": 178,
									"id": 780,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@WBNBPrice_626": {
									"entryPoint": 3208,
									"id": 626,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@WBNB_530": {
									"entryPoint": 2485,
									"id": 530,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_319": {
									"entryPoint": 3661,
									"id": 319,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_416": {
									"entryPoint": 3755,
									"id": 416,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_444": {
									"entryPoint": 3829,
									"id": 444,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@mul_399": {
									"entryPoint": 3085,
									"id": 399,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@price_584": {
									"entryPoint": 2521,
									"id": 584,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 3928,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$494_fromMemory": {
									"entryPoint": 4086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_LP_$512": {
									"entryPoint": 4107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Router_$524": {
									"entryPoint": 4128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$494_fromMemory": {
									"entryPoint": 4243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_LP_$512t_contract$_Router_$524": {
									"entryPoint": 4288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 4397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4839,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4914,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 4968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 4984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$494": {
									"entryPoint": 5296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_LP_$512": {
									"entryPoint": 5314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Router_$524": {
									"entryPoint": 5332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5392,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 5443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 5492,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5539,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5586,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5633,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5680,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5690,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 5717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3": {
									"entryPoint": 5758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$494": {
									"entryPoint": 5837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_LP_$512": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Router_$524": {
									"entryPoint": 5883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14054:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "137:631:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "147:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "229:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "172:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "156:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "147:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "257:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "250:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "286:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "272:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "313:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "302:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "335:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "346:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "339:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "401:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "371:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "388:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "376:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "376:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "364:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "364:36:1"
															},
															"nodeType": "YulIf",
															"src": "361:143:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "573:189:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "588:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "592:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "630:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "667:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "635:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "635:48:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "623:61:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "623:61:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "697:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "704:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "697:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "731:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "742:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "731:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "535:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "532:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "546:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "548:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "557:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "560:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "553:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "553:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "548:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "517:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "519:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "528:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "523:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "513:249:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "107:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "123:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "131:5:1",
														"type": ""
													}
												],
												"src": "24:744:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:297:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "928:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "930:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "930:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "930:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "907:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "915:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "903:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "903:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "922:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "899:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "899:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:35:1"
															},
															"nodeType": "YulIf",
															"src": "889:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1020:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1040:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1034:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1024:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1056:114:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1143:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1151:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1139:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1158:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1166:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1065:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1065:105:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1056:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "857:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "865:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "873:5:1",
														"type": ""
													}
												],
												"src": "791:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1259:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1269:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1284:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1278:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1278:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1269:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1341:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$494",
																	"nodeType": "YulIdentifier",
																	"src": "1300:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1300:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1300:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$494_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1237:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1245:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1253:5:1",
														"type": ""
													}
												],
												"src": "1182:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1421:97:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1431:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1453:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1431:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1506:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_LP_$512",
																	"nodeType": "YulIdentifier",
																	"src": "1469:36:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1469:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1469:43:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_LP_$512",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1399:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1407:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1415:5:1",
														"type": ""
													}
												],
												"src": "1359:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1590:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1600:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1622:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1609:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1600:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1679:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Router_$524",
																	"nodeType": "YulIdentifier",
																	"src": "1638:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1638:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Router_$524",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1568:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1576:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1584:5:1",
														"type": ""
													}
												],
												"src": "1524:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1760:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1770:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1785:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1779:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1779:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1770:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1828:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1801:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1801:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1801:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1738:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1746:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1754:5:1",
														"type": ""
													}
												],
												"src": "1697:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1948:452:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1994:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1996:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1996:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1996:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1969:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1978:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1965:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1965:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1990:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1961:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1961:32:1"
															},
															"nodeType": "YulIf",
															"src": "1958:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2087:306:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2102:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2126:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2137:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2122:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2122:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2116:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2116:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2106:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2187:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2189:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2189:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2189:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2159:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2167:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2156:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2153:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2284:99:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2355:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2366:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2351:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2351:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2375:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2294:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:89:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2284:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1918:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1929:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1941:6:1",
														"type": ""
													}
												],
												"src": "1846:554:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2497:288:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2543:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2545:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2545:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2545:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2518:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2527:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2514:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2514:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2539:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2510:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2510:32:1"
															},
															"nodeType": "YulIf",
															"src": "2507:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2636:142:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2651:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2665:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2655:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2680:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2740:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2751:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2736:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2736:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2760:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$494_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2690:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2690:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2680:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$494_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2467:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2478:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2490:6:1",
														"type": ""
													}
												],
												"src": "2406:379:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2898:415:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2944:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2946:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2946:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2946:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2919:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2915:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2915:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2940:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2911:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2911:32:1"
															},
															"nodeType": "YulIf",
															"src": "2908:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3037:127:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3052:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3066:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3056:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3081:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3126:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3137:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3122:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3122:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3146:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_LP_$512",
																			"nodeType": "YulIdentifier",
																			"src": "3091:30:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3091:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3081:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3174:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3189:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3203:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3193:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3219:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3268:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3279:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3264:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3264:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3288:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$524",
																			"nodeType": "YulIdentifier",
																			"src": "3229:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3229:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3219:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_LP_$512t_contract$_Router_$524",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2860:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2871:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2883:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2891:6:1",
														"type": ""
													}
												],
												"src": "2791:522:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3396:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3442:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3444:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3444:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3444:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3417:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3426:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3413:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3413:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3438:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3409:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:32:1"
															},
															"nodeType": "YulIf",
															"src": "3406:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3535:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3550:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3564:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3554:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3579:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3625:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3636:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3621:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3621:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3645:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3589:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3589:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3579:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3366:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3377:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3389:6:1",
														"type": ""
													}
												],
												"src": "3319:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3756:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3800:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3808:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3766:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3766:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3766:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3821:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3839:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3844:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3835:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3835:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "3821:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3729:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3737:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3745:10:1",
														"type": ""
													}
												],
												"src": "3676:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3916:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3933:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3956:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3938:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3938:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3926:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3926:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3926:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3904:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3911:3:1",
														"type": ""
													}
												],
												"src": "3861:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4040:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4057:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4080:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4062:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4062:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4050:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4050:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4028:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4035:3:1",
														"type": ""
													}
												],
												"src": "3975:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4253:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4263:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4325:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4277:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4267:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4340:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4421:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4426:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4347:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4347:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4340:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4442:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4507:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4457:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4446:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4522:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4536:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4526:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4612:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4626:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4653:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4647:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4647:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "4630:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4673:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4724:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4739:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "4680:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4680:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4673:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4756:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4819:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4766:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4766:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4756:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4574:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4577:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4571:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4571:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4585:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4587:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4596:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4592:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4592:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4587:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4556:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4558:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4567:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4562:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4552:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4845:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4852:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4845:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4232:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4239:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4248:3:1",
														"type": ""
													}
												],
												"src": "4129:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4959:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4969:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5016:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4983:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4983:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4973:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5031:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5097:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5102:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5038:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5038:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5031:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5144:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5151:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5140:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5140:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5158:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5163:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5118:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5118:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5118:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5179:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5190:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5217:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5195:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5195:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5186:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5186:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5179:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4940:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4947:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4955:3:1",
														"type": ""
													}
												],
												"src": "4867:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5383:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5393:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5459:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5464:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5400:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5400:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5393:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5565:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "5476:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5476:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5476:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5578:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5589:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5594:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5585:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5585:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5578:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5371:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5379:3:1",
														"type": ""
													}
												],
												"src": "5237:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5755:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5765:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5831:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5836:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5772:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5772:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5765:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5937:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																	"nodeType": "YulIdentifier",
																	"src": "5848:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5848:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5848:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5950:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5961:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5966:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5957:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5957:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5950:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5743:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5751:3:1",
														"type": ""
													}
												],
												"src": "5609:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6046:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6063:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6086:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6068:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6068:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6056:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6056:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6034:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6041:3:1",
														"type": ""
													}
												],
												"src": "5981:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6203:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6213:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6225:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6221:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6213:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6293:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6306:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6317:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6302:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6249:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6249:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6249:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6175:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6187:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6198:4:1",
														"type": ""
													}
												],
												"src": "6105:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6451:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6461:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6473:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6484:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6469:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6469:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6461:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6508:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6519:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6504:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6504:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6527:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6533:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6523:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6497:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6497:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6553:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6625:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6634:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6561:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6561:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6553:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6423:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6435:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6446:4:1",
														"type": ""
													}
												],
												"src": "6333:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6823:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6833:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6845:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6856:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6841:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6841:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6833:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6880:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6891:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6876:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6876:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6899:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6905:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6895:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6895:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6869:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6869:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6869:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6925:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7059:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6933:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6933:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6925:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6803:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6818:4:1",
														"type": ""
													}
												],
												"src": "6652:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7248:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7258:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7270:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7281:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7266:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7266:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7258:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7305:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7316:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7301:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7301:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7324:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7330:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7320:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7320:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7294:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7294:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7294:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7350:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7484:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7358:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7358:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7350:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7228:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7243:4:1",
														"type": ""
													}
												],
												"src": "7077:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7600:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7610:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7622:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7633:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7618:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7618:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7610:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7690:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7703:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7714:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7699:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7699:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7646:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7646:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7646:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7572:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7584:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7595:4:1",
														"type": ""
													}
												],
												"src": "7502:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7906:307:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7916:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7928:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7939:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7924:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7924:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7916:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7996:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8009:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8020:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8005:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8005:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7952:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7952:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7952:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8044:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8055:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8040:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8040:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8064:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8070:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8060:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8060:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8033:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8033:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8033:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8090:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8192:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8201:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8098:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8098:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8090:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7870:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7882:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7890:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7901:4:1",
														"type": ""
													}
												],
												"src": "7730:483:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8260:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8270:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "8280:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8280:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8270:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8329:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8337:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "8309:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8309:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8244:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8253:6:1",
														"type": ""
													}
												],
												"src": "8219:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8394:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8404:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8420:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8414:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8404:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8387:6:1",
														"type": ""
													}
												],
												"src": "8354:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8517:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8622:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8624:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8624:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8624:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8594:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8602:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8591:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8591:30:1"
															},
															"nodeType": "YulIf",
															"src": "8588:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8654:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8674:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8662:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8662:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8654:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8716:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8728:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8734:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8724:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8724:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8716:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8501:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8512:4:1",
														"type": ""
													}
												],
												"src": "8435:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8824:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8834:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "8842:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8834:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8855:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8867:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8872:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8863:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8863:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8855:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8811:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8819:4:1",
														"type": ""
													}
												],
												"src": "8752:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8964:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8975:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8991:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8985:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8985:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8975:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8947:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8957:6:1",
														"type": ""
													}
												],
												"src": "8890:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9069:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9080:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9096:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9090:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9090:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9080:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9052:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9062:6:1",
														"type": ""
													}
												],
												"src": "9010:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9190:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9200:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9212:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9217:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9208:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9208:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "9200:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "9177:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "9185:4:1",
														"type": ""
													}
												],
												"src": "9115:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9345:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9362:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9367:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9355:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9355:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9355:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9383:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9402:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9407:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9398:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9398:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9383:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9317:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9322:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9333:11:1",
														"type": ""
													}
												],
												"src": "9234:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9520:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9537:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9542:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9530:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9530:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9530:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9558:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9577:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9582:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9573:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9573:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9558:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9492:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9497:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9508:11:1",
														"type": ""
													}
												],
												"src": "9424:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9643:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9653:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9676:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9658:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9658:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9653:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9687:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9710:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9692:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9692:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9687:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9850:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9852:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9852:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9852:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9771:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9778:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9846:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9774:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9774:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9768:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9768:81:1"
															},
															"nodeType": "YulIf",
															"src": "9765:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9882:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9893:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9896:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9889:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9889:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9882:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9630:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9633:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9639:3:1",
														"type": ""
													}
												],
												"src": "9599:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9952:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9962:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9985:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9967:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9967:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9962:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9996:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10019:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10001:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10001:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9996:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10043:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10045:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10045:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10045:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10040:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10033:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10033:9:1"
															},
															"nodeType": "YulIf",
															"src": "10030:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10075:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10084:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10087:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10080:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10080:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10075:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9941:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9944:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9950:1:1",
														"type": ""
													}
												],
												"src": "9910:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10149:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10159:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10182:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10164:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10164:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10159:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10193:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10216:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10198:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10198:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10193:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10391:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10393:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10393:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10393:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10303:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10296:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10296:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10289:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10289:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10311:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10318:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10386:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10314:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10314:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10308:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10308:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10285:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10285:105:1"
															},
															"nodeType": "YulIf",
															"src": "10282:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10423:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10438:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10441:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10434:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10434:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10423:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10132:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10135:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10141:7:1",
														"type": ""
													}
												],
												"src": "10101:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10500:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10510:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10539:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10521:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10521:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10510:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10482:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10492:7:1",
														"type": ""
													}
												],
												"src": "10455:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10616:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10626:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10655:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "10637:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10637:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10626:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$494",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10598:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10608:7:1",
														"type": ""
													}
												],
												"src": "10557:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10728:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10738:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10767:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "10749:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10749:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10738:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_LP_$512",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10710:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10720:7:1",
														"type": ""
													}
												],
												"src": "10673:106:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10844:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10854:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10883:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "10865:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10865:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10854:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Router_$524",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10826:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10836:7:1",
														"type": ""
													}
												],
												"src": "10785:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10946:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10956:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10971:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10978:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10967:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10967:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10956:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10928:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10938:7:1",
														"type": ""
													}
												],
												"src": "10901:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11078:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11088:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11099:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11088:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11060:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11070:7:1",
														"type": ""
													}
												],
												"src": "11033:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11165:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11175:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11184:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11179:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11244:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11269:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11274:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11265:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11265:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11288:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11293:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11284:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11284:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11278:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11278:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11258:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11258:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11258:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11205:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11208:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11202:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11202:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11216:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11218:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11227:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11230:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11223:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11223:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11218:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11198:3:1",
																"statements": []
															},
															"src": "11194:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11341:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11391:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11396:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11387:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11387:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11405:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11380:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11380:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11380:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11322:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11325:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11319:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11319:13:1"
															},
															"nodeType": "YulIf",
															"src": "11316:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11147:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11152:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11157:6:1",
														"type": ""
													}
												],
												"src": "11116:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11472:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11482:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "11504:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "11534:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11512:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11512:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11500:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11500:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "11486:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11651:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "11653:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11653:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11653:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "11594:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11606:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11591:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11591:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "11630:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11642:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11627:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11627:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11588:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11588:62:1"
															},
															"nodeType": "YulIf",
															"src": "11585:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11689:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "11693:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11682:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11682:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11682:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11458:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "11466:4:1",
														"type": ""
													}
												],
												"src": "11429:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11744:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11761:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11764:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11754:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11754:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11858:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11861:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11851:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11851:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11851:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11882:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11885:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11875:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11875:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11875:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11716:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11930:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11947:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11950:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11940:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11940:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11940:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12044:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12047:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12037:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12037:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12037:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12068:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12071:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12061:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12061:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12061:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11902:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12116:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12133:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12136:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12126:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12126:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12126:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12230:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12233:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12223:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12223:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12254:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12257:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12247:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12247:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12088:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12302:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12319:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12322:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12312:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12312:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12312:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12416:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12419:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12409:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12409:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12409:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12443:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12433:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12433:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12274:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12549:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12566:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12569:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12559:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12559:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12559:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "12460:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12672:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12689:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12692:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12682:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12682:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12682:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "12583:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12795:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12812:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12815:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12805:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12805:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12805:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "12706:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12918:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12935:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12938:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12928:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12928:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12928:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "12829:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13000:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13010:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13028:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13035:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13024:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13024:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13044:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13040:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13040:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13020:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13020:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13010:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12983:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "12993:6:1",
														"type": ""
													}
												],
												"src": "12952:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13166:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13188:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13196:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13184:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13184:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13200:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13177:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13177:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13177:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13158:6:1",
														"type": ""
													}
												],
												"src": "13060:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13349:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13371:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13379:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13367:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13383:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13360:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13360:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13360:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13439:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13447:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13435:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13435:15:1"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13452:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13428:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13428:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13428:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13341:6:1",
														"type": ""
													}
												],
												"src": "13243:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13526:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13597:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13606:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13609:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13599:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13599:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13599:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13549:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13588:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$494",
																					"nodeType": "YulIdentifier",
																					"src": "13556:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13556:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13546:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13546:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13539:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13539:57:1"
															},
															"nodeType": "YulIf",
															"src": "13536:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$494",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13519:5:1",
														"type": ""
													}
												],
												"src": "13469:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13678:89:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13745:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13754:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13757:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13747:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13747:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13747:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13701:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13736:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_LP_$512",
																					"nodeType": "YulIdentifier",
																					"src": "13708:27:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13708:34:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13698:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13698:45:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13691:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13691:53:1"
															},
															"nodeType": "YulIf",
															"src": "13688:73:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_LP_$512",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13671:5:1",
														"type": ""
													}
												],
												"src": "13625:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13830:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13901:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13910:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13913:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13903:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13903:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13903:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13853:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13892:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Router_$524",
																					"nodeType": "YulIdentifier",
																					"src": "13860:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13860:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13850:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13850:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13843:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13843:57:1"
															},
															"nodeType": "YulIf",
															"src": "13840:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Router_$524",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13823:5:1",
														"type": ""
													}
												],
												"src": "13773:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13972:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14029:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14038:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14041:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14031:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14031:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14031:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13995:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14020:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "14002:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14002:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13992:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13992:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13985:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13985:43:1"
															},
															"nodeType": "YulIf",
															"src": "13982:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13965:5:1",
														"type": ""
													}
												],
												"src": "13929:122:1"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_IERC20_$494_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$494(value)\n    }\n\n    function abi_decode_t_contract$_LP_$512(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_LP_$512(value)\n    }\n\n    function abi_decode_t_contract$_Router_$524(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Router_$524(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$494_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$494_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_LP_$512t_contract$_Router_$524(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_LP_$512(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Router_$524(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$494(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_LP_$512(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Router_$524(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function validator_revert_t_contract$_IERC20_$494(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$494(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_LP_$512(value) {\n        if iszero(eq(value, cleanup_t_contract$_LP_$512(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Router_$524(value) {\n        if iszero(eq(value, cleanup_t_contract$_Router_$524(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063344e49d914610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b91906110c0565b6100b2565b60405161006d91906112cc565b60405180910390f35b61007e61098f565b60405161008b919061124f565b60405180910390f35b61009c6109b5565b6040516100a9919061124f565b60405180910390f35b60008060008473ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156100fd57600080fd5b505afa158015610111573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101359190611093565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461032c57610325610211858773ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156101d457600080fd5b505afa1580156101e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020c9190611093565b6109d9565b8673ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561025757600080fd5b505afa15801561026b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028f9190611093565b73ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b81526004016102c7919061124f565b60206040518083038186803b1580156102df57600080fd5b505afa1580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103179190611100565b610c0d90919063ffffffff16565b91506104cd565b6104ca6103b6858773ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561037957600080fd5b505afa15801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b19190611093565b610c88565b8673ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156103fc57600080fd5b505afa158015610410573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104349190611093565b73ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b815260040161046c919061124f565b60206040518083038186803b15801561048457600080fd5b505afa158015610498573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bc9190611100565b610c0d90919063ffffffff16565b91505b8473ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561051357600080fd5b505afa158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190611093565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107425761073b610627858773ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156105ea57600080fd5b505afa1580156105fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106229190611093565b6109d9565b8673ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561066d57600080fd5b505afa158015610681573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a59190611093565b73ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b81526004016106dd919061124f565b60206040518083038186803b1580156106f557600080fd5b505afa158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d9190611100565b610c0d90919063ffffffff16565b90506108e3565b6108e06107cc858773ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561078f57600080fd5b505afa1580156107a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c79190611093565b610c88565b8673ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561081257600080fd5b505afa158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a9190611093565b73ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b8152600401610882919061124f565b60206040518083038186803b15801561089a57600080fd5b505afa1580156108ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d29190611100565b610c0d90919063ffffffff16565b90505b6109858573ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561092c57600080fd5b505afa158015610940573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109649190611100565b6109778385610e4d90919063ffffffff16565b610eab90919063ffffffff16565b9250505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600367ffffffffffffffff8111156109f7576109f6611601565b5b604051908082528060200260200182016040528015610a255781602001602082028036833780820191505090505b5090508281600081518110610a3d57610a3c6115d2565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600181518110610aac57610aab6115d2565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600281518110610b1d57610b1c6115d2565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b8152600401610b949291906112e7565b60006040518083038186803b158015610bac57600080fd5b505afa158015610bc0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610be9919061104a565b600281518110610bfc57610bfb6115d2565b5b602002602001015191505092915050565b600080831415610c205760009050610c82565b60008284610c2e9190611444565b9050828482610c3d9190611413565b14610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c74906112ac565b60405180910390fd5b809150505b92915050565b600080600267ffffffffffffffff811115610ca657610ca5611601565b5b604051908082528060200260200182016040528015610cd45781602001602082028036833780820191505090505b5090508281600081518110610cec57610ceb6115d2565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600181518110610d5d57610d5c6115d2565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b8152600401610dd49291906112e7565b60006040518083038186803b158015610dec57600080fd5b505afa158015610e00573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610e29919061104a565b600181518110610e3c57610e3b6115d2565b5b602002602001015191505092915050565b6000808284610e5c91906113bd565b905083811015610ea1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e989061128c565b60405180910390fd5b8091505092915050565b6000610eed83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610ef5565b905092915050565b60008083118290610f3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f33919061126a565b60405180910390fd5b5060008385610f4b9190611413565b9050809150509392505050565b6000610f6b610f668461133c565b611317565b90508083825260208201905082856020860282011115610f8e57610f8d611635565b5b60005b85811015610fbe5781610fa48882611035565b845260208401935060208301925050600181019050610f91565b5050509392505050565b600082601f830112610fdd57610fdc611630565b5b8151610fed848260208601610f58565b91505092915050565b600081519050611005816116cd565b92915050565b60008135905061101a816116e4565b92915050565b60008135905061102f816116fb565b92915050565b60008151905061104481611712565b92915050565b6000602082840312156110605761105f61163f565b5b600082015167ffffffffffffffff81111561107e5761107d61163a565b5b61108a84828501610fc8565b91505092915050565b6000602082840312156110a9576110a861163f565b5b60006110b784828501610ff6565b91505092915050565b600080604083850312156110d7576110d661163f565b5b60006110e58582860161100b565b92505060206110f685828601611020565b9150509250929050565b6000602082840312156111165761111561163f565b5b600061112484828501611035565b91505092915050565b60006111398383611145565b60208301905092915050565b61114e8161149e565b82525050565b61115d8161149e565b82525050565b600061116e82611378565b611178818561139b565b935061118383611368565b8060005b838110156111b457815161119b888261112d565b97506111a68361138e565b925050600181019050611187565b5085935050505092915050565b60006111cc82611383565b6111d681856113ac565b93506111e6818560208601611510565b6111ef81611644565b840191505092915050565b6000611207601b836113ac565b915061121282611655565b602082019050919050565b600061122a6021836113ac565b91506112358261167e565b604082019050919050565b61124981611506565b82525050565b60006020820190506112646000830184611154565b92915050565b6000602082019050818103600083015261128481846111c1565b905092915050565b600060208201905081810360008301526112a5816111fa565b9050919050565b600060208201905081810360008301526112c58161121d565b9050919050565b60006020820190506112e16000830184611240565b92915050565b60006040820190506112fc6000830185611240565b818103602083015261130e8184611163565b90509392505050565b6000611321611332565b905061132d8282611543565b919050565b6000604051905090565b600067ffffffffffffffff82111561135757611356611601565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113c882611506565b91506113d383611506565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561140857611407611574565b5b828201905092915050565b600061141e82611506565b915061142983611506565b925082611439576114386115a3565b5b828204905092915050565b600061144f82611506565b915061145a83611506565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561149357611492611574565b5b828202905092915050565b60006114a9826114e6565b9050919050565b60006114bb8261149e565b9050919050565b60006114cd8261149e565b9050919050565b60006114df8261149e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561152e578082015181840152602081019050611513565b8381111561153d576000848401525b50505050565b61154c82611644565b810181811067ffffffffffffffff8211171561156b5761156a611601565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6116d6816114b0565b81146116e157600080fd5b50565b6116ed816114c2565b81146116f857600080fd5b50565b611704816114d4565b811461170f57600080fd5b50565b61171b81611506565b811461172657600080fd5b5056fea2646970667358221220ab785c3b892b4e6228511d6f72bb6a7c800bf495e5ee2eba1d102083615dd76364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x344E49D9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x10C0 JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x111 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x32C JUMPI PUSH2 0x325 PUSH2 0x211 DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH2 0x9D9 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0xC0D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x4CA PUSH2 0x3B6 DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH2 0xC88 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x410 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x498 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0xC0D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x527 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x742 JUMPI PUSH2 0x73B PUSH2 0x627 DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x622 SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH2 0x9D9 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x681 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x709 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x72D SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0xC0D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8E3 JUMP JUMPDEST PUSH2 0x8E0 PUSH2 0x7CC DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x78F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C7 SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH2 0xC88 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x826 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84A SWAP2 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D2 SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0xC0D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x985 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x940 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x964 SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0x977 DUP4 DUP6 PUSH2 0xE4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9F7 JUMPI PUSH2 0x9F6 PUSH2 0x1601 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA25 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA3D JUMPI PUSH2 0xA3C PUSH2 0x15D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xAAC JUMPI PUSH2 0xAAB PUSH2 0x15D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xB1D JUMPI PUSH2 0xB1C PUSH2 0x15D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB94 SWAP3 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xBFC JUMPI PUSH2 0xBFB PUSH2 0x15D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0xC20 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0xC2E SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1413 JUMP JUMPDEST EQ PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC74 SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA6 JUMPI PUSH2 0xCA5 PUSH2 0x1601 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCD4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0x15D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD5D JUMPI PUSH2 0xD5C PUSH2 0x15D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD4 SWAP3 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE29 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE3C JUMPI PUSH2 0xE3B PUSH2 0x15D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xE5C SWAP2 SWAP1 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE98 SWAP1 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEED DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xEF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0xF3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF33 SWAP2 SWAP1 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0xF4B SWAP2 SWAP1 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6B PUSH2 0xF66 DUP5 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x1317 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xF8E JUMPI PUSH2 0xF8D PUSH2 0x1635 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xFBE JUMPI DUP2 PUSH2 0xFA4 DUP9 DUP3 PUSH2 0x1035 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xF91 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFDD JUMPI PUSH2 0xFDC PUSH2 0x1630 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xFED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1005 DUP2 PUSH2 0x16CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x101A DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x102F DUP2 PUSH2 0x16FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1044 DUP2 PUSH2 0x1712 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1060 JUMPI PUSH2 0x105F PUSH2 0x163F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x107E JUMPI PUSH2 0x107D PUSH2 0x163A JUMP JUMPDEST JUMPDEST PUSH2 0x108A DUP5 DUP3 DUP6 ADD PUSH2 0xFC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10A9 JUMPI PUSH2 0x10A8 PUSH2 0x163F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10B7 DUP5 DUP3 DUP6 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10D7 JUMPI PUSH2 0x10D6 PUSH2 0x163F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10E5 DUP6 DUP3 DUP7 ADD PUSH2 0x100B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10F6 DUP6 DUP3 DUP7 ADD PUSH2 0x1020 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1116 JUMPI PUSH2 0x1115 PUSH2 0x163F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1124 DUP5 DUP3 DUP6 ADD PUSH2 0x1035 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1139 DUP4 DUP4 PUSH2 0x1145 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x114E DUP2 PUSH2 0x149E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x115D DUP2 PUSH2 0x149E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x116E DUP3 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x1178 DUP2 DUP6 PUSH2 0x139B JUMP JUMPDEST SWAP4 POP PUSH2 0x1183 DUP4 PUSH2 0x1368 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11B4 JUMPI DUP2 MLOAD PUSH2 0x119B DUP9 DUP3 PUSH2 0x112D JUMP JUMPDEST SWAP8 POP PUSH2 0x11A6 DUP4 PUSH2 0x138E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1187 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CC DUP3 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x11D6 DUP2 DUP6 PUSH2 0x13AC JUMP JUMPDEST SWAP4 POP PUSH2 0x11E6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x11EF DUP2 PUSH2 0x1644 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1207 PUSH1 0x1B DUP4 PUSH2 0x13AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1212 DUP3 PUSH2 0x1655 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122A PUSH1 0x21 DUP4 PUSH2 0x13AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1235 DUP3 PUSH2 0x167E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1249 DUP2 PUSH2 0x1506 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1264 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1154 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1284 DUP2 DUP5 PUSH2 0x11C1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12A5 DUP2 PUSH2 0x11FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12C5 DUP2 PUSH2 0x121D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1240 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12FC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1240 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x130E DUP2 DUP5 PUSH2 0x1163 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1321 PUSH2 0x1332 JUMP JUMPDEST SWAP1 POP PUSH2 0x132D DUP3 DUP3 PUSH2 0x1543 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1357 JUMPI PUSH2 0x1356 PUSH2 0x1601 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C8 DUP3 PUSH2 0x1506 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D3 DUP4 PUSH2 0x1506 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1408 JUMPI PUSH2 0x1407 PUSH2 0x1574 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141E DUP3 PUSH2 0x1506 JUMP JUMPDEST SWAP2 POP PUSH2 0x1429 DUP4 PUSH2 0x1506 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1439 JUMPI PUSH2 0x1438 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144F DUP3 PUSH2 0x1506 JUMP JUMPDEST SWAP2 POP PUSH2 0x145A DUP4 PUSH2 0x1506 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1493 JUMPI PUSH2 0x1492 PUSH2 0x1574 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP3 PUSH2 0x14E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BB DUP3 PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CD DUP3 PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DF DUP3 PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x152E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1513 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x153D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x154C DUP3 PUSH2 0x1644 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x156B JUMPI PUSH2 0x156A PUSH2 0x1601 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x16D6 DUP2 PUSH2 0x14B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x16E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x16ED DUP2 PUSH2 0x14C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x16F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1704 DUP2 PUSH2 0x14D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x170F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x171B DUP2 PUSH2 0x1506 JUMP JUMPDEST DUP2 EQ PUSH2 0x1726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH25 0x5C3B892B4E6228511D6F72BB6A7C800BF495E5EE2EBA1D1020 DUP4 PUSH2 0x5DD7 PUSH4 0x64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "13649:1716:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14444:918;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13777:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13706;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14444:918;14523:7;14542:14;14567;14620:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14595:44;;14603:4;;;;;;;;;;14595:44;;;14592:336;;14665:102;14718:48;14724:13;14746:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14718:5;:48::i;:::-;14665:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;;;14702:9;14665:48;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;:102;;;;:::i;:::-;14655:113;;14592:336;;;14809:106;14862:52;14872:13;14894:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14862:9;:52::i;:::-;14809:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;;;14846:9;14809:48;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;:106;;;;:::i;:::-;14799:117;;14592:336;14968:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14943:44;;14951:4;;;;;;;;;;14943:44;;;14940:336;;15013:102;15066:48;15072:13;15094:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15066:5;:48::i;:::-;15013:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;;;15050:9;15013:48;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;:102;;;;:::i;:::-;15003:113;;14940:336;;;15157:106;15210:52;15220:13;15242:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15210:9;:52::i;:::-;15157:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;;;15194:9;15157:48;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;:106;;;;:::i;:::-;15147:117;;14940:336;15304:49;15329:9;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15305:18;15316:6;15305;:10;;:18;;;;:::i;:::-;15304:24;;:49;;;;:::i;:::-;15296:58;;;;14444:918;;;;:::o;13777:64::-;;;;;;;;;;;;;:::o;13706:::-;;;;;;;;;;;;:::o;13893:278::-;13967:7;13986:21;14024:1;14010:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13986:40;;14047:5;14037:4;14042:1;14037:7;;;;;;;;:::i;:::-;;;;;;;:15;;;;;;;;;;;14073:4;;;;;;;;;;14063;14068:1;14063:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;14098:4;;;;;;;;;;;14088;14093:1;14088:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;14120:13;:27;;;14148:6;;14155:4;14120:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14161:1;14120:43;;;;;;;;:::i;:::-;;;;;;;;14113:50;;;13893:278;;;;:::o;9965:471::-;10023:7;10273:1;10268;:6;10264:47;;;10298:1;10291:8;;;;10264:47;10323:9;10339:1;10335;:5;;;;:::i;:::-;10323:17;;10368:1;10363;10359;:5;;;;:::i;:::-;:10;10351:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;10427:1;10420:8;;;9965:471;;;;;:::o;14179:257::-;14257:7;14276:21;14314:1;14300:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14276:40;;14337:5;14327:4;14332:1;14327:7;;;;;;;;:::i;:::-;;;;;;;:15;;;;;;;;;;;14363:4;;;;;;;;;;;14353;14358:1;14353:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;14385:13;:27;;;14413:6;;14420:4;14385:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14426:1;14385:43;;;;;;;;:::i;:::-;;;;;;;;14378:50;;;14179:257;;;;:::o;8593:181::-;8651:7;8671:9;8687:1;8683;:5;;;;:::i;:::-;8671:17;;8712:1;8707;:6;;8699:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;8765:1;8758:8;;;8593:181;;;;:::o;10904:132::-;10962:7;10989:39;10993:1;10996;10989:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;10982:46;;10904:132;;;;:::o;11566:345::-;11652:7;11751:1;11747;:5;11754:12;11739:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;11778:9;11794:1;11790;:5;;;;:::i;:::-;11778:17;;11902:1;11895:8;;;11566:345;;;;;:::o;24:744:1:-;131:5;156:81;172:64;229:6;172:64;:::i;:::-;156:81;:::i;:::-;147:90;;257:5;286:6;279:5;272:21;320:4;313:5;309:16;302:23;;346:6;396:3;388:4;380:6;376:17;371:3;367:27;364:36;361:143;;;415:79;;:::i;:::-;361:143;528:1;513:249;538:6;535:1;532:13;513:249;;;606:3;635:48;679:3;667:10;635:48;:::i;:::-;630:3;623:61;713:4;708:3;704:14;697:21;;747:4;742:3;738:14;731:21;;573:189;560:1;557;553:9;548:14;;513:249;;;517:14;137:631;;24:744;;;;;:::o;791:385::-;873:5;922:3;915:4;907:6;903:17;899:27;889:122;;930:79;;:::i;:::-;889:122;1040:6;1034:13;1065:105;1166:3;1158:6;1151:4;1143:6;1139:17;1065:105;:::i;:::-;1056:114;;879:297;791:385;;;;:::o;1182:171::-;1253:5;1284:6;1278:13;1269:22;;1300:47;1341:5;1300:47;:::i;:::-;1182:171;;;;:::o;1359:159::-;1415:5;1453:6;1440:20;1431:29;;1469:43;1506:5;1469:43;:::i;:::-;1359:159;;;;:::o;1524:167::-;1584:5;1622:6;1609:20;1600:29;;1638:47;1679:5;1638:47;:::i;:::-;1524:167;;;;:::o;1697:143::-;1754:5;1785:6;1779:13;1770:22;;1801:33;1828:5;1801:33;:::i;:::-;1697:143;;;;:::o;1846:554::-;1941:6;1990:2;1978:9;1969:7;1965:23;1961:32;1958:119;;;1996:79;;:::i;:::-;1958:119;2137:1;2126:9;2122:17;2116:24;2167:18;2159:6;2156:30;2153:117;;;2189:79;;:::i;:::-;2153:117;2294:89;2375:7;2366:6;2355:9;2351:22;2294:89;:::i;:::-;2284:99;;2087:306;1846:554;;;;:::o;2406:379::-;2490:6;2539:2;2527:9;2518:7;2514:23;2510:32;2507:119;;;2545:79;;:::i;:::-;2507:119;2665:1;2690:78;2760:7;2751:6;2740:9;2736:22;2690:78;:::i;:::-;2680:88;;2636:142;2406:379;;;;:::o;2791:522::-;2883:6;2891;2940:2;2928:9;2919:7;2915:23;2911:32;2908:119;;;2946:79;;:::i;:::-;2908:119;3066:1;3091:63;3146:7;3137:6;3126:9;3122:22;3091:63;:::i;:::-;3081:73;;3037:127;3203:2;3229:67;3288:7;3279:6;3268:9;3264:22;3229:67;:::i;:::-;3219:77;;3174:132;2791:522;;;;;:::o;3319:351::-;3389:6;3438:2;3426:9;3417:7;3413:23;3409:32;3406:119;;;3444:79;;:::i;:::-;3406:119;3564:1;3589:64;3645:7;3636:6;3625:9;3621:22;3589:64;:::i;:::-;3579:74;;3535:128;3319:351;;;;:::o;3676:179::-;3745:10;3766:46;3808:3;3800:6;3766:46;:::i;:::-;3844:4;3839:3;3835:14;3821:28;;3676:179;;;;:::o;3861:108::-;3938:24;3956:5;3938:24;:::i;:::-;3933:3;3926:37;3861:108;;:::o;3975:118::-;4062:24;4080:5;4062:24;:::i;:::-;4057:3;4050:37;3975:118;;:::o;4129:732::-;4248:3;4277:54;4325:5;4277:54;:::i;:::-;4347:86;4426:6;4421:3;4347:86;:::i;:::-;4340:93;;4457:56;4507:5;4457:56;:::i;:::-;4536:7;4567:1;4552:284;4577:6;4574:1;4571:13;4552:284;;;4653:6;4647:13;4680:63;4739:3;4724:13;4680:63;:::i;:::-;4673:70;;4766:60;4819:6;4766:60;:::i;:::-;4756:70;;4612:224;4599:1;4596;4592:9;4587:14;;4552:284;;;4556:14;4852:3;4845:10;;4253:608;;;4129:732;;;;:::o;4867:364::-;4955:3;4983:39;5016:5;4983:39;:::i;:::-;5038:71;5102:6;5097:3;5038:71;:::i;:::-;5031:78;;5118:52;5163:6;5158:3;5151:4;5144:5;5140:16;5118:52;:::i;:::-;5195:29;5217:6;5195:29;:::i;:::-;5190:3;5186:39;5179:46;;4959:272;4867:364;;;;:::o;5237:366::-;5379:3;5400:67;5464:2;5459:3;5400:67;:::i;:::-;5393:74;;5476:93;5565:3;5476:93;:::i;:::-;5594:2;5589:3;5585:12;5578:19;;5237:366;;;:::o;5609:::-;5751:3;5772:67;5836:2;5831:3;5772:67;:::i;:::-;5765:74;;5848:93;5937:3;5848:93;:::i;:::-;5966:2;5961:3;5957:12;5950:19;;5609:366;;;:::o;5981:118::-;6068:24;6086:5;6068:24;:::i;:::-;6063:3;6056:37;5981:118;;:::o;6105:222::-;6198:4;6236:2;6225:9;6221:18;6213:26;;6249:71;6317:1;6306:9;6302:17;6293:6;6249:71;:::i;:::-;6105:222;;;;:::o;6333:313::-;6446:4;6484:2;6473:9;6469:18;6461:26;;6533:9;6527:4;6523:20;6519:1;6508:9;6504:17;6497:47;6561:78;6634:4;6625:6;6561:78;:::i;:::-;6553:86;;6333:313;;;;:::o;6652:419::-;6818:4;6856:2;6845:9;6841:18;6833:26;;6905:9;6899:4;6895:20;6891:1;6880:9;6876:17;6869:47;6933:131;7059:4;6933:131;:::i;:::-;6925:139;;6652:419;;;:::o;7077:::-;7243:4;7281:2;7270:9;7266:18;7258:26;;7330:9;7324:4;7320:20;7316:1;7305:9;7301:17;7294:47;7358:131;7484:4;7358:131;:::i;:::-;7350:139;;7077:419;;;:::o;7502:222::-;7595:4;7633:2;7622:9;7618:18;7610:26;;7646:71;7714:1;7703:9;7699:17;7690:6;7646:71;:::i;:::-;7502:222;;;;:::o;7730:483::-;7901:4;7939:2;7928:9;7924:18;7916:26;;7952:71;8020:1;8009:9;8005:17;7996:6;7952:71;:::i;:::-;8070:9;8064:4;8060:20;8055:2;8044:9;8040:18;8033:48;8098:108;8201:4;8192:6;8098:108;:::i;:::-;8090:116;;7730:483;;;;;:::o;8219:129::-;8253:6;8280:20;;:::i;:::-;8270:30;;8309:33;8337:4;8329:6;8309:33;:::i;:::-;8219:129;;;:::o;8354:75::-;8387:6;8420:2;8414:9;8404:19;;8354:75;:::o;8435:311::-;8512:4;8602:18;8594:6;8591:30;8588:56;;;8624:18;;:::i;:::-;8588:56;8674:4;8666:6;8662:17;8654:25;;8734:4;8728;8724:15;8716:23;;8435:311;;;:::o;8752:132::-;8819:4;8842:3;8834:11;;8872:4;8867:3;8863:14;8855:22;;8752:132;;;:::o;8890:114::-;8957:6;8991:5;8985:12;8975:22;;8890:114;;;:::o;9010:99::-;9062:6;9096:5;9090:12;9080:22;;9010:99;;;:::o;9115:113::-;9185:4;9217;9212:3;9208:14;9200:22;;9115:113;;;:::o;9234:184::-;9333:11;9367:6;9362:3;9355:19;9407:4;9402:3;9398:14;9383:29;;9234:184;;;;:::o;9424:169::-;9508:11;9542:6;9537:3;9530:19;9582:4;9577:3;9573:14;9558:29;;9424:169;;;;:::o;9599:305::-;9639:3;9658:20;9676:1;9658:20;:::i;:::-;9653:25;;9692:20;9710:1;9692:20;:::i;:::-;9687:25;;9846:1;9778:66;9774:74;9771:1;9768:81;9765:107;;;9852:18;;:::i;:::-;9765:107;9896:1;9893;9889:9;9882:16;;9599:305;;;;:::o;9910:185::-;9950:1;9967:20;9985:1;9967:20;:::i;:::-;9962:25;;10001:20;10019:1;10001:20;:::i;:::-;9996:25;;10040:1;10030:35;;10045:18;;:::i;:::-;10030:35;10087:1;10084;10080:9;10075:14;;9910:185;;;;:::o;10101:348::-;10141:7;10164:20;10182:1;10164:20;:::i;:::-;10159:25;;10198:20;10216:1;10198:20;:::i;:::-;10193:25;;10386:1;10318:66;10314:74;10311:1;10308:81;10303:1;10296:9;10289:17;10285:105;10282:131;;;10393:18;;:::i;:::-;10282:131;10441:1;10438;10434:9;10423:20;;10101:348;;;;:::o;10455:96::-;10492:7;10521:24;10539:5;10521:24;:::i;:::-;10510:35;;10455:96;;;:::o;10557:110::-;10608:7;10637:24;10655:5;10637:24;:::i;:::-;10626:35;;10557:110;;;:::o;10673:106::-;10720:7;10749:24;10767:5;10749:24;:::i;:::-;10738:35;;10673:106;;;:::o;10785:110::-;10836:7;10865:24;10883:5;10865:24;:::i;:::-;10854:35;;10785:110;;;:::o;10901:126::-;10938:7;10978:42;10971:5;10967:54;10956:65;;10901:126;;;:::o;11033:77::-;11070:7;11099:5;11088:16;;11033:77;;;:::o;11116:307::-;11184:1;11194:113;11208:6;11205:1;11202:13;11194:113;;;11293:1;11288:3;11284:11;11278:18;11274:1;11269:3;11265:11;11258:39;11230:2;11227:1;11223:10;11218:15;;11194:113;;;11325:6;11322:1;11319:13;11316:101;;;11405:1;11396:6;11391:3;11387:16;11380:27;11316:101;11165:258;11116:307;;;:::o;11429:281::-;11512:27;11534:4;11512:27;:::i;:::-;11504:6;11500:40;11642:6;11630:10;11627:22;11606:18;11594:10;11591:34;11588:62;11585:88;;;11653:18;;:::i;:::-;11585:88;11693:10;11689:2;11682:22;11472:238;11429:281;;:::o;11716:180::-;11764:77;11761:1;11754:88;11861:4;11858:1;11851:15;11885:4;11882:1;11875:15;11902:180;11950:77;11947:1;11940:88;12047:4;12044:1;12037:15;12071:4;12068:1;12061:15;12088:180;12136:77;12133:1;12126:88;12233:4;12230:1;12223:15;12257:4;12254:1;12247:15;12274:180;12322:77;12319:1;12312:88;12419:4;12416:1;12409:15;12443:4;12440:1;12433:15;12460:117;12569:1;12566;12559:12;12583:117;12692:1;12689;12682:12;12706:117;12815:1;12812;12805:12;12829:117;12938:1;12935;12928:12;12952:102;12993:6;13044:2;13040:7;13035:2;13028:5;13024:14;13020:28;13010:38;;12952:102;;;:::o;13060:177::-;13200:29;13196:1;13188:6;13184:14;13177:53;13060:177;:::o;13243:220::-;13383:34;13379:1;13371:6;13367:14;13360:58;13452:3;13447:2;13439:6;13435:15;13428:28;13243:220;:::o;13469:150::-;13556:38;13588:5;13556:38;:::i;:::-;13549:5;13546:49;13536:77;;13609:1;13606;13599:12;13536:77;13469:150;:::o;13625:142::-;13708:34;13736:5;13708:34;:::i;:::-;13701:5;13698:45;13688:73;;13757:1;13754;13747:12;13688:73;13625:142;:::o;13773:150::-;13860:38;13892:5;13860:38;:::i;:::-;13853:5;13850:49;13840:77;;13913:1;13910;13903:12;13840:77;13773:150;:::o;13929:122::-;14002:24;14020:5;14002:24;:::i;:::-;13995:5;13992:35;13982:63;;14041:1;14038;14031:12;13982:63;13929:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1196600",
								"executionCost": "71881",
								"totalCost": "1268481"
							},
							"external": {
								"BUSD()": "2514",
								"CalcLpPrice(address,address)": "infinite",
								"WBNB()": "2533"
							},
							"internal": {
								"WBNBPrice(contract Router,address)": "infinite",
								"price(contract Router,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13649,
									"end": 15365,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13728,
									"end": 13770,
									"name": "PUSH",
									"source": 0,
									"value": "AE13D989DAC2F0DEBFF460AC112A837C89BAA7CD"
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13799,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "78867BBEEF44F2326BF8DDD1941A4439382EF2A7"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13865,
									"end": 13884,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 13848,
									"end": 13884,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13848,
									"end": 13884,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13649,
									"end": 15365,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab785c3b892b4e6228511d6f72bb6a7c800bf495e5ee2eba1d102083615dd76364736f6c63430008070033",
									".code": [
										{
											"begin": 13649,
											"end": 15365,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "PUSH",
											"source": 0,
											"value": "344E49D9"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "PUSH",
											"source": 0,
											"value": "484F4EA9"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "PUSH",
											"source": 0,
											"value": "8DD95002"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14523,
											"end": 14530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14542,
											"end": 14556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14567,
											"end": 14581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14620,
											"end": 14629,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14620,
											"end": 14636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14636,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14595,
											"end": 14639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14595,
											"end": 14639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14595,
											"end": 14639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14595,
											"end": 14639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14595,
											"end": 14639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14592,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14592,
											"end": 14928,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14718,
											"end": 14766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14724,
											"end": 14737,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14755,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14746,
											"end": 14762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14762,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14718,
											"end": 14723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14718,
											"end": 14766,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14718,
											"end": 14766,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14718,
											"end": 14766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14674,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14665,
											"end": 14681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14693,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14665,
											"end": 14693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14693,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 14702,
											"end": 14711,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14665,
											"end": 14713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14665,
											"end": 14717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14767,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14665,
											"end": 14767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14767,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14665,
											"end": 14767,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14665,
											"end": 14767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14655,
											"end": 14768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14655,
											"end": 14768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14592,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14592,
											"end": 14928,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14592,
											"end": 14928,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14592,
											"end": 14928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14862,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14872,
											"end": 14885,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14903,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14910,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14894,
											"end": 14910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14910,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14862,
											"end": 14871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14862,
											"end": 14914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14862,
											"end": 14914,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14862,
											"end": 14914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14818,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14809,
											"end": 14825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14825,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14809,
											"end": 14837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14837,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 14846,
											"end": 14855,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14809,
											"end": 14857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14809,
											"end": 14861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14809,
											"end": 14915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14809,
											"end": 14915,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14809,
											"end": 14915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14799,
											"end": 14916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14799,
											"end": 14916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14592,
											"end": 14928,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14592,
											"end": 14928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14977,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14984,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14968,
											"end": 14984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14984,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14968,
											"end": 14986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14943,
											"end": 14987,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14943,
											"end": 14987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14951,
											"end": 14955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14951,
											"end": 14955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14951,
											"end": 14955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14951,
											"end": 14955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14951,
											"end": 14955,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14951,
											"end": 14955,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14951,
											"end": 14955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14951,
											"end": 14955,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14951,
											"end": 14955,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14951,
											"end": 14955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14943,
											"end": 14987,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14943,
											"end": 14987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14943,
											"end": 14987,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 15276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 14940,
											"end": 15276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 15066,
											"end": 15114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 15072,
											"end": 15085,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15103,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15094,
											"end": 15110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15066,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15066,
											"end": 15114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15066,
											"end": 15114,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 15066,
											"end": 15114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15022,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15029,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15013,
											"end": 15029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15029,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15041,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15013,
											"end": 15041,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15041,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 15050,
											"end": 15059,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15013,
											"end": 15061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 15013,
											"end": 15065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15115,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15013,
											"end": 15115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15013,
											"end": 15115,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 15013,
											"end": 15115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15003,
											"end": 15116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15003,
											"end": 15116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 15276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14940,
											"end": 15276,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 15276,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 14940,
											"end": 15276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 15210,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 15220,
											"end": 15233,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15251,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15242,
											"end": 15258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15258,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15210,
											"end": 15219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 15210,
											"end": 15262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15210,
											"end": 15262,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 15210,
											"end": 15262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15166,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15157,
											"end": 15173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15173,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 15157,
											"end": 15175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15157,
											"end": 15185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15185,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 15194,
											"end": 15203,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 15157,
											"end": 15205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 15157,
											"end": 15209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15157,
											"end": 15263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15263,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15157,
											"end": 15263,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 15157,
											"end": 15263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15147,
											"end": 15264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15147,
											"end": 15264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 15276,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14940,
											"end": 15276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15304,
											"end": 15353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 15329,
											"end": 15338,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15350,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15329,
											"end": 15350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15350,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 15329,
											"end": 15352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15305,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 15316,
											"end": 15322,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15305,
											"end": 15311,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15305,
											"end": 15315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 15305,
											"end": 15315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15305,
											"end": 15323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15305,
											"end": 15323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15305,
											"end": 15323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15305,
											"end": 15323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15305,
											"end": 15323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15305,
											"end": 15323,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 15305,
											"end": 15323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15304,
											"end": 15328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 15304,
											"end": 15328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15304,
											"end": 15353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15304,
											"end": 15353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15304,
											"end": 15353,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15304,
											"end": 15353,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15304,
											"end": 15353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15304,
											"end": 15353,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 15304,
											"end": 15353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15354,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14444,
											"end": 15362,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13893,
											"end": 14171,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13893,
											"end": 14171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13967,
											"end": 13974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13986,
											"end": 14007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14024,
											"end": 14025,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13986,
											"end": 14026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13986,
											"end": 14026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14047,
											"end": 14052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14042,
											"end": 14043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14068,
											"end": 14069,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14093,
											"end": 14094,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14147,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14120,
											"end": 14147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14147,
											"name": "PUSH",
											"source": 0,
											"value": "D06CA61F"
										},
										{
											"begin": 14148,
											"end": 14154,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14148,
											"end": 14154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14155,
											"end": 14159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14120,
											"end": 14160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14161,
											"end": 14162,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14113,
											"end": 14163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14113,
											"end": 14163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14113,
											"end": 14163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 14171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 14171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 14171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 14171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 14171,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10268,
											"end": 10269,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10268,
											"end": 10274,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10311,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 10264,
											"end": 10311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10311,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 10264,
											"end": 10311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10339,
											"end": 10340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10336,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 10364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10369,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10427,
											"end": 10428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14257,
											"end": 14264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14276,
											"end": 14297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14314,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14337,
											"end": 14342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14358,
											"end": 14359,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14398,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14385,
											"end": 14412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14412,
											"name": "PUSH",
											"source": 0,
											"value": "D06CA61F"
										},
										{
											"begin": 14413,
											"end": 14419,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14413,
											"end": 14419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14420,
											"end": 14424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14426,
											"end": 14427,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8593,
											"end": 8774,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8593,
											"end": 8774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8671,
											"end": 8680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8687,
											"end": 8688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8683,
											"end": 8684,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8683,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 8683,
											"end": 8688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8683,
											"end": 8688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8683,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 8683,
											"end": 8688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8683,
											"end": 8688,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 8683,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8671,
											"end": 8688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8671,
											"end": 8688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8712,
											"end": 8713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8713,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 8699,
											"end": 8745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8765,
											"end": 8766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8758,
											"end": 8766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8758,
											"end": 8766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8758,
											"end": 8766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8774,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8774,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10904,
											"end": 11036,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10904,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10962,
											"end": 10969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 10993,
											"end": 10994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 10997,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 10992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 10989,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10982,
											"end": 11028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10982,
											"end": 11028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10904,
											"end": 11036,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10904,
											"end": 11036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10904,
											"end": 11036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10904,
											"end": 11036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10904,
											"end": 11036,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11566,
											"end": 11911,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 11566,
											"end": 11911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11751,
											"end": 11752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11747,
											"end": 11748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11747,
											"end": 11752,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11754,
											"end": 11766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11778,
											"end": 11787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11794,
											"end": 11795,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11791,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 11790,
											"end": 11795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 11790,
											"end": 11795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11790,
											"end": 11795,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 11790,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11778,
											"end": 11795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11778,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11902,
											"end": 11903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11895,
											"end": 11903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11895,
											"end": 11903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11895,
											"end": 11903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11911,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11911,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11911,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11911,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11911,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11911,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 272,
											"end": 293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 309,
											"end": 325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 376,
											"end": 393,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 367,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 400,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 535,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 545,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 679,
											"end": 682,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 623,
											"end": 684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 713,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 704,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 738,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 791,
											"end": 1176,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 791,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 873,
											"end": 878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 915,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 907,
											"end": 913,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 903,
											"end": 920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 899,
											"end": 926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 889,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 889,
											"end": 1011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 930,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 930,
											"end": 1009,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 930,
											"end": 1009,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 930,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 889,
											"end": 1011,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 889,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1166,
											"end": 1169,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1065,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1065,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1065,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 879,
											"end": 1176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 1176,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 791,
											"end": 1176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 791,
											"end": 1176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 1176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 1176,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1182,
											"end": 1353,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 1182,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1291,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1341,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1300,
											"end": 1347,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1300,
											"end": 1347,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1300,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1518,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1359,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1460,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1469,
											"end": 1512,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1469,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1469,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1518,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1518,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1518,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1524,
											"end": 1691,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1524,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1629,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1679,
											"end": 1684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 1638,
											"end": 1685,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1638,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1638,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1691,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1697,
											"end": 1840,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1697,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1828,
											"end": 1833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1840,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1840,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1846,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1846,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1992,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1976,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 1988,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 1993,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2077,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1958,
											"end": 2077,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1996,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 1996,
											"end": 2075,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1996,
											"end": 2075,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1996,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2077,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1958,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2116,
											"end": 2140,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2185,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2186,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 2153,
											"end": 2270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 2189,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 2189,
											"end": 2268,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2189,
											"end": 2268,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 2189,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2270,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 2153,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 2375,
											"end": 2382,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2364,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2294,
											"end": 2383,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2294,
											"end": 2383,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 2294,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2383,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 2400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 2400,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2406,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2406,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2541,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2525,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2537,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2542,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2626,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 2507,
											"end": 2626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 2545,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2545,
											"end": 2624,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2545,
											"end": 2624,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 2545,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2626,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 2507,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2760,
											"end": 2767,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2749,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2690,
											"end": 2768,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2690,
											"end": 2768,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2690,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2768,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2897,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2928,
											"end": 2937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 2926,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2943,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 3027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 2908,
											"end": 3027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2946,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2946,
											"end": 3025,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2946,
											"end": 3025,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2946,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 3027,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 2908,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3091,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3146,
											"end": 3153,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3135,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 3091,
											"end": 3154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3091,
											"end": 3154,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3091,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3205,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3229,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3288,
											"end": 3295,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3277,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3229,
											"end": 3296,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3229,
											"end": 3296,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3229,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3296,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 3313,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3319,
											"end": 3670,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3319,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3440,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3424,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3441,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3525,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3406,
											"end": 3525,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3444,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3444,
											"end": 3523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3444,
											"end": 3523,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3444,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3525,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3406,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3645,
											"end": 3652,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3625,
											"end": 3634,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3589,
											"end": 3653,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3589,
											"end": 3653,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3589,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3653,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3670,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3670,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3676,
											"end": 3855,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3676,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3766,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3808,
											"end": 3811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3766,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3766,
											"end": 3812,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3766,
											"end": 3812,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3766,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3848,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3839,
											"end": 3842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3855,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 3969,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3861,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3956,
											"end": 3961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3933,
											"end": 3936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3969,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3975,
											"end": 4093,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 3975,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4062,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 4080,
											"end": 4085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4062,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 4062,
											"end": 4086,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4062,
											"end": 4086,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 4062,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4093,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4129,
											"end": 4861,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4129,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4325,
											"end": 4330,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4277,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4277,
											"end": 4331,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4277,
											"end": 4331,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4277,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 4426,
											"end": 4432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4424,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4347,
											"end": 4433,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4347,
											"end": 4433,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 4347,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4433,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4457,
											"end": 4513,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4457,
											"end": 4513,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4457,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4583,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4584,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 4660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 4739,
											"end": 4742,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4680,
											"end": 4743,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4680,
											"end": 4743,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 4680,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4673,
											"end": 4743,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 4673,
											"end": 4743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4766,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4819,
											"end": 4825,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4766,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 4766,
											"end": 4826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 4826,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4766,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4756,
											"end": 4826,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4756,
											"end": 4826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4599,
											"end": 4600,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4596,
											"end": 4597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4601,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4587,
											"end": 4601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4587,
											"end": 4601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 4552,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4556,
											"end": 4570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4855,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4855,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4861,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4867,
											"end": 5231,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 4867,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4955,
											"end": 4958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4983,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 5016,
											"end": 5021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4983,
											"end": 5022,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4983,
											"end": 5022,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 4983,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 5102,
											"end": 5108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5100,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 5038,
											"end": 5109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5038,
											"end": 5109,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 5038,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5109,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 5163,
											"end": 5169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5161,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5144,
											"end": 5149,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 5118,
											"end": 5170,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5118,
											"end": 5170,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 5118,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 5217,
											"end": 5223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5193,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 5231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4867,
											"end": 5231,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4867,
											"end": 5231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4867,
											"end": 5231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4867,
											"end": 5231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4867,
											"end": 5231,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5237,
											"end": 5603,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 5237,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5400,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 5464,
											"end": 5466,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 5459,
											"end": 5462,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 5400,
											"end": 5467,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5400,
											"end": 5467,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 5400,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 5565,
											"end": 5568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 5476,
											"end": 5569,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5476,
											"end": 5569,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 5476,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5594,
											"end": 5596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5603,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5609,
											"end": 5975,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 5609,
											"end": 5975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5772,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 5836,
											"end": 5838,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5831,
											"end": 5834,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 5772,
											"end": 5839,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5772,
											"end": 5839,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 5772,
											"end": 5839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 5937,
											"end": 5940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 5848,
											"end": 5941,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5848,
											"end": 5941,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 5848,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 5968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5961,
											"end": 5964,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5957,
											"end": 5969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5950,
											"end": 5969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5950,
											"end": 5969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5609,
											"end": 5975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5609,
											"end": 5975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5609,
											"end": 5975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5609,
											"end": 5975,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5981,
											"end": 6099,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 5981,
											"end": 6099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 6086,
											"end": 6091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 6068,
											"end": 6092,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6068,
											"end": 6092,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 6068,
											"end": 6092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6099,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6105,
											"end": 6327,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 6105,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 6202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6236,
											"end": 6238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6225,
											"end": 6234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6213,
											"end": 6239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6213,
											"end": 6239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 6317,
											"end": 6318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6306,
											"end": 6315,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6302,
											"end": 6319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6293,
											"end": 6299,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 6249,
											"end": 6320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6249,
											"end": 6320,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 6249,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6327,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6327,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6333,
											"end": 6646,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6333,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6446,
											"end": 6450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6484,
											"end": 6486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6473,
											"end": 6482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6461,
											"end": 6487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6461,
											"end": 6487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6533,
											"end": 6542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6531,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6523,
											"end": 6543,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6519,
											"end": 6520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6508,
											"end": 6517,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6504,
											"end": 6521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6497,
											"end": 6544,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 6634,
											"end": 6638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 6561,
											"end": 6639,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6561,
											"end": 6639,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 6561,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6646,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6646,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6652,
											"end": 7071,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6652,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6818,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6856,
											"end": 6858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6845,
											"end": 6854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6833,
											"end": 6859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6833,
											"end": 6859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6899,
											"end": 6903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6895,
											"end": 6915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6891,
											"end": 6892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6880,
											"end": 6889,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 6893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6869,
											"end": 6916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6933,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 7059,
											"end": 7063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6933,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 6933,
											"end": 7064,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6933,
											"end": 7064,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 6933,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 7064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 7064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 7071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 7071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 7071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 7071,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7077,
											"end": 7496,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7077,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7281,
											"end": 7283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7270,
											"end": 7279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7324,
											"end": 7328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7320,
											"end": 7340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7316,
											"end": 7317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7305,
											"end": 7314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7341,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 7484,
											"end": 7488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7358,
											"end": 7489,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7358,
											"end": 7489,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 7358,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7496,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7502,
											"end": 7724,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7502,
											"end": 7724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7595,
											"end": 7599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7633,
											"end": 7635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7610,
											"end": 7636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7610,
											"end": 7636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7703,
											"end": 7712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 7646,
											"end": 7717,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7646,
											"end": 7717,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 7646,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7724,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7724,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7730,
											"end": 8213,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 7730,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7901,
											"end": 7905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7939,
											"end": 7941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7928,
											"end": 7937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 8020,
											"end": 8021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8018,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8002,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 7952,
											"end": 8023,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7952,
											"end": 8023,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 7952,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8079,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8044,
											"end": 8053,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8033,
											"end": 8081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 8201,
											"end": 8205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8198,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 8098,
											"end": 8206,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8098,
											"end": 8206,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 8098,
											"end": 8206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8090,
											"end": 8206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8090,
											"end": 8206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 8213,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 8213,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 8213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 8213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 8213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 8213,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8219,
											"end": 8348,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 8219,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8280,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 8280,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 8280,
											"end": 8300,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8280,
											"end": 8300,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 8280,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8270,
											"end": 8300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8270,
											"end": 8300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8337,
											"end": 8341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 8309,
											"end": 8342,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8309,
											"end": 8342,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8309,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8219,
											"end": 8348,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8219,
											"end": 8348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8219,
											"end": 8348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8219,
											"end": 8348,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8354,
											"end": 8429,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 8354,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8387,
											"end": 8393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8414,
											"end": 8423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8404,
											"end": 8423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8404,
											"end": 8423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8354,
											"end": 8429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8354,
											"end": 8429,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8435,
											"end": 8746,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 8435,
											"end": 8746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8512,
											"end": 8516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8602,
											"end": 8620,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8591,
											"end": 8621,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8588,
											"end": 8644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8588,
											"end": 8644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 8588,
											"end": 8644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8624,
											"end": 8642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 8624,
											"end": 8642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 8624,
											"end": 8642,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8624,
											"end": 8642,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 8624,
											"end": 8642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8588,
											"end": 8644,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 8588,
											"end": 8644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8679,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 8679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8734,
											"end": 8738,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8728,
											"end": 8732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8716,
											"end": 8739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8716,
											"end": 8739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8435,
											"end": 8746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8435,
											"end": 8746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8435,
											"end": 8746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8435,
											"end": 8746,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8752,
											"end": 8884,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 8752,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8842,
											"end": 8845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8834,
											"end": 8845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8834,
											"end": 8845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8872,
											"end": 8876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8867,
											"end": 8870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8863,
											"end": 8877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8855,
											"end": 8877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8855,
											"end": 8877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8752,
											"end": 8884,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8752,
											"end": 8884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8752,
											"end": 8884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8752,
											"end": 8884,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8890,
											"end": 9004,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 8890,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8957,
											"end": 8963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 8996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8985,
											"end": 8997,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8975,
											"end": 8997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8975,
											"end": 8997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8890,
											"end": 9004,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8890,
											"end": 9004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8890,
											"end": 9004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8890,
											"end": 9004,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9010,
											"end": 9109,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 9010,
											"end": 9109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9062,
											"end": 9068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9096,
											"end": 9101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9080,
											"end": 9102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9080,
											"end": 9102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9010,
											"end": 9109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9010,
											"end": 9109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9010,
											"end": 9109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9010,
											"end": 9109,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9115,
											"end": 9228,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 9115,
											"end": 9228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9185,
											"end": 9189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9217,
											"end": 9221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9212,
											"end": 9215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9200,
											"end": 9222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9200,
											"end": 9222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9228,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9234,
											"end": 9418,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 9234,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9333,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9367,
											"end": 9373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9362,
											"end": 9365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9355,
											"end": 9374,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9407,
											"end": 9411,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9402,
											"end": 9405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9234,
											"end": 9418,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9234,
											"end": 9418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9234,
											"end": 9418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9234,
											"end": 9418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9234,
											"end": 9418,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9424,
											"end": 9593,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 9424,
											"end": 9593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9508,
											"end": 9519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9542,
											"end": 9548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9540,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9530,
											"end": 9549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9582,
											"end": 9586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9577,
											"end": 9580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9573,
											"end": 9587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9424,
											"end": 9593,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9424,
											"end": 9593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9424,
											"end": 9593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9424,
											"end": 9593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9424,
											"end": 9593,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9599,
											"end": 9904,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 9599,
											"end": 9904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9639,
											"end": 9642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 9676,
											"end": 9677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9658,
											"end": 9678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 9658,
											"end": 9678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9658,
											"end": 9678,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 9658,
											"end": 9678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9653,
											"end": 9678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9653,
											"end": 9678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9692,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 9710,
											"end": 9711,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9692,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 9692,
											"end": 9712,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9692,
											"end": 9712,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 9692,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9687,
											"end": 9712,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9687,
											"end": 9712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 9847,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9778,
											"end": 9844,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9774,
											"end": 9848,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9768,
											"end": 9849,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9872,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 9765,
											"end": 9872,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9872,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 9765,
											"end": 9872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 9894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9889,
											"end": 9898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9882,
											"end": 9898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9882,
											"end": 9898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9904,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9904,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9910,
											"end": 10095,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 9910,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9950,
											"end": 9951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9967,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 9985,
											"end": 9986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9967,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 9967,
											"end": 9987,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9967,
											"end": 9987,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 9967,
											"end": 9987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9962,
											"end": 9987,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9962,
											"end": 9987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10001,
											"end": 10021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 10019,
											"end": 10020,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10001,
											"end": 10021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 10001,
											"end": 10021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10001,
											"end": 10021,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 10001,
											"end": 10021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9996,
											"end": 10021,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9996,
											"end": 10021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10030,
											"end": 10065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 10030,
											"end": 10065,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10045,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 10045,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10045,
											"end": 10063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10045,
											"end": 10063,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 10045,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10030,
											"end": 10065,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 10030,
											"end": 10065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10087,
											"end": 10088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10080,
											"end": 10089,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 10095,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 10095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 10095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 10095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 10095,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10101,
											"end": 10449,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 10101,
											"end": 10449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10141,
											"end": 10148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 10182,
											"end": 10183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10198,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 10216,
											"end": 10217,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10198,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 10198,
											"end": 10218,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10198,
											"end": 10218,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 10198,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10193,
											"end": 10218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10193,
											"end": 10218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10386,
											"end": 10387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10318,
											"end": 10384,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10314,
											"end": 10388,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10312,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10308,
											"end": 10389,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10296,
											"end": 10305,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10306,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10285,
											"end": 10390,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10413,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 10282,
											"end": 10413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10393,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 10393,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 10393,
											"end": 10411,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10393,
											"end": 10411,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 10393,
											"end": 10411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10413,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 10282,
											"end": 10413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10434,
											"end": 10443,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10423,
											"end": 10443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10423,
											"end": 10443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10449,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10449,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10455,
											"end": 10551,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 10455,
											"end": 10551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10492,
											"end": 10499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10521,
											"end": 10545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 10539,
											"end": 10544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10521,
											"end": 10545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10521,
											"end": 10545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10521,
											"end": 10545,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 10521,
											"end": 10545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10510,
											"end": 10545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10510,
											"end": 10545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10455,
											"end": 10551,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10455,
											"end": 10551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10455,
											"end": 10551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10455,
											"end": 10551,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10557,
											"end": 10667,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 10557,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10608,
											"end": 10615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10626,
											"end": 10661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10626,
											"end": 10661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10667,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10667,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10673,
											"end": 10779,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 10673,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10749,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 10767,
											"end": 10772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 10749,
											"end": 10773,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10749,
											"end": 10773,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 10749,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10738,
											"end": 10773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10738,
											"end": 10773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10779,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10785,
											"end": 10895,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 10785,
											"end": 10895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10865,
											"end": 10889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 10883,
											"end": 10888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10865,
											"end": 10889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 10865,
											"end": 10889,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10865,
											"end": 10889,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 10865,
											"end": 10889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10854,
											"end": 10889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10854,
											"end": 10889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10785,
											"end": 10895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10785,
											"end": 10895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10785,
											"end": 10895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10785,
											"end": 10895,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10901,
											"end": 11027,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10901,
											"end": 11027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10978,
											"end": 11020,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10971,
											"end": 10976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10967,
											"end": 11021,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10901,
											"end": 11027,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10901,
											"end": 11027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10901,
											"end": 11027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10901,
											"end": 11027,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11033,
											"end": 11110,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 11033,
											"end": 11110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11070,
											"end": 11077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11099,
											"end": 11104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11088,
											"end": 11104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11088,
											"end": 11104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11110,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11110,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11116,
											"end": 11423,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 11116,
											"end": 11423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11194,
											"end": 11307,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 11194,
											"end": 11307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11208,
											"end": 11214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11202,
											"end": 11215,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11194,
											"end": 11307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11194,
											"end": 11307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 11194,
											"end": 11307,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11293,
											"end": 11294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11288,
											"end": 11291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11284,
											"end": 11295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11274,
											"end": 11275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11272,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11258,
											"end": 11297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11230,
											"end": 11232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11227,
											"end": 11228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11223,
											"end": 11233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11218,
											"end": 11233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11218,
											"end": 11233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11194,
											"end": 11307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 11194,
											"end": 11307,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11194,
											"end": 11307,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 11194,
											"end": 11307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11322,
											"end": 11323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11332,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11316,
											"end": 11417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11316,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 11316,
											"end": 11417,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11405,
											"end": 11406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11396,
											"end": 11402,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11394,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11387,
											"end": 11403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11380,
											"end": 11407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11316,
											"end": 11417,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 11316,
											"end": 11417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11165,
											"end": 11423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11423,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11429,
											"end": 11710,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 11429,
											"end": 11710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 11534,
											"end": 11538,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 11512,
											"end": 11539,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11512,
											"end": 11539,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 11512,
											"end": 11539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11504,
											"end": 11510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11500,
											"end": 11540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11642,
											"end": 11648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11630,
											"end": 11640,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11627,
											"end": 11649,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11606,
											"end": 11624,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11594,
											"end": 11604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11591,
											"end": 11625,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11588,
											"end": 11650,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11585,
											"end": 11673,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11585,
											"end": 11673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 11585,
											"end": 11673,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11653,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 11653,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 11653,
											"end": 11671,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11653,
											"end": 11671,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 11653,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11585,
											"end": 11673,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 11585,
											"end": 11673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11693,
											"end": 11703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11689,
											"end": 11691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11682,
											"end": 11704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11472,
											"end": 11710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11429,
											"end": 11710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11429,
											"end": 11710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11429,
											"end": 11710,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11716,
											"end": 11896,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 11716,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11761,
											"end": 11762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11754,
											"end": 11842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11861,
											"end": 11865,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 11858,
											"end": 11859,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11851,
											"end": 11866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11885,
											"end": 11889,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11882,
											"end": 11883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11875,
											"end": 11890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11902,
											"end": 12082,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 11902,
											"end": 12082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11950,
											"end": 12027,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11947,
											"end": 11948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11940,
											"end": 12028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12047,
											"end": 12051,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 12044,
											"end": 12045,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12037,
											"end": 12052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12071,
											"end": 12075,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12068,
											"end": 12069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12061,
											"end": 12076,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12088,
											"end": 12268,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 12088,
											"end": 12268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12136,
											"end": 12213,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12133,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12126,
											"end": 12214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12233,
											"end": 12237,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 12230,
											"end": 12231,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12223,
											"end": 12238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12257,
											"end": 12261,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12254,
											"end": 12255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12247,
											"end": 12262,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12274,
											"end": 12454,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 12274,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12322,
											"end": 12399,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12319,
											"end": 12320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12312,
											"end": 12400,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12419,
											"end": 12423,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 12416,
											"end": 12417,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12409,
											"end": 12424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12443,
											"end": 12447,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12440,
											"end": 12441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12433,
											"end": 12448,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12460,
											"end": 12577,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 12460,
											"end": 12577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12569,
											"end": 12570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12566,
											"end": 12567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12559,
											"end": 12571,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12583,
											"end": 12700,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 12583,
											"end": 12700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12689,
											"end": 12690,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12682,
											"end": 12694,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12706,
											"end": 12823,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 12706,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12815,
											"end": 12816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12812,
											"end": 12813,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12805,
											"end": 12817,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12829,
											"end": 12946,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 12829,
											"end": 12946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12938,
											"end": 12939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12935,
											"end": 12936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12928,
											"end": 12940,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 13054,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 12952,
											"end": 13054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12993,
											"end": 12999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13046,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13040,
											"end": 13047,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13035,
											"end": 13037,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13028,
											"end": 13033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13024,
											"end": 13038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13020,
											"end": 13048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13010,
											"end": 13048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13010,
											"end": 13048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 13054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 13054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 13054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 13054,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13060,
											"end": 13237,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 13060,
											"end": 13237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13229,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 13196,
											"end": 13197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13188,
											"end": 13194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13184,
											"end": 13198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13177,
											"end": 13230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13060,
											"end": 13237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13060,
											"end": 13237,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13243,
											"end": 13463,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 13243,
											"end": 13463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13383,
											"end": 13417,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 13379,
											"end": 13380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13371,
											"end": 13377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13367,
											"end": 13381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13360,
											"end": 13418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13452,
											"end": 13455,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13447,
											"end": 13449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13439,
											"end": 13445,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13435,
											"end": 13450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13428,
											"end": 13456,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13243,
											"end": 13463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13243,
											"end": 13463,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13469,
											"end": 13619,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 13469,
											"end": 13619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 13588,
											"end": 13593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 13556,
											"end": 13594,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13556,
											"end": 13594,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 13556,
											"end": 13594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13549,
											"end": 13554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13546,
											"end": 13595,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 13536,
											"end": 13613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13609,
											"end": 13610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13606,
											"end": 13607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13599,
											"end": 13611,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13613,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 13536,
											"end": 13613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13469,
											"end": 13619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13469,
											"end": 13619,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13625,
											"end": 13767,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 13625,
											"end": 13767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13708,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 13736,
											"end": 13741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13708,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 13708,
											"end": 13742,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13708,
											"end": 13742,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 13708,
											"end": 13742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13701,
											"end": 13706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13698,
											"end": 13743,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13688,
											"end": 13761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 13688,
											"end": 13761,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13757,
											"end": 13758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13754,
											"end": 13755,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13747,
											"end": 13759,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13688,
											"end": 13761,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 13688,
											"end": 13761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13625,
											"end": 13767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13625,
											"end": 13767,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13773,
											"end": 13923,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 13773,
											"end": 13923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13860,
											"end": 13898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 13892,
											"end": 13897,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13860,
											"end": 13898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 13860,
											"end": 13898,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13860,
											"end": 13898,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 13860,
											"end": 13898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13853,
											"end": 13858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13850,
											"end": 13899,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 13840,
											"end": 13917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13910,
											"end": 13911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13903,
											"end": 13915,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13917,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 13840,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13773,
											"end": 13923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13773,
											"end": 13923,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13929,
											"end": 14051,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 13929,
											"end": 14051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14002,
											"end": 14026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 14020,
											"end": 14025,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14002,
											"end": 14026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 14002,
											"end": 14026,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14002,
											"end": 14026,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 14002,
											"end": 14026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13995,
											"end": 14000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13992,
											"end": 14027,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13982,
											"end": 14045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 13982,
											"end": 14045,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14041,
											"end": 14042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14038,
											"end": 14039,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14031,
											"end": 14043,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13982,
											"end": 14045,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 13982,
											"end": 14045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13929,
											"end": 14051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13929,
											"end": 14051,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BUSD()": "484f4ea9",
							"CalcLpPrice(address,address)": "344e49d9",
							"WBNB()": "8dd95002"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract LP\",\"name\":\"lpAddress\",\"type\":\"address\"},{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"name\":\"CalcLpPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LpUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xde4aa73352a7ce4f48d1e77d8e96c9cb62399bdb716030304fafa0f9fc956eb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0044e6d84f273d3f85ecf685a703ffde0b8db35a498c48762ecdcd009e4608ca\",\"dweb:/ipfs/QmZa6pKzYvUWZ3GEWgBVqdp3q8UxPoEoPycNrifKq2QLTh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 530,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "WBNB",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 533,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "BUSD",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 536,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "amount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[])": "d06ca61f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xde4aa73352a7ce4f48d1e77d8e96c9cb62399bdb716030304fafa0f9fc956eb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0044e6d84f273d3f85ecf685a703ffde0b8db35a498c48762ecdcd009e4608ca\",\"dweb:/ipfs/QmZa6pKzYvUWZ3GEWgBVqdp3q8UxPoEoPycNrifKq2QLTh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":8338:13186  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":8338:13186  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ee9c38193cf48b5dfe5793e74d3fcc9dd826d6fe9fe44d2b0fd3b4ab14d10f1564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee9c38193cf48b5dfe5793e74d3fcc9dd826d6fe9fe44d2b0fd3b4ab14d10f1564736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SWAP13 CODESIZE NOT EXTCODECOPY DELEGATECALL DUP12 0x5D INVALID JUMPI SWAP4 0xE7 0x4D EXTCODEHASH 0xCC SWAP14 0xD8 0x26 0xD6 INVALID SWAP16 0xE4 0x4D 0x2B 0xF 0xD3 0xB4 0xAB EQ 0xD1 0xF ISZERO PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "8338:4848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee9c38193cf48b5dfe5793e74d3fcc9dd826d6fe9fe44d2b0fd3b4ab14d10f1564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SWAP13 CODESIZE NOT EXTCODECOPY DELEGATECALL DUP12 0x5D INVALID JUMPI SWAP4 0xE7 0x4D EXTCODEHASH 0xCC SWAP14 0xD8 0x26 0xD6 INVALID SWAP16 0xE4 0x4D 0x2B 0xF 0xD3 0xB4 0xAB EQ 0xD1 0xF ISZERO PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "8338:4848:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ee9c38193cf48b5dfe5793e74d3fcc9dd826d6fe9fe44d2b0fd3b4ab14d10f1564736f6c63430008070033",
									".code": [
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xde4aa73352a7ce4f48d1e77d8e96c9cb62399bdb716030304fafa0f9fc956eb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0044e6d84f273d3f85ecf685a703ffde0b8db35a498c48762ecdcd009e4608ca\",\"dweb:/ipfs/QmZa6pKzYvUWZ3GEWgBVqdp3q8UxPoEoPycNrifKq2QLTh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/LpPrice.sol": {
				"ast": {
					"absolutePath": "contracts/LpPrice.sol",
					"exportedSymbols": {
						"Address": [
							293
						],
						"IERC20": [
							494
						],
						"LP": [
							512
						],
						"LpUtils": [
							781
						],
						"Router": [
							524
						],
						"SafeMath": [
							486
						]
					},
					"id": 782,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 293,
							"linearizedBaseContracts": [
								293
							],
							"name": "Address",
							"nameLocation": "68:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "1134:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 9,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "1363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1363:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1363:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1363:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 8,
												"id": 14,
												"nodeType": "Return",
												"src": "1356:30:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "83:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1077:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1096:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1088:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:17:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1128:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:6:0"
									},
									"scope": 293,
									"src": "1068:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "2400:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 27,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2427:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 26,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2419:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 25,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2419:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2419:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2419:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 30,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2444:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2419:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2452:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "2411:73:0"
											},
											{
												"assignments": [
													36,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2503:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 49,
														"src": "2498:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 35,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 43,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2546:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 37,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2516:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2516:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 39,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2538:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2516:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2516:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2497:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 45,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "2568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2560:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2560:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "2560:78:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "1402:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2338:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2364:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2348:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2383:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2375:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:43:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2400:0:0"
									},
									"scope": 293,
									"src": "2329:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "3497:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 61,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "3528:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 62,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "3536:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3542:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 60,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															67,
															87
														],
														"referencedDeclaration": 87,
														"src": "3515:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 59,
												"id": 65,
												"nodeType": "Return",
												"src": "3508:67:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2654:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3417:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3438:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3430:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3459:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3446:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 54,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3446:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3429:35:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3483:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:14:0"
									},
									"scope": 293,
									"src": "3408:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "3964:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 80,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "4004:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 81,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4012:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 83,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "4021:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 79,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "3982:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3982:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 78,
												"id": 85,
												"nodeType": "Return",
												"src": "3975:59:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "3591:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3822:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3853:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3845:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3883:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3870:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 71,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3870:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3912:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3898:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 73,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3898:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:97:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3950:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 76,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3950:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3949:14:0"
									},
									"scope": 293,
									"src": "3813:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4564:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 100,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "4604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 101,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4612:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 102,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4618:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4625:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 99,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "4582:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4582:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 98,
												"id": 105,
												"nodeType": "Return",
												"src": "4575:94:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "4050:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4426:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4483:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 91,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:84:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4550:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 96,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4550:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:14:0"
									},
									"scope": 293,
									"src": "4417:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "5117:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 124,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5144:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5136:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 122,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5136:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5136:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5136:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 127,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5161:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5136:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5168:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5128:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5128:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "5128:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 134,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "5239:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 133,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "5228:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5228:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5248:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5220:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "5220:60:0"
											},
											{
												"assignments": [
													140,
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5299:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5294:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 139,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5294:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5321:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5308:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 141,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5308:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"id": 147,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 143,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "5335:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5335:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 145,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5354:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5335:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5335:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5293:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 152,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5410:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 153,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "5422:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 150,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "5384:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 120,
												"id": 155,
												"nodeType": "Return",
												"src": "5377:58:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "4685:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4982:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4974:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5035:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5027:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5065:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5051:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5051:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:121:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5103:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5103:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5102:14:0"
									},
									"scope": 293,
									"src": "4933:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "5728:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5765:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "5773:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5779:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 167,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															209
														],
														"referencedDeclaration": 209,
														"src": "5746:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5746:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 166,
												"id": 172,
												"nodeType": "Return",
												"src": "5739:80:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5451:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5637:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5664:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5656:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5672:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5655:35:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5714:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:14:0"
									},
									"scope": 293,
									"src": "5628:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "6181:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 188,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "6211:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 187,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "6200:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6200:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6220:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6192:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "6192:67:0"
											},
											{
												"assignments": [
													194,
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6278:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6273:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 193,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6273:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6300:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6287:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 195,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"arguments": [
														{
															"id": 199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "6332:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 197,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6314:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6314:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6314:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6272:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "6372:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 204,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "6381:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 205,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "6393:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 202,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "6355:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6355:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 185,
												"id": 207,
												"nodeType": "Return",
												"src": "6348:58:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "5835:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6028:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6065:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6057:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6095:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6082:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6082:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6124:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6110:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6110:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6046:97:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6167:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6167:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6166:14:0"
									},
									"scope": 293,
									"src": "6019:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "6698:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6737:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6751:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 219,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															226,
															261
														],
														"referencedDeclaration": 261,
														"src": "6716:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6716:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 218,
												"id": 224,
												"nodeType": "Return",
												"src": "6709:84:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6422:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6610:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6639:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6647:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6630:35:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6684:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6684:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6683:14:0"
									},
									"scope": 293,
									"src": "6601:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "7154:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 240,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "7184:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 239,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "7173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7173:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "7165:69:0"
											},
											{
												"assignments": [
													246,
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7253:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7248:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7275:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7262:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 247,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7262:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [
														{
															"id": 251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7289:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7289:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7289:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7247:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "7349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 256,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7358:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 257,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7370:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 254,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "7332:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7332:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 237,
												"id": 259,
												"nodeType": "Return",
												"src": "7325:58:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "6809:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7004:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7043:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7035:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7073:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7060:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7060:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7102:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7088:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7024:97:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7140:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7140:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7139:14:0"
									},
									"scope": 293,
									"src": "6995:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "7783:548:0",
										"statements": [
											{
												"condition": {
													"id": 273,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 264,
													"src": "7798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "7857:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "7943:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7943:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7943:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 287,
																"nodeType": "Block",
																"src": "8258:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 284,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "8284:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 283,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8277:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8277:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 286,
																		"nodeType": "ExpressionStatement",
																		"src": "8277:20:0"
																	}
																]
															},
															"id": 288,
															"nodeType": "IfStatement",
															"src": "7939:374:0",
															"trueBody": {
																"id": 282,
																"nodeType": "Block",
																"src": "7966:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8089:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8112:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8141:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8135:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8135:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8116:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8185:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8189:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8181:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8181:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8202:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8174:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8174:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8174:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8141:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8189:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 281,
																		"nodeType": "InlineAssembly",
																		"src": "8080:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "7794:530:0",
												"trueBody": {
													"id": 276,
													"nodeType": "Block",
													"src": "7807:44:0",
													"statements": [
														{
															"expression": {
																"id": 274,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "7829:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 272,
															"id": 275,
															"nodeType": "Return",
															"src": "7822:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "7399:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7628:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7655:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7655:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7691:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7678:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7678:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7726:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7712:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7712:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7644:101:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7769:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7769:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7768:14:0"
									},
									"scope": 293,
									"src": "7619:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 782,
							"src": "60:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486
							],
							"name": "SafeMath",
							"nameLocation": "8346:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "8660:114:0",
										"statements": [
											{
												"assignments": [
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "8679:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "8671:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 303,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8671:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 308,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 305,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "8683:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 306,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "8687:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8683:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8671:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 310,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "8707:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 311,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "8712:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8707:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8715:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8699:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8699:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "8699:46:0"
											},
											{
												"expression": {
													"id": 316,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 304,
													"src": "8765:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 302,
												"id": 317,
												"nodeType": "Return",
												"src": "8758:8:0"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "8362:225:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8602:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8614:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "8606:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8625:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "8617:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8605:22:0"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "8651:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8650:9:0"
									},
									"scope": 486,
									"src": "8593:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "9116:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "9138:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 331,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "9141:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9144:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 329,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															336,
															364
														],
														"referencedDeclaration": 364,
														"src": "9134:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9134:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 328,
												"id": 334,
												"nodeType": "Return",
												"src": "9127:50:0"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "8782:261:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "9058:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9070:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9062:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9081:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9073:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9061:22:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9107:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9106:9:0"
									},
									"scope": 486,
									"src": "9049:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "9617:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 349,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "9636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 350,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "9641:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9636:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 352,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "9644:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9628:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "9628:29:0"
											},
											{
												"assignments": [
													356
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "9676:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "9668:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 360,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 357,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "9680:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 358,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "9684:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9680:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9668:17:0"
											},
											{
												"expression": {
													"id": 361,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 356,
													"src": "9705:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 347,
												"id": 362,
												"nodeType": "Return",
												"src": "9698:8:0"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "9193:323:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "9531:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9543:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9535:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9554:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9546:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9571:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9557:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9557:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9534:50:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9608:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9607:9:0"
									},
									"scope": 486,
									"src": "9522:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "10032:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 374,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "10268:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10273:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10268:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 380,
												"nodeType": "IfStatement",
												"src": "10264:47:0",
												"trueBody": {
													"id": 379,
													"nodeType": "Block",
													"src": "10276:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10298:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 373,
															"id": 378,
															"nodeType": "Return",
															"src": "10291:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													382
												],
												"declarations": [
													{
														"constant": false,
														"id": 382,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "10331:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 398,
														"src": "10323:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 381,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 383,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "10335:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 384,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "10339:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10323:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 388,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "10359:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 389,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "10363:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10359:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 391,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "10368:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10359:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10371:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10351:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10351:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "10351:56:0"
											},
											{
												"expression": {
													"id": 396,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "10427:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 373,
												"id": 397,
												"nodeType": "Return",
												"src": "10420:8:0"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "9722:237:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "9974:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9986:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "9978:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9997:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "9989:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9977:22:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "10023:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10022:9:0"
									},
									"scope": 486,
									"src": "9965:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "10971:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "10993:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 411,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "10996:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10999:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 409,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															416,
															444
														],
														"referencedDeclaration": 444,
														"src": "10989:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10989:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 408,
												"id": 414,
												"nodeType": "Return",
												"src": "10982:46:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "10444:454:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "10913:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10925:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "10917:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10936:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "10928:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10916:22:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "10962:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10961:9:0"
									},
									"scope": 486,
									"src": "10904:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "11661:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 429,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "11747:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11747:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 432,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "11754:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11739:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11739:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "11739:28:0"
											},
											{
												"assignments": [
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "11786:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 443,
														"src": "11778:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 435,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11778:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "11790:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 438,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "11794:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11790:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11778:17:0"
											},
											{
												"expression": {
													"id": 441,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 436,
													"src": "11902:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 427,
												"id": 442,
												"nodeType": "Return",
												"src": "11895:8:0"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "11044:516:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "11575:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11587:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11579:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11598:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11590:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11615:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11601:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11601:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11578:50:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11651:9:0"
									},
									"scope": 486,
									"src": "11566:345:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "12435:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "12457:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 456,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "12460:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12463:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 454,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															461,
															485
														],
														"referencedDeclaration": 485,
														"src": "12453:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12453:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 459,
												"nodeType": "Return",
												"src": "12446:44:0"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "11919:443:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "12377:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12389:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "12381:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12400:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "12392:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12380:22:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "12426:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12425:9:0"
									},
									"scope": 486,
									"src": "12368:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "13112:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 474,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "13131:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13136:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13131:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 477,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "13139:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13123:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "13123:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 480,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "13170:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 481,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "13174:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13170:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 472,
												"id": 483,
												"nodeType": "Return",
												"src": "13163:12:0"
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "12506:505:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "13026:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13038:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13030:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13049:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13041:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13066:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13052:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13052:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13029:50:0"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13103:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13102:9:0"
									},
									"scope": 486,
									"src": "13017:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 782,
							"src": "8338:4848:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 494,
							"linearizedBaseContracts": [
								494
							],
							"name": "IERC20",
							"nameLocation": "13200:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13229:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13247:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "13239:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13238:17:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "13279:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13278:9:0"
									},
									"scope": 494,
									"src": "13220:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 782,
							"src": "13190:101:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 512,
							"linearizedBaseContracts": [
								512
							],
							"name": "LP",
							"nameLocation": "13305:2:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13326:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13337:2:0"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "13363:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13362:9:0"
									},
									"scope": 512,
									"src": "13317:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "13389:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13395:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "13421:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$494",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 502,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 501,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 494,
														"src": "13421:6:0"
													},
													"referencedDeclaration": 494,
													"src": "13421:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$494",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13420:8:0"
									},
									"scope": 512,
									"src": "13380:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "13446:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13452:2:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "13478:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$494",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 507,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 494,
														"src": "13478:6:0"
													},
													"referencedDeclaration": 494,
													"src": "13478:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$494",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13477:8:0"
									},
									"scope": 512,
									"src": "13437:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 782,
							"src": "13295:194:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 524,
							"linearizedBaseContracts": [
								524
							],
							"name": "Router",
							"nameLocation": "13503:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d06ca61f",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "13526:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "13545:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "13540:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "13572:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "13555:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 515,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13555:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 516,
													"nodeType": "ArrayTypeName",
													"src": "13555:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13539:38:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "13633:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "13619:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 519,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "13619:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 520,
													"nodeType": "ArrayTypeName",
													"src": "13619:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13618:23:0"
									},
									"scope": 524,
									"src": "13517:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 782,
							"src": "13493:152:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 781,
							"linearizedBaseContracts": [
								781
							],
							"name": "LpUtils",
							"nameLocation": "13658:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 527,
									"libraryName": {
										"id": 525,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "13679:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "13673:27:0",
									"typeName": {
										"id": 526,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13692:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8dd95002",
									"id": 530,
									"mutability": "mutable",
									"name": "WBNB",
									"nameLocation": "13721:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 781,
									"src": "13706:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 528,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
										"id": 529,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13728:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "484f4ea9",
									"id": 533,
									"mutability": "mutable",
									"name": "BUSD",
									"nameLocation": "13792:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 781,
									"src": "13777:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 531,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13777:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837383836374262456546343466323332366246384444643139343161343433393338324546324137",
										"id": 532,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13799:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 536,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "13856:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 781,
									"src": "13848:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 534,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13848:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 535,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13865:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "13975:196:0",
										"statements": [
											{
												"assignments": [
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "14003:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "13986:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 548,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13986:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 549,
															"nodeType": "ArrayTypeName",
															"src": "13986:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "33",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14024:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "14010:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14014:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 552,
															"nodeType": "ArrayTypeName",
															"src": "14014:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14010:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13986:40:0"
											},
											{
												"expression": {
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 557,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "14037:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 559,
														"indexExpression": {
															"hexValue": "30",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14042:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14037:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 560,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "14047:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14037:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "14037:15:0"
											},
											{
												"expression": {
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 563,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "14063:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 565,
														"indexExpression": {
															"hexValue": "31",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14068:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14063:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 566,
														"name": "WBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "14073:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14063:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "14063:14:0"
											},
											{
												"expression": {
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 569,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "14088:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 571,
														"indexExpression": {
															"hexValue": "32",
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14093:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14088:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 572,
														"name": "BUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "14098:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14088:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "14088:14:0"
											},
											{
												"expression": {
													"baseExpression": {
														"arguments": [
															{
																"id": 577,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "14148:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 578,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "14155:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															],
															"expression": {
																"id": 575,
																"name": "routerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "14120:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Router_$524",
																	"typeString": "contract Router"
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 523,
															"src": "14120:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14120:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 581,
													"indexExpression": {
														"hexValue": "32",
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14161:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14120:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 545,
												"id": 582,
												"nodeType": "Return",
												"src": "14113:50:0"
											}
										]
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "price",
									"nameLocation": "13902:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "13915:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "13908:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$524",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 538,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 537,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 524,
														"src": "13908:6:0"
													},
													"referencedDeclaration": 524,
													"src": "13908:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$524",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13938:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "13930:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13907:37:0"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "13967:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13966:9:0"
									},
									"scope": 781,
									"src": "13893:278:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "14265:171:0",
										"statements": [
											{
												"assignments": [
													598
												],
												"declarations": [
													{
														"constant": false,
														"id": 598,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "14293:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "14276:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 596,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14276:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 597,
															"nodeType": "ArrayTypeName",
															"src": "14276:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 604,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14314:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "14300:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 599,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14304:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 600,
															"nodeType": "ArrayTypeName",
															"src": "14304:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14300:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14276:40:0"
											},
											{
												"expression": {
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 605,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "14327:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 607,
														"indexExpression": {
															"hexValue": "30",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14332:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14327:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 608,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "14337:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14327:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "14327:15:0"
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 611,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "14353:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 613,
														"indexExpression": {
															"hexValue": "31",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14358:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14353:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 614,
														"name": "BUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "14363:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14353:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "14353:14:0"
											},
											{
												"expression": {
													"baseExpression": {
														"arguments": [
															{
																"id": 619,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "14413:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 620,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "14420:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															],
															"expression": {
																"id": 617,
																"name": "routerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "14385:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Router_$524",
																	"typeString": "contract Router"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 523,
															"src": "14385:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14385:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 623,
													"indexExpression": {
														"hexValue": "31",
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14426:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14385:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 593,
												"id": 624,
												"nodeType": "Return",
												"src": "14378:50:0"
											}
										]
									},
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "WBNBPrice",
									"nameLocation": "14188:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "14205:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "14198:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$524",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 586,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 585,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 524,
														"src": "14198:6:0"
													},
													"referencedDeclaration": 524,
													"src": "14198:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$524",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14228:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "14220:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14197:37:0"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "14257:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14257:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14256:9:0"
									},
									"scope": 781,
									"src": "14179:257:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "14531:831:0",
										"statements": [
											{
												"assignments": [
													638
												],
												"declarations": [
													{
														"constant": false,
														"id": 638,
														"mutability": "mutable",
														"name": "phase1",
														"nameLocation": "14550:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 779,
														"src": "14542:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14542:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 639,
												"nodeType": "VariableDeclarationStatement",
												"src": "14542:14:0"
											},
											{
												"assignments": [
													641
												],
												"declarations": [
													{
														"constant": false,
														"id": 641,
														"mutability": "mutable",
														"name": "phase2",
														"nameLocation": "14575:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 779,
														"src": "14567:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 640,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 642,
												"nodeType": "VariableDeclarationStatement",
												"src": "14567:14:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 645,
																"name": "WBNB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "14603:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14595:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 643,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14595:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14595:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 649,
																		"name": "lpAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 629,
																		"src": "14620:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LP_$512",
																			"typeString": "contract LP"
																		}
																	},
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "token0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 505,
																	"src": "14620:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$494_$",
																		"typeString": "function () view external returns (contract IERC20)"
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14620:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$494",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$494",
																	"typeString": "contract IERC20"
																}
															],
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14612:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 647,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14612:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14612:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14595:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 703,
													"nodeType": "Block",
													"src": "14784:144:0",
													"statements": [
														{
															"expression": {
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 679,
																	"name": "phase1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "14799:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 691,
																							"name": "routerAddress",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 632,
																							"src": "14872:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_Router_$524",
																								"typeString": "contract Router"
																							}
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [],
																									"expression": {
																										"argumentTypes": [],
																										"expression": {
																											"id": 694,
																											"name": "lpAddress",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 629,
																											"src": "14894:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_LP_$512",
																												"typeString": "contract LP"
																											}
																										},
																										"id": 695,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token0",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 505,
																										"src": "14894:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$494_$",
																											"typeString": "function () view external returns (contract IERC20)"
																										}
																									},
																									"id": 696,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "14894:18:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IERC20_$494",
																										"typeString": "contract IERC20"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_IERC20_$494",
																										"typeString": "contract IERC20"
																									}
																								],
																								"id": 693,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "14886:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 692,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "14886:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 697,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14886:27:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_Router_$524",
																								"typeString": "contract Router"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 690,
																						"name": "WBNBPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 626,
																						"src": "14862:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_contract$_Router_$524_$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (contract Router,address) view returns (uint256)"
																						}
																					},
																					"id": 698,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14862:52:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"id": 686,
																									"name": "lpAddress",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 629,
																									"src": "14846:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_LP_$512",
																										"typeString": "contract LP"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_LP_$512",
																										"typeString": "contract LP"
																									}
																								],
																								"id": 685,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "14838:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 684,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "14838:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 687,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14838:18:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"expression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"expression": {
																									"id": 680,
																									"name": "lpAddress",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 629,
																									"src": "14809:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_LP_$512",
																										"typeString": "contract LP"
																									}
																								},
																								"id": 681,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "token0",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 505,
																								"src": "14809:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$494_$",
																									"typeString": "function () view external returns (contract IERC20)"
																								}
																							},
																							"id": 682,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14809:18:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$494",
																								"typeString": "contract IERC20"
																							}
																						},
																						"id": 683,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balanceOf",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 493,
																						"src": "14809:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (address) view external returns (uint256)"
																						}
																					},
																					"id": 688,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14809:48:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 399,
																				"src": "14809:52:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14809:106:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 700,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14808:108:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14799:117:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 702,
															"nodeType": "ExpressionStatement",
															"src": "14799:117:0"
														}
													]
												},
												"id": 704,
												"nodeType": "IfStatement",
												"src": "14592:336:0",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "14640:140:0",
													"statements": [
														{
															"expression": {
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 654,
																	"name": "phase1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "14655:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 666,
																							"name": "routerAddress",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 632,
																							"src": "14724:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_Router_$524",
																								"typeString": "contract Router"
																							}
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [],
																									"expression": {
																										"argumentTypes": [],
																										"expression": {
																											"id": 669,
																											"name": "lpAddress",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 629,
																											"src": "14746:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_LP_$512",
																												"typeString": "contract LP"
																											}
																										},
																										"id": 670,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token0",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 505,
																										"src": "14746:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$494_$",
																											"typeString": "function () view external returns (contract IERC20)"
																										}
																									},
																									"id": 671,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "14746:18:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IERC20_$494",
																										"typeString": "contract IERC20"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_IERC20_$494",
																										"typeString": "contract IERC20"
																									}
																								],
																								"id": 668,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "14738:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 667,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "14738:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 672,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14738:27:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_Router_$524",
																								"typeString": "contract Router"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 665,
																						"name": "price",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 584,
																						"src": "14718:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_contract$_Router_$524_$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (contract Router,address) view returns (uint256)"
																						}
																					},
																					"id": 673,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14718:48:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"id": 661,
																									"name": "lpAddress",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 629,
																									"src": "14702:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_LP_$512",
																										"typeString": "contract LP"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_LP_$512",
																										"typeString": "contract LP"
																									}
																								],
																								"id": 660,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "14694:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 659,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "14694:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 662,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14694:18:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"expression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"expression": {
																									"id": 655,
																									"name": "lpAddress",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 629,
																									"src": "14665:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_LP_$512",
																										"typeString": "contract LP"
																									}
																								},
																								"id": 656,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "token0",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 505,
																								"src": "14665:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$494_$",
																									"typeString": "function () view external returns (contract IERC20)"
																								}
																							},
																							"id": 657,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14665:18:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$494",
																								"typeString": "contract IERC20"
																							}
																						},
																						"id": 658,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balanceOf",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 493,
																						"src": "14665:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (address) view external returns (uint256)"
																						}
																					},
																					"id": 663,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14665:48:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 399,
																				"src": "14665:52:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14665:102:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 675,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14664:104:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14655:113:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 677,
															"nodeType": "ExpressionStatement",
															"src": "14655:113:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 707,
																"name": "WBNB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "14951:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14943:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 705,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14943:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14943:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 711,
																		"name": "lpAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 629,
																		"src": "14968:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LP_$512",
																			"typeString": "contract LP"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "token1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 511,
																	"src": "14968:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$494_$",
																		"typeString": "function () view external returns (contract IERC20)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14968:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$494",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$494",
																	"typeString": "contract IERC20"
																}
															],
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14960:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 709,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14960:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14960:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14943:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 765,
													"nodeType": "Block",
													"src": "15132:144:0",
													"statements": [
														{
															"expression": {
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 741,
																	"name": "phase2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "15147:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 753,
																							"name": "routerAddress",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 632,
																							"src": "15220:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_Router_$524",
																								"typeString": "contract Router"
																							}
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [],
																									"expression": {
																										"argumentTypes": [],
																										"expression": {
																											"id": 756,
																											"name": "lpAddress",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 629,
																											"src": "15242:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_LP_$512",
																												"typeString": "contract LP"
																											}
																										},
																										"id": 757,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token1",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 511,
																										"src": "15242:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$494_$",
																											"typeString": "function () view external returns (contract IERC20)"
																										}
																									},
																									"id": 758,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "15242:18:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IERC20_$494",
																										"typeString": "contract IERC20"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_IERC20_$494",
																										"typeString": "contract IERC20"
																									}
																								],
																								"id": 755,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "15234:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 754,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "15234:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 759,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "15234:27:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_Router_$524",
																								"typeString": "contract Router"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 752,
																						"name": "WBNBPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 626,
																						"src": "15210:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_contract$_Router_$524_$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (contract Router,address) view returns (uint256)"
																						}
																					},
																					"id": 760,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15210:52:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"id": 748,
																									"name": "lpAddress",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 629,
																									"src": "15194:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_LP_$512",
																										"typeString": "contract LP"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_LP_$512",
																										"typeString": "contract LP"
																									}
																								],
																								"id": 747,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "15186:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 746,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "15186:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 749,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "15186:18:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"expression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"expression": {
																									"id": 742,
																									"name": "lpAddress",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 629,
																									"src": "15157:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_LP_$512",
																										"typeString": "contract LP"
																									}
																								},
																								"id": 743,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "token1",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 511,
																								"src": "15157:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$494_$",
																									"typeString": "function () view external returns (contract IERC20)"
																								}
																							},
																							"id": 744,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "15157:18:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$494",
																								"typeString": "contract IERC20"
																							}
																						},
																						"id": 745,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balanceOf",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 493,
																						"src": "15157:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (address) view external returns (uint256)"
																						}
																					},
																					"id": 750,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15157:48:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 399,
																				"src": "15157:52:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15157:106:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 762,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "15156:108:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15147:117:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 764,
															"nodeType": "ExpressionStatement",
															"src": "15147:117:0"
														}
													]
												},
												"id": 766,
												"nodeType": "IfStatement",
												"src": "14940:336:0",
												"trueBody": {
													"id": 740,
													"nodeType": "Block",
													"src": "14988:140:0",
													"statements": [
														{
															"expression": {
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 716,
																	"name": "phase2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "15003:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 728,
																							"name": "routerAddress",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 632,
																							"src": "15072:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_Router_$524",
																								"typeString": "contract Router"
																							}
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [],
																									"expression": {
																										"argumentTypes": [],
																										"expression": {
																											"id": 731,
																											"name": "lpAddress",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 629,
																											"src": "15094:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_LP_$512",
																												"typeString": "contract LP"
																											}
																										},
																										"id": 732,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token1",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 511,
																										"src": "15094:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$494_$",
																											"typeString": "function () view external returns (contract IERC20)"
																										}
																									},
																									"id": 733,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "15094:18:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IERC20_$494",
																										"typeString": "contract IERC20"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_IERC20_$494",
																										"typeString": "contract IERC20"
																									}
																								],
																								"id": 730,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "15086:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 729,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "15086:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 734,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "15086:27:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_Router_$524",
																								"typeString": "contract Router"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 727,
																						"name": "price",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 584,
																						"src": "15066:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_contract$_Router_$524_$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (contract Router,address) view returns (uint256)"
																						}
																					},
																					"id": 735,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15066:48:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"id": 723,
																									"name": "lpAddress",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 629,
																									"src": "15050:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_LP_$512",
																										"typeString": "contract LP"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_LP_$512",
																										"typeString": "contract LP"
																									}
																								],
																								"id": 722,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "15042:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 721,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "15042:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 724,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "15042:18:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"expression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"expression": {
																									"id": 717,
																									"name": "lpAddress",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 629,
																									"src": "15013:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_LP_$512",
																										"typeString": "contract LP"
																									}
																								},
																								"id": 718,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "token1",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 511,
																								"src": "15013:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$494_$",
																									"typeString": "function () view external returns (contract IERC20)"
																								}
																							},
																							"id": 719,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "15013:18:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$494",
																								"typeString": "contract IERC20"
																							}
																						},
																						"id": 720,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balanceOf",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 493,
																						"src": "15013:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (address) view external returns (uint256)"
																						}
																					},
																					"id": 725,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15013:48:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 399,
																				"src": "15013:52:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15013:102:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 737,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "15012:104:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15003:113:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 739,
															"nodeType": "ExpressionStatement",
															"src": "15003:113:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 773,
																			"name": "lpAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "15329:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LP_$512",
																				"typeString": "contract LP"
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 499,
																		"src": "15329:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15329:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"components": [
																		{
																			"arguments": [
																				{
																					"id": 769,
																					"name": "phase2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "15316:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 767,
																					"name": "phase1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "15305:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 768,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 319,
																				"src": "15305:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15305:18:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 771,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "15304:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 416,
																"src": "15304:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15304:49:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 777,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "15303:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 636,
												"id": 778,
												"nodeType": "Return",
												"src": "15296:58:0"
											}
										]
									},
									"functionSelector": "344e49d9",
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CalcLpPrice",
									"nameLocation": "14453:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "14468:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "14465:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_LP_$512",
													"typeString": "contract LP"
												},
												"typeName": {
													"id": 628,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 627,
														"name": "LP",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 512,
														"src": "14465:2:0"
													},
													"referencedDeclaration": 512,
													"src": "14465:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LP_$512",
														"typeString": "contract LP"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "14486:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "14479:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$524",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 630,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 524,
														"src": "14479:6:0"
													},
													"referencedDeclaration": 524,
													"src": "14479:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$524",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14464:36:0"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "14523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14522:9:0"
									},
									"scope": 781,
									"src": "14444:918:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 782,
							"src": "13649:1716:0",
							"usedErrors": []
						}
					],
					"src": "33:15332:0"
				},
				"id": 0
			}
		}
	}
}
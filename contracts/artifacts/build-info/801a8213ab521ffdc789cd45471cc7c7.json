{
	"id": "801a8213ab521ffdc789cd45471cc7c7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LpPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface Router {\r\n    function getAmountsOut(uint amountIn, address[2] memory path) external\r\n        view\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract LpUtils {\r\n    address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\r\n    address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7;\r\n    uint256 amount = 1000000000000000000;\r\n\r\n    function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r\n        uint256 totalSupply = lpAddress.totalSupply();\r\n\r\n        uint256[] memory price0 = routerAddress.getAmountsOut(amount,[lpAddress.token0(), busd]);\r\n\r\n        return totalSupply;\r\n    }\r\n\r\n    function totalSupply(IERC20 lpAddress) external view returns(uint256){\r\n        \r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LpPrice.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":412:8686  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":412:8686  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cdc99e06a7f24d24694e89a382e31ec4ec497a9cd9b2a64f19edcb2b7421552264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cdc99e06a7f24d24694e89a382e31ec4ec497a9cd9b2a64f19edcb2b7421552264736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xC9 SWAP15 MOD 0xA7 CALLCODE 0x4D 0x24 PUSH10 0x4E89A382E31EC4EC497A SWAP13 0xD9 0xB2 0xA6 0x4F NOT 0xED 0xCB 0x2B PUSH21 0x21552264736F6C6343000807003300000000000000 ",
							"sourceMap": "412:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cdc99e06a7f24d24694e89a382e31ec4ec497a9cd9b2a64f19edcb2b7421552264736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xC9 SWAP15 MOD 0xA7 CALLCODE 0x4D 0x24 PUSH10 0x4E89A382E31EC4EC497A SWAP13 0xD9 0xB2 0xA6 0x4F NOT 0xED 0xCB 0x2B PUSH21 0x21552264736F6C6343000807003300000000000000 ",
							"sourceMap": "412:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cdc99e06a7f24d24694e89a382e31ec4ec497a9cd9b2a64f19edcb2b7421552264736f6c63430008070033",
									".code": [
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x8dcc45f3e81c2838b0004fb5a62491d9b1cae96a8175fa29a75e8aac14c4c53e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b7caf0810f0bc2aa5e8ae1abdc08b39703f838b364278bd6cd215476c62c815\",\"dweb:/ipfs/QmRb8vefByMagpRFK2bvusSrSSSRdjAQso4x7KKrHaGw5d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x8dcc45f3e81c2838b0004fb5a62491d9b1cae96a8175fa29a75e8aac14c4c53e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b7caf0810f0bc2aa5e8ae1abdc08b39703f838b364278bd6cd215476c62c815\",\"dweb:/ipfs/QmRb8vefByMagpRFK2bvusSrSSSRdjAQso4x7KKrHaGw5d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LpUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "BUSD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								},
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "busd",
									"type": "address"
								}
							],
							"name": "CalcLpPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WBNB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":8847:9457  contract LpUtils {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LpPrice.sol\":8893:8935  0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0xae13d989dac2f0debff460ac112a837c89baa7cd\n    /* \"contracts/LpPrice.sol\":8871:8935  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":8964:9006  0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x78867bbeef44f2326bf8ddd1941a4439382ef2a7\n    /* \"contracts/LpPrice.sol\":8942:9006  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":9030:9049  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/LpPrice.sol\":9013:9049  uint256 amount = 1000000000000000000 */\n  0x02\n  sstore\n    /* \"contracts/LpPrice.sol\":8847:9457  contract LpUtils {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":8847:9457  contract LpUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x20ae0b6d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x484f4ea9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8dd95002\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe4dc2aa4\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LpPrice.sol\":9058:9359  function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8942:9006  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8871:8935  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9367:9454  function totalSupply(IERC20 lpAddress) external view returns(uint256){\r... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9058:9359  function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r... */\n    tag_10:\n        /* \"contracts/LpPrice.sol\":9155:9162  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9174:9193  uint256 totalSupply */\n      dup1\n        /* \"contracts/LpPrice.sol\":9196:9205  lpAddress */\n      dup5\n        /* \"contracts/LpPrice.sol\":9196:9217  lpAddress.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/LpPrice.sol\":9196:9219  lpAddress.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"contracts/LpPrice.sol\":9174:9219  uint256 totalSupply = lpAddress.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9232:9255  uint256[] memory price0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9258:9271  routerAddress */\n      dup5\n        /* \"contracts/LpPrice.sol\":9258:9285  routerAddress.getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbd5f68b0\n        /* \"contracts/LpPrice.sol\":9286:9292  amount */\n      sload(0x02)\n        /* \"contracts/LpPrice.sol\":9258:9320  routerAddress.getAmountsOut(amount,[lpAddress.token0(), busd]) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/LpPrice.sol\":9294:9303  lpAddress */\n      dup11\n        /* \"contracts/LpPrice.sol\":9294:9310  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":9294:9312  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_33:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"contracts/LpPrice.sol\":9258:9320  routerAddress.getAmountsOut(amount,[lpAddress.token0(), busd]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LpPrice.sol\":9314:9318  busd */\n      dup9\n        /* \"contracts/LpPrice.sol\":9258:9320  routerAddress.getAmountsOut(amount,[lpAddress.token0(), busd]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"contracts/LpPrice.sol\":9232:9320  uint256[] memory price0 = routerAddress.getAmountsOut(amount,[lpAddress.token0(), busd]) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9340:9351  totalSupply */\n      dup2\n        /* \"contracts/LpPrice.sol\":9333:9351  return totalSupply */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9058:9359  function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8942:9006  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_14:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8871:8935  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_18:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9367:9454  function totalSupply(IERC20 lpAddress) external view returns(uint256){\r... */\n    tag_23:\n        /* \"contracts/LpPrice.sol\":9428:9435  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9367:9454  function totalSupply(IERC20 lpAddress) external view returns(uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:768   */\n    tag_45:\n        /* \"#utility.yul\":131:136   */\n      0x00\n        /* \"#utility.yul\":156:237   */\n      tag_47\n        /* \"#utility.yul\":172:236   */\n      tag_48\n        /* \"#utility.yul\":229:235   */\n      dup5\n        /* \"#utility.yul\":172:236   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":156:237   */\n      tag_50\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":147:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":257:262   */\n      dup1\n        /* \"#utility.yul\":286:292   */\n      dup4\n        /* \"#utility.yul\":279:284   */\n      dup3\n        /* \"#utility.yul\":272:293   */\n      mstore\n        /* \"#utility.yul\":320:324   */\n      0x20\n        /* \"#utility.yul\":313:318   */\n      dup3\n        /* \"#utility.yul\":309:325   */\n      add\n        /* \"#utility.yul\":302:325   */\n      swap1\n      pop\n        /* \"#utility.yul\":346:352   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":388:392   */\n      0x20\n        /* \"#utility.yul\":380:386   */\n      dup7\n        /* \"#utility.yul\":376:393   */\n      mul\n        /* \"#utility.yul\":371:374   */\n      dup3\n        /* \"#utility.yul\":367:394   */\n      add\n        /* \"#utility.yul\":364:400   */\n      gt\n        /* \"#utility.yul\":361:504   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":361:504   */\n    tag_51:\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":513:762   */\n    tag_54:\n        /* \"#utility.yul\":538:544   */\n      dup6\n        /* \"#utility.yul\":535:536   */\n      dup2\n        /* \"#utility.yul\":532:545   */\n      lt\n        /* \"#utility.yul\":513:762   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":606:609   */\n      dup2\n        /* \"#utility.yul\":635:683   */\n      tag_57\n        /* \"#utility.yul\":679:682   */\n      dup9\n        /* \"#utility.yul\":667:677   */\n      dup3\n        /* \"#utility.yul\":635:683   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":630:633   */\n      dup5\n        /* \"#utility.yul\":623:684   */\n      mstore\n        /* \"#utility.yul\":713:717   */\n      0x20\n        /* \"#utility.yul\":708:711   */\n      dup5\n        /* \"#utility.yul\":704:718   */\n      add\n        /* \"#utility.yul\":697:718   */\n      swap4\n      pop\n        /* \"#utility.yul\":747:751   */\n      0x20\n        /* \"#utility.yul\":742:745   */\n      dup4\n        /* \"#utility.yul\":738:752   */\n      add\n        /* \"#utility.yul\":731:752   */\n      swap3\n      pop\n        /* \"#utility.yul\":573:762   */\n      pop\n        /* \"#utility.yul\":560:561   */\n      0x01\n        /* \"#utility.yul\":557:558   */\n      dup2\n        /* \"#utility.yul\":553:562   */\n      add\n        /* \"#utility.yul\":548:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":513:762   */\n      jump(tag_54)\n    tag_56:\n        /* \"#utility.yul\":517:531   */\n      pop\n        /* \"#utility.yul\":137:768   */\n      pop\n      pop\n        /* \"#utility.yul\":24:768   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:913   */\n    tag_59:\n        /* \"#utility.yul\":820:825   */\n      0x00\n        /* \"#utility.yul\":858:864   */\n      dup2\n        /* \"#utility.yul\":845:865   */\n      calldataload\n        /* \"#utility.yul\":836:865   */\n      swap1\n      pop\n        /* \"#utility.yul\":874:907   */\n      tag_61\n        /* \"#utility.yul\":901:906   */\n      dup2\n        /* \"#utility.yul\":874:907   */\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":774:913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":919:1062   */\n    tag_63:\n        /* \"#utility.yul\":976:981   */\n      0x00\n        /* \"#utility.yul\":1007:1013   */\n      dup2\n        /* \"#utility.yul\":1001:1014   */\n      mload\n        /* \"#utility.yul\":992:1014   */\n      swap1\n      pop\n        /* \"#utility.yul\":1023:1056   */\n      tag_65\n        /* \"#utility.yul\":1050:1055   */\n      dup2\n        /* \"#utility.yul\":1023:1056   */\n      tag_62\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":919:1062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1085:1470   */\n    tag_66:\n        /* \"#utility.yul\":1167:1172   */\n      0x00\n        /* \"#utility.yul\":1216:1219   */\n      dup3\n        /* \"#utility.yul\":1209:1213   */\n      0x1f\n        /* \"#utility.yul\":1201:1207   */\n      dup4\n        /* \"#utility.yul\":1197:1214   */\n      add\n        /* \"#utility.yul\":1193:1220   */\n      slt\n        /* \"#utility.yul\":1183:1305   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1224:1303   */\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1183:1305   */\n    tag_68:\n        /* \"#utility.yul\":1334:1340   */\n      dup2\n        /* \"#utility.yul\":1328:1341   */\n      mload\n        /* \"#utility.yul\":1359:1464   */\n      tag_71\n        /* \"#utility.yul\":1460:1463   */\n      dup5\n        /* \"#utility.yul\":1452:1458   */\n      dup3\n        /* \"#utility.yul\":1445:1449   */\n      0x20\n        /* \"#utility.yul\":1437:1443   */\n      dup7\n        /* \"#utility.yul\":1433:1450   */\n      add\n        /* \"#utility.yul\":1359:1464   */\n      tag_45\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1350:1464   */\n      swap2\n      pop\n        /* \"#utility.yul\":1173:1470   */\n      pop\n        /* \"#utility.yul\":1085:1470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1476:1641   */\n    tag_72:\n        /* \"#utility.yul\":1535:1540   */\n      0x00\n        /* \"#utility.yul\":1573:1579   */\n      dup2\n        /* \"#utility.yul\":1560:1580   */\n      calldataload\n        /* \"#utility.yul\":1551:1580   */\n      swap1\n      pop\n        /* \"#utility.yul\":1589:1635   */\n      tag_74\n        /* \"#utility.yul\":1629:1634   */\n      dup2\n        /* \"#utility.yul\":1589:1635   */\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1476:1641   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1647:1814   */\n    tag_76:\n        /* \"#utility.yul\":1707:1712   */\n      0x00\n        /* \"#utility.yul\":1745:1751   */\n      dup2\n        /* \"#utility.yul\":1732:1752   */\n      calldataload\n        /* \"#utility.yul\":1723:1752   */\n      swap1\n      pop\n        /* \"#utility.yul\":1761:1808   */\n      tag_78\n        /* \"#utility.yul\":1802:1807   */\n      dup2\n        /* \"#utility.yul\":1761:1808   */\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1647:1814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1820:1963   */\n    tag_58:\n        /* \"#utility.yul\":1877:1882   */\n      0x00\n        /* \"#utility.yul\":1908:1914   */\n      dup2\n        /* \"#utility.yul\":1902:1915   */\n      mload\n        /* \"#utility.yul\":1893:1915   */\n      swap1\n      pop\n        /* \"#utility.yul\":1924:1957   */\n      tag_81\n        /* \"#utility.yul\":1951:1956   */\n      dup2\n        /* \"#utility.yul\":1924:1957   */\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1820:1963   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1969:2320   */\n    tag_35:\n        /* \"#utility.yul\":2039:2045   */\n      0x00\n        /* \"#utility.yul\":2088:2090   */\n      0x20\n        /* \"#utility.yul\":2076:2085   */\n      dup3\n        /* \"#utility.yul\":2067:2074   */\n      dup5\n        /* \"#utility.yul\":2063:2086   */\n      sub\n        /* \"#utility.yul\":2059:2091   */\n      slt\n        /* \"#utility.yul\":2056:2175   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":2094:2173   */\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2056:2175   */\n    tag_84:\n        /* \"#utility.yul\":2214:2215   */\n      0x00\n        /* \"#utility.yul\":2239:2303   */\n      tag_87\n        /* \"#utility.yul\":2295:2302   */\n      dup5\n        /* \"#utility.yul\":2286:2292   */\n      dup3\n        /* \"#utility.yul\":2275:2284   */\n      dup6\n        /* \"#utility.yul\":2271:2293   */\n      add\n        /* \"#utility.yul\":2239:2303   */\n      tag_63\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2229:2303   */\n      swap2\n      pop\n        /* \"#utility.yul\":2185:2313   */\n      pop\n        /* \"#utility.yul\":1969:2320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2326:2880   */\n    tag_42:\n        /* \"#utility.yul\":2421:2427   */\n      0x00\n        /* \"#utility.yul\":2470:2472   */\n      0x20\n        /* \"#utility.yul\":2458:2467   */\n      dup3\n        /* \"#utility.yul\":2449:2456   */\n      dup5\n        /* \"#utility.yul\":2445:2468   */\n      sub\n        /* \"#utility.yul\":2441:2473   */\n      slt\n        /* \"#utility.yul\":2438:2557   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":2476:2555   */\n      tag_90\n      tag_86\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2438:2557   */\n    tag_89:\n        /* \"#utility.yul\":2617:2618   */\n      0x00\n        /* \"#utility.yul\":2606:2615   */\n      dup3\n        /* \"#utility.yul\":2602:2619   */\n      add\n        /* \"#utility.yul\":2596:2620   */\n      mload\n        /* \"#utility.yul\":2647:2665   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2639:2645   */\n      dup2\n        /* \"#utility.yul\":2636:2666   */\n      gt\n        /* \"#utility.yul\":2633:2750   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":2669:2748   */\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2633:2750   */\n    tag_91:\n        /* \"#utility.yul\":2774:2863   */\n      tag_94\n        /* \"#utility.yul\":2855:2862   */\n      dup5\n        /* \"#utility.yul\":2846:2852   */\n      dup3\n        /* \"#utility.yul\":2835:2844   */\n      dup6\n        /* \"#utility.yul\":2831:2853   */\n      add\n        /* \"#utility.yul\":2774:2863   */\n      tag_66\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2764:2863   */\n      swap2\n      pop\n        /* \"#utility.yul\":2567:2873   */\n      pop\n        /* \"#utility.yul\":2326:2880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2886:3241   */\n    tag_22:\n        /* \"#utility.yul\":2958:2964   */\n      0x00\n        /* \"#utility.yul\":3007:3009   */\n      0x20\n        /* \"#utility.yul\":2995:3004   */\n      dup3\n        /* \"#utility.yul\":2986:2993   */\n      dup5\n        /* \"#utility.yul\":2982:3005   */\n      sub\n        /* \"#utility.yul\":2978:3010   */\n      slt\n        /* \"#utility.yul\":2975:3094   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":3013:3092   */\n      tag_97\n      tag_86\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2975:3094   */\n    tag_96:\n        /* \"#utility.yul\":3133:3134   */\n      0x00\n        /* \"#utility.yul\":3158:3224   */\n      tag_98\n        /* \"#utility.yul\":3216:3223   */\n      dup5\n        /* \"#utility.yul\":3207:3213   */\n      dup3\n        /* \"#utility.yul\":3196:3205   */\n      dup6\n        /* \"#utility.yul\":3192:3214   */\n      add\n        /* \"#utility.yul\":3158:3224   */\n      tag_72\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":3148:3224   */\n      swap2\n      pop\n        /* \"#utility.yul\":3104:3234   */\n      pop\n        /* \"#utility.yul\":2886:3241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3247:3920   */\n    tag_9:\n        /* \"#utility.yul\":3351:3357   */\n      0x00\n        /* \"#utility.yul\":3359:3365   */\n      dup1\n        /* \"#utility.yul\":3367:3373   */\n      0x00\n        /* \"#utility.yul\":3416:3418   */\n      0x60\n        /* \"#utility.yul\":3404:3413   */\n      dup5\n        /* \"#utility.yul\":3395:3402   */\n      dup7\n        /* \"#utility.yul\":3391:3414   */\n      sub\n        /* \"#utility.yul\":3387:3419   */\n      slt\n        /* \"#utility.yul\":3384:3503   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":3422:3501   */\n      tag_101\n      tag_86\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3384:3503   */\n    tag_100:\n        /* \"#utility.yul\":3542:3543   */\n      0x00\n        /* \"#utility.yul\":3567:3633   */\n      tag_102\n        /* \"#utility.yul\":3625:3632   */\n      dup7\n        /* \"#utility.yul\":3616:3622   */\n      dup3\n        /* \"#utility.yul\":3605:3614   */\n      dup8\n        /* \"#utility.yul\":3601:3623   */\n      add\n        /* \"#utility.yul\":3567:3633   */\n      tag_72\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3557:3633   */\n      swap4\n      pop\n        /* \"#utility.yul\":3513:3643   */\n      pop\n        /* \"#utility.yul\":3682:3684   */\n      0x20\n        /* \"#utility.yul\":3708:3775   */\n      tag_103\n        /* \"#utility.yul\":3767:3774   */\n      dup7\n        /* \"#utility.yul\":3758:3764   */\n      dup3\n        /* \"#utility.yul\":3747:3756   */\n      dup8\n        /* \"#utility.yul\":3743:3765   */\n      add\n        /* \"#utility.yul\":3708:3775   */\n      tag_76\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3698:3775   */\n      swap3\n      pop\n        /* \"#utility.yul\":3653:3785   */\n      pop\n        /* \"#utility.yul\":3824:3826   */\n      0x40\n        /* \"#utility.yul\":3850:3903   */\n      tag_104\n        /* \"#utility.yul\":3895:3902   */\n      dup7\n        /* \"#utility.yul\":3886:3892   */\n      dup3\n        /* \"#utility.yul\":3875:3884   */\n      dup8\n        /* \"#utility.yul\":3871:3893   */\n      add\n        /* \"#utility.yul\":3850:3903   */\n      tag_59\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":3840:3903   */\n      swap2\n      pop\n        /* \"#utility.yul\":3795:3913   */\n      pop\n        /* \"#utility.yul\":3247:3920   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3926:4277   */\n    tag_30:\n        /* \"#utility.yul\":3996:4002   */\n      0x00\n        /* \"#utility.yul\":4045:4047   */\n      0x20\n        /* \"#utility.yul\":4033:4042   */\n      dup3\n        /* \"#utility.yul\":4024:4031   */\n      dup5\n        /* \"#utility.yul\":4020:4043   */\n      sub\n        /* \"#utility.yul\":4016:4048   */\n      slt\n        /* \"#utility.yul\":4013:4132   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":4051:4130   */\n      tag_107\n      tag_86\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":4013:4132   */\n    tag_106:\n        /* \"#utility.yul\":4171:4172   */\n      0x00\n        /* \"#utility.yul\":4196:4260   */\n      tag_108\n        /* \"#utility.yul\":4252:4259   */\n      dup5\n        /* \"#utility.yul\":4243:4249   */\n      dup3\n        /* \"#utility.yul\":4232:4241   */\n      dup6\n        /* \"#utility.yul\":4228:4250   */\n      add\n        /* \"#utility.yul\":4196:4260   */\n      tag_58\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":4186:4260   */\n      swap2\n      pop\n        /* \"#utility.yul\":4142:4270   */\n      pop\n        /* \"#utility.yul\":3926:4277   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4283:4462   */\n    tag_109:\n        /* \"#utility.yul\":4352:4362   */\n      0x00\n        /* \"#utility.yul\":4373:4419   */\n      tag_111\n        /* \"#utility.yul\":4415:4418   */\n      dup4\n        /* \"#utility.yul\":4407:4413   */\n      dup4\n        /* \"#utility.yul\":4373:4419   */\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":4451:4455   */\n      0x20\n        /* \"#utility.yul\":4446:4449   */\n      dup4\n        /* \"#utility.yul\":4442:4456   */\n      add\n        /* \"#utility.yul\":4428:4456   */\n      swap1\n      pop\n        /* \"#utility.yul\":4283:4462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4468:4576   */\n    tag_112:\n        /* \"#utility.yul\":4545:4569   */\n      tag_114\n        /* \"#utility.yul\":4563:4568   */\n      dup2\n        /* \"#utility.yul\":4545:4569   */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":4540:4543   */\n      dup3\n        /* \"#utility.yul\":4533:4570   */\n      mstore\n        /* \"#utility.yul\":4468:4576   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4582:4700   */\n    tag_116:\n        /* \"#utility.yul\":4669:4693   */\n      tag_118\n        /* \"#utility.yul\":4687:4692   */\n      dup2\n        /* \"#utility.yul\":4669:4693   */\n      tag_115\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4664:4667   */\n      dup3\n        /* \"#utility.yul\":4657:4694   */\n      mstore\n        /* \"#utility.yul\":4582:4700   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4738:5432   */\n    tag_119:\n        /* \"#utility.yul\":4874:4926   */\n      tag_121\n        /* \"#utility.yul\":4920:4925   */\n      dup2\n        /* \"#utility.yul\":4874:4926   */\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4942:5026   */\n      tag_123\n        /* \"#utility.yul\":5019:5025   */\n      dup2\n        /* \"#utility.yul\":5014:5017   */\n      dup5\n        /* \"#utility.yul\":4942:5026   */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4935:5026   */\n      swap3\n      pop\n        /* \"#utility.yul\":5050:5104   */\n      tag_125\n        /* \"#utility.yul\":5098:5103   */\n      dup3\n        /* \"#utility.yul\":5050:5104   */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":5127:5134   */\n      dup1\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5143:5425   */\n    tag_127:\n        /* \"#utility.yul\":5168:5174   */\n      dup4\n        /* \"#utility.yul\":5165:5166   */\n      dup2\n        /* \"#utility.yul\":5162:5175   */\n      lt\n        /* \"#utility.yul\":5143:5425   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":5244:5250   */\n      dup2\n        /* \"#utility.yul\":5238:5251   */\n      mload\n        /* \"#utility.yul\":5271:5334   */\n      tag_130\n        /* \"#utility.yul\":5330:5333   */\n      dup8\n        /* \"#utility.yul\":5315:5328   */\n      dup3\n        /* \"#utility.yul\":5271:5334   */\n      tag_109\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5264:5334   */\n      swap7\n      pop\n        /* \"#utility.yul\":5357:5415   */\n      tag_131\n        /* \"#utility.yul\":5408:5414   */\n      dup4\n        /* \"#utility.yul\":5357:5415   */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5347:5415   */\n      swap3\n      pop\n        /* \"#utility.yul\":5203:5425   */\n      pop\n        /* \"#utility.yul\":5190:5191   */\n      0x01\n        /* \"#utility.yul\":5187:5188   */\n      dup2\n        /* \"#utility.yul\":5183:5192   */\n      add\n        /* \"#utility.yul\":5178:5192   */\n      swap1\n      pop\n        /* \"#utility.yul\":5143:5425   */\n      jump(tag_127)\n    tag_129:\n        /* \"#utility.yul\":5147:5161   */\n      pop\n        /* \"#utility.yul\":4850:5432   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4738:5432   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5438:5556   */\n    tag_133:\n        /* \"#utility.yul\":5525:5549   */\n      tag_135\n        /* \"#utility.yul\":5543:5548   */\n      dup2\n        /* \"#utility.yul\":5525:5549   */\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":5520:5523   */\n      dup3\n        /* \"#utility.yul\":5513:5550   */\n      mstore\n        /* \"#utility.yul\":5438:5556   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5562:5784   */\n    tag_16:\n        /* \"#utility.yul\":5655:5659   */\n      0x00\n        /* \"#utility.yul\":5693:5695   */\n      0x20\n        /* \"#utility.yul\":5682:5691   */\n      dup3\n        /* \"#utility.yul\":5678:5696   */\n      add\n        /* \"#utility.yul\":5670:5696   */\n      swap1\n      pop\n        /* \"#utility.yul\":5706:5777   */\n      tag_138\n        /* \"#utility.yul\":5774:5775   */\n      0x00\n        /* \"#utility.yul\":5763:5772   */\n      dup4\n        /* \"#utility.yul\":5759:5776   */\n      add\n        /* \"#utility.yul\":5750:5756   */\n      dup5\n        /* \"#utility.yul\":5706:5777   */\n      tag_116\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":5562:5784   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5790:6012   */\n    tag_12:\n        /* \"#utility.yul\":5883:5887   */\n      0x00\n        /* \"#utility.yul\":5921:5923   */\n      0x20\n        /* \"#utility.yul\":5910:5919   */\n      dup3\n        /* \"#utility.yul\":5906:5924   */\n      add\n        /* \"#utility.yul\":5898:5924   */\n      swap1\n      pop\n        /* \"#utility.yul\":5934:6005   */\n      tag_140\n        /* \"#utility.yul\":6002:6003   */\n      0x00\n        /* \"#utility.yul\":5991:6000   */\n      dup4\n        /* \"#utility.yul\":5987:6004   */\n      add\n        /* \"#utility.yul\":5978:5984   */\n      dup5\n        /* \"#utility.yul\":5934:6005   */\n      tag_133\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":5790:6012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6018:6442   */\n    tag_37:\n        /* \"#utility.yul\":6185:6189   */\n      0x00\n        /* \"#utility.yul\":6223:6225   */\n      0x60\n        /* \"#utility.yul\":6212:6221   */\n      dup3\n        /* \"#utility.yul\":6208:6226   */\n      add\n        /* \"#utility.yul\":6200:6226   */\n      swap1\n      pop\n        /* \"#utility.yul\":6236:6307   */\n      tag_142\n        /* \"#utility.yul\":6304:6305   */\n      0x00\n        /* \"#utility.yul\":6293:6302   */\n      dup4\n        /* \"#utility.yul\":6289:6306   */\n      add\n        /* \"#utility.yul\":6280:6286   */\n      dup6\n        /* \"#utility.yul\":6236:6307   */\n      tag_133\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":6317:6435   */\n      tag_143\n        /* \"#utility.yul\":6431:6433   */\n      0x20\n        /* \"#utility.yul\":6420:6429   */\n      dup4\n        /* \"#utility.yul\":6416:6434   */\n      add\n        /* \"#utility.yul\":6407:6413   */\n      dup5\n        /* \"#utility.yul\":6317:6435   */\n      tag_119\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":6018:6442   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6448:6577   */\n    tag_50:\n        /* \"#utility.yul\":6482:6488   */\n      0x00\n        /* \"#utility.yul\":6509:6529   */\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":6499:6529   */\n      swap1\n      pop\n        /* \"#utility.yul\":6538:6571   */\n      tag_147\n        /* \"#utility.yul\":6566:6570   */\n      dup3\n        /* \"#utility.yul\":6558:6564   */\n      dup3\n        /* \"#utility.yul\":6538:6571   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":6448:6577   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6583:6658   */\n    tag_146:\n        /* \"#utility.yul\":6616:6622   */\n      0x00\n        /* \"#utility.yul\":6649:6651   */\n      0x40\n        /* \"#utility.yul\":6643:6652   */\n      mload\n        /* \"#utility.yul\":6633:6652   */\n      swap1\n      pop\n        /* \"#utility.yul\":6583:6658   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":6664:6975   */\n    tag_49:\n        /* \"#utility.yul\":6741:6745   */\n      0x00\n        /* \"#utility.yul\":6831:6849   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6823:6829   */\n      dup3\n        /* \"#utility.yul\":6820:6850   */\n      gt\n        /* \"#utility.yul\":6817:6873   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":6853:6871   */\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":6817:6873   */\n    tag_151:\n        /* \"#utility.yul\":6903:6907   */\n      0x20\n        /* \"#utility.yul\":6895:6901   */\n      dup3\n        /* \"#utility.yul\":6891:6908   */\n      mul\n        /* \"#utility.yul\":6883:6908   */\n      swap1\n      pop\n        /* \"#utility.yul\":6963:6967   */\n      0x20\n        /* \"#utility.yul\":6957:6961   */\n      dup2\n        /* \"#utility.yul\":6953:6968   */\n      add\n        /* \"#utility.yul\":6945:6968   */\n      swap1\n      pop\n        /* \"#utility.yul\":6664:6975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6981:7079   */\n    tag_126:\n        /* \"#utility.yul\":7046:7050   */\n      0x00\n        /* \"#utility.yul\":7069:7072   */\n      dup2\n        /* \"#utility.yul\":7061:7072   */\n      swap1\n      pop\n        /* \"#utility.yul\":6981:7079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7085:7189   */\n    tag_122:\n        /* \"#utility.yul\":7150:7156   */\n      0x00\n        /* \"#utility.yul\":7178:7182   */\n      0x02\n        /* \"#utility.yul\":7168:7182   */\n      swap1\n      pop\n        /* \"#utility.yul\":7085:7189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7195:7306   */\n    tag_132:\n        /* \"#utility.yul\":7263:7267   */\n      0x00\n        /* \"#utility.yul\":7295:7299   */\n      0x20\n        /* \"#utility.yul\":7290:7293   */\n      dup3\n        /* \"#utility.yul\":7286:7300   */\n      add\n        /* \"#utility.yul\":7278:7300   */\n      swap1\n      pop\n        /* \"#utility.yul\":7195:7306   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7312:7455   */\n    tag_124:\n        /* \"#utility.yul\":7409:7420   */\n      0x00\n        /* \"#utility.yul\":7446:7449   */\n      dup2\n        /* \"#utility.yul\":7431:7449   */\n      swap1\n      pop\n        /* \"#utility.yul\":7312:7455   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7461:7557   */\n    tag_115:\n        /* \"#utility.yul\":7498:7505   */\n      0x00\n        /* \"#utility.yul\":7527:7551   */\n      tag_159\n        /* \"#utility.yul\":7545:7550   */\n      dup3\n        /* \"#utility.yul\":7527:7551   */\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":7516:7551   */\n      swap1\n      pop\n        /* \"#utility.yul\":7461:7557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7563:7672   */\n    tag_161:\n        /* \"#utility.yul\":7613:7620   */\n      0x00\n        /* \"#utility.yul\":7642:7666   */\n      tag_163\n        /* \"#utility.yul\":7660:7665   */\n      dup3\n        /* \"#utility.yul\":7642:7666   */\n      tag_115\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":7631:7666   */\n      swap1\n      pop\n        /* \"#utility.yul\":7563:7672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7678:7788   */\n    tag_164:\n        /* \"#utility.yul\":7729:7736   */\n      0x00\n        /* \"#utility.yul\":7758:7782   */\n      tag_166\n        /* \"#utility.yul\":7776:7781   */\n      dup3\n        /* \"#utility.yul\":7758:7782   */\n      tag_115\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":7747:7782   */\n      swap1\n      pop\n        /* \"#utility.yul\":7678:7788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7794:7920   */\n    tag_160:\n        /* \"#utility.yul\":7831:7838   */\n      0x00\n        /* \"#utility.yul\":7871:7913   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7864:7869   */\n      dup3\n        /* \"#utility.yul\":7860:7914   */\n      and\n        /* \"#utility.yul\":7849:7914   */\n      swap1\n      pop\n        /* \"#utility.yul\":7794:7920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7926:8003   */\n    tag_136:\n        /* \"#utility.yul\":7963:7970   */\n      0x00\n        /* \"#utility.yul\":7992:7997   */\n      dup2\n        /* \"#utility.yul\":7981:7997   */\n      swap1\n      pop\n        /* \"#utility.yul\":7926:8003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8009:8290   */\n    tag_148:\n        /* \"#utility.yul\":8092:8119   */\n      tag_170\n        /* \"#utility.yul\":8114:8118   */\n      dup3\n        /* \"#utility.yul\":8092:8119   */\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":8084:8090   */\n      dup2\n        /* \"#utility.yul\":8080:8120   */\n      add\n        /* \"#utility.yul\":8222:8228   */\n      dup2\n        /* \"#utility.yul\":8210:8220   */\n      dup2\n        /* \"#utility.yul\":8207:8229   */\n      lt\n        /* \"#utility.yul\":8186:8204   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8174:8184   */\n      dup3\n        /* \"#utility.yul\":8171:8205   */\n      gt\n        /* \"#utility.yul\":8168:8230   */\n      or\n        /* \"#utility.yul\":8165:8253   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":8233:8251   */\n      tag_173\n      tag_153\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":8165:8253   */\n    tag_172:\n        /* \"#utility.yul\":8273:8283   */\n      dup1\n        /* \"#utility.yul\":8269:8271   */\n      0x40\n        /* \"#utility.yul\":8262:8284   */\n      mstore\n        /* \"#utility.yul\":8052:8290   */\n      pop\n        /* \"#utility.yul\":8009:8290   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8296:8476   */\n    tag_153:\n        /* \"#utility.yul\":8344:8421   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8341:8342   */\n      0x00\n        /* \"#utility.yul\":8334:8422   */\n      mstore\n        /* \"#utility.yul\":8441:8445   */\n      0x41\n        /* \"#utility.yul\":8438:8439   */\n      0x04\n        /* \"#utility.yul\":8431:8446   */\n      mstore\n        /* \"#utility.yul\":8465:8469   */\n      0x24\n        /* \"#utility.yul\":8462:8463   */\n      0x00\n        /* \"#utility.yul\":8455:8470   */\n      revert\n        /* \"#utility.yul\":8482:8599   */\n    tag_70:\n        /* \"#utility.yul\":8591:8592   */\n      0x00\n        /* \"#utility.yul\":8588:8589   */\n      dup1\n        /* \"#utility.yul\":8581:8593   */\n      revert\n        /* \"#utility.yul\":8605:8722   */\n    tag_53:\n        /* \"#utility.yul\":8714:8715   */\n      0x00\n        /* \"#utility.yul\":8711:8712   */\n      dup1\n        /* \"#utility.yul\":8704:8716   */\n      revert\n        /* \"#utility.yul\":8728:8845   */\n    tag_93:\n        /* \"#utility.yul\":8837:8838   */\n      0x00\n        /* \"#utility.yul\":8834:8835   */\n      dup1\n        /* \"#utility.yul\":8827:8839   */\n      revert\n        /* \"#utility.yul\":8851:8968   */\n    tag_86:\n        /* \"#utility.yul\":8960:8961   */\n      0x00\n        /* \"#utility.yul\":8957:8958   */\n      dup1\n        /* \"#utility.yul\":8950:8962   */\n      revert\n        /* \"#utility.yul\":8974:9076   */\n    tag_171:\n        /* \"#utility.yul\":9015:9021   */\n      0x00\n        /* \"#utility.yul\":9066:9068   */\n      0x1f\n        /* \"#utility.yul\":9062:9069   */\n      not\n        /* \"#utility.yul\":9057:9059   */\n      0x1f\n        /* \"#utility.yul\":9050:9055   */\n      dup4\n        /* \"#utility.yul\":9046:9060   */\n      add\n        /* \"#utility.yul\":9042:9070   */\n      and\n        /* \"#utility.yul\":9032:9070   */\n      swap1\n      pop\n        /* \"#utility.yul\":8974:9076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9082:9204   */\n    tag_62:\n        /* \"#utility.yul\":9155:9179   */\n      tag_181\n        /* \"#utility.yul\":9173:9178   */\n      dup2\n        /* \"#utility.yul\":9155:9179   */\n      tag_115\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":9148:9153   */\n      dup2\n        /* \"#utility.yul\":9145:9180   */\n      eq\n        /* \"#utility.yul\":9135:9198   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":9194:9195   */\n      0x00\n        /* \"#utility.yul\":9191:9192   */\n      dup1\n        /* \"#utility.yul\":9184:9196   */\n      revert\n        /* \"#utility.yul\":9135:9198   */\n    tag_182:\n        /* \"#utility.yul\":9082:9204   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9210:9358   */\n    tag_75:\n        /* \"#utility.yul\":9296:9333   */\n      tag_184\n        /* \"#utility.yul\":9327:9332   */\n      dup2\n        /* \"#utility.yul\":9296:9333   */\n      tag_161\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":9289:9294   */\n      dup2\n        /* \"#utility.yul\":9286:9334   */\n      eq\n        /* \"#utility.yul\":9276:9352   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":9348:9349   */\n      0x00\n        /* \"#utility.yul\":9345:9346   */\n      dup1\n        /* \"#utility.yul\":9338:9350   */\n      revert\n        /* \"#utility.yul\":9276:9352   */\n    tag_185:\n        /* \"#utility.yul\":9210:9358   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9364:9514   */\n    tag_79:\n        /* \"#utility.yul\":9451:9489   */\n      tag_187\n        /* \"#utility.yul\":9483:9488   */\n      dup2\n        /* \"#utility.yul\":9451:9489   */\n      tag_164\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":9444:9449   */\n      dup2\n        /* \"#utility.yul\":9441:9490   */\n      eq\n        /* \"#utility.yul\":9431:9508   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":9504:9505   */\n      0x00\n        /* \"#utility.yul\":9501:9502   */\n      dup1\n        /* \"#utility.yul\":9494:9506   */\n      revert\n        /* \"#utility.yul\":9431:9508   */\n    tag_188:\n        /* \"#utility.yul\":9364:9514   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9520:9642   */\n    tag_82:\n        /* \"#utility.yul\":9593:9617   */\n      tag_190\n        /* \"#utility.yul\":9611:9616   */\n      dup2\n        /* \"#utility.yul\":9593:9617   */\n      tag_136\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":9586:9591   */\n      dup2\n        /* \"#utility.yul\":9583:9618   */\n      eq\n        /* \"#utility.yul\":9573:9636   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":9632:9633   */\n      0x00\n        /* \"#utility.yul\":9629:9630   */\n      dup1\n        /* \"#utility.yul\":9622:9634   */\n      revert\n        /* \"#utility.yul\":9573:9636   */\n    tag_191:\n        /* \"#utility.yul\":9520:9642   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e77fcb00e27f170dc7eb5d171b85d4852dcb8cb9175bd80e6d95acacdc5f871264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ae13d989dac2f0debff460ac112a837c89baa7cd6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507378867bbeef44f2326bf8ddd1941a4439382ef2a7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002553480156100c557600080fd5b50610866806100d56000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806320ae0b6d14610051578063484f4ea9146100815780638dd950021461009f578063e4dc2aa4146100bd575b600080fd5b61006b600480360381019061006691906104f6565b6100ed565b604051610078919061062d565b60405180910390f35b6100896102fb565b6040516100969190610612565b60405180910390f35b6100a7610321565b6040516100b49190610612565b60405180910390f35b6100d760048036038101906100d291906104c9565b610345565b6040516100e4919061062d565b60405180910390f35b6000808473ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561013657600080fd5b505afa15801561014a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016e9190610549565b905060008473ffffffffffffffffffffffffffffffffffffffff1663bd5f68b060025460405180604001604052808a73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156101e257600080fd5b505afa1580156101f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021a9190610453565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152506040518363ffffffff1660e01b8152600401610298929190610648565b60006040518083038186803b1580156102b057600080fd5b505afa1580156102c4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102ed9190610480565b905081925050509392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000919050565b600061035f61035a84610696565b610671565b90508083825260208201905082856020860282011115610382576103816107b4565b5b60005b858110156103b25781610398888261043e565b845260208401935060208301925050600181019050610385565b5050509392505050565b6000813590506103cb816107d4565b92915050565b6000815190506103e0816107d4565b92915050565b600082601f8301126103fb576103fa6107af565b5b815161040b84826020860161034c565b91505092915050565b600081359050610423816107eb565b92915050565b60008135905061043881610802565b92915050565b60008151905061044d81610819565b92915050565b600060208284031215610469576104686107be565b5b6000610477848285016103d1565b91505092915050565b600060208284031215610496576104956107be565b5b600082015167ffffffffffffffff8111156104b4576104b36107b9565b5b6104c0848285016103e6565b91505092915050565b6000602082840312156104df576104de6107be565b5b60006104ed84828501610414565b91505092915050565b60008060006060848603121561050f5761050e6107be565b5b600061051d86828701610414565b935050602061052e86828701610429565b925050604061053f868287016103bc565b9150509250925092565b60006020828403121561055f5761055e6107be565b5b600061056d8482850161043e565b91505092915050565b6000610582838361058e565b60208301905092915050565b610597816106ef565b82525050565b6105a6816106ef565b82525050565b6105b5816106cc565b6105bf81846106e4565b92506105ca826106c2565b8060005b838110156105fb5781516105e28782610576565b96506105ed836106d7565b9250506001810190506105ce565b505050505050565b61060c81610745565b82525050565b6000602082019050610627600083018461059d565b92915050565b60006020820190506106426000830184610603565b92915050565b600060608201905061065d6000830185610603565b61066a60208301846105ac565b9392505050565b600061067b61068c565b9050610687828261074f565b919050565b6000604051905090565b600067ffffffffffffffff8211156106b1576106b0610780565b5b602082029050602081019050919050565b6000819050919050565b600060029050919050565b6000602082019050919050565b600081905092915050565b60006106fa82610725565b9050919050565b600061070c826106ef565b9050919050565b600061071e826106ef565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610758826107c3565b810181811067ffffffffffffffff8211171561077757610776610780565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6107dd816106ef565b81146107e857600080fd5b50565b6107f481610701565b81146107ff57600080fd5b50565b61080b81610713565b811461081657600080fd5b50565b61082281610745565b811461082d57600080fd5b5056fea2646970667358221220e77fcb00e27f170dc7eb5d171b85d4852dcb8cb9175bd80e6d95acacdc5f871264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAE13D989DAC2F0DEBFF460AC112A837C89BAA7CD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x78867BBEEF44F2326BF8DDD1941A4439382EF2A7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x866 DUP1 PUSH2 0xD5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20AE0B6D EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xE4DC2AA4 EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x4F6 JUMP JUMPDEST PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x549 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBD5F68B0 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x453 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP3 SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x480 JUMP JUMPDEST SWAP1 POP DUP2 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F PUSH2 0x35A DUP5 PUSH2 0x696 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x382 JUMPI PUSH2 0x381 PUSH2 0x7B4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3B2 JUMPI DUP2 PUSH2 0x398 DUP9 DUP3 PUSH2 0x43E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x385 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CB DUP2 PUSH2 0x7D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3E0 DUP2 PUSH2 0x7D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3FB JUMPI PUSH2 0x3FA PUSH2 0x7AF JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x40B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x34C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x423 DUP2 PUSH2 0x7EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x438 DUP2 PUSH2 0x802 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x44D DUP2 PUSH2 0x819 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x469 JUMPI PUSH2 0x468 PUSH2 0x7BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x477 DUP5 DUP3 DUP6 ADD PUSH2 0x3D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x496 JUMPI PUSH2 0x495 PUSH2 0x7BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B4 JUMPI PUSH2 0x4B3 PUSH2 0x7B9 JUMP JUMPDEST JUMPDEST PUSH2 0x4C0 DUP5 DUP3 DUP6 ADD PUSH2 0x3E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4DF JUMPI PUSH2 0x4DE PUSH2 0x7BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4ED DUP5 DUP3 DUP6 ADD PUSH2 0x414 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x50F JUMPI PUSH2 0x50E PUSH2 0x7BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x51D DUP7 DUP3 DUP8 ADD PUSH2 0x414 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x52E DUP7 DUP3 DUP8 ADD PUSH2 0x429 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x53F DUP7 DUP3 DUP8 ADD PUSH2 0x3BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x55F JUMPI PUSH2 0x55E PUSH2 0x7BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x56D DUP5 DUP3 DUP6 ADD PUSH2 0x43E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x582 DUP4 DUP4 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x597 DUP2 PUSH2 0x6EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5A6 DUP2 PUSH2 0x6EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5B5 DUP2 PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x5BF DUP2 DUP5 PUSH2 0x6E4 JUMP JUMPDEST SWAP3 POP PUSH2 0x5CA DUP3 PUSH2 0x6C2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5FB JUMPI DUP2 MLOAD PUSH2 0x5E2 DUP8 DUP3 PUSH2 0x576 JUMP JUMPDEST SWAP7 POP PUSH2 0x5ED DUP4 PUSH2 0x6D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5CE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x60C DUP2 PUSH2 0x745 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x627 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x59D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x642 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x603 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x65D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x66A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67B PUSH2 0x68C JUMP JUMPDEST SWAP1 POP PUSH2 0x687 DUP3 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6B1 JUMPI PUSH2 0x6B0 PUSH2 0x780 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA DUP3 PUSH2 0x725 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70C DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71E DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x758 DUP3 PUSH2 0x7C3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x777 JUMPI PUSH2 0x776 PUSH2 0x780 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DD DUP2 PUSH2 0x6EF JUMP JUMPDEST DUP2 EQ PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7F4 DUP2 PUSH2 0x701 JUMP JUMPDEST DUP2 EQ PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x80B DUP2 PUSH2 0x713 JUMP JUMPDEST DUP2 EQ PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x822 DUP2 PUSH2 0x745 JUMP JUMPDEST DUP2 EQ PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 PUSH32 0xCB00E27F170DC7EB5D171B85D4852DCB8CB9175BD80E6D95ACACDC5F87126473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "8847:610:0:-:0;;;8893:42;8871:64;;;;;;;;;;;;;;;;;;;;8964:42;8942:64;;;;;;;;;;;;;;;;;;;;9030:19;9013:36;;8847:610;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUSD_336": {
									"entryPoint": 763,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CalcLpPrice_376": {
									"entryPoint": 237,
									"id": 376,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@WBNB_333": {
									"entryPoint": 801,
									"id": 333,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_385": {
									"entryPoint": 837,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$25": {
									"entryPoint": 1044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Router_$330": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$25": {
									"entryPoint": 1225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$25t_contract$_Router_$330t_address": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$2_memory_ptr_to_t_array$_t_address_$2_memory_ptr_fromStack": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$2_memory_ptr__to_t_uint256_t_array$_t_address_$2_memory_ptr__fromStack_reversed": {
									"entryPoint": 1608,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1676,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$2_memory_ptr": {
									"entryPoint": 1730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$2_memory_ptr": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$2_memory_ptr": {
									"entryPoint": 1751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$2_memory_ptr_fromStack": {
									"entryPoint": 1764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$25": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Router_$330": {
									"entryPoint": 1811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1920,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1982,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$25": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Router_$330": {
									"entryPoint": 2050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9645:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "137:631:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "147:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "229:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "172:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "156:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "147:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "257:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "250:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "286:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "272:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "313:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "302:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "335:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "346:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "339:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "401:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "371:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "388:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "376:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "376:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "364:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "364:36:1"
															},
															"nodeType": "YulIf",
															"src": "361:143:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "573:189:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "588:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "592:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "630:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "667:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "635:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "635:48:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "623:61:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "623:61:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "697:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "704:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "697:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "731:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "742:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "731:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "535:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "532:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "546:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "548:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "557:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "560:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "553:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "553:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "548:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "517:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "519:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "528:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "523:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "513:249:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "107:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "123:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "131:5:1",
														"type": ""
													}
												],
												"src": "24:744:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "826:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "836:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "858:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "845:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "836:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "901:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "874:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "874:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "804:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "812:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "820:5:1",
														"type": ""
													}
												],
												"src": "774:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "982:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "992:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1007:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1001:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1001:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "992:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1050:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1023:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1023:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "960:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "968:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "976:5:1",
														"type": ""
													}
												],
												"src": "919:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1173:297:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1222:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1224:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1224:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1224:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1201:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1209:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1197:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1197:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1216:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1193:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1193:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1186:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:35:1"
															},
															"nodeType": "YulIf",
															"src": "1183:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1314:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1334:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1328:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1318:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1350:114:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1437:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1445:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1433:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1452:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1460:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1359:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:105:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1350:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1151:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1159:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1167:5:1",
														"type": ""
													}
												],
												"src": "1085:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1541:100:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1551:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1573:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1560:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1560:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1551:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1629:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$25",
																	"nodeType": "YulIdentifier",
																	"src": "1589:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:46:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1519:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1527:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1535:5:1",
														"type": ""
													}
												],
												"src": "1476:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1713:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1723:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1745:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1732:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1732:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1723:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1802:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Router_$330",
																	"nodeType": "YulIdentifier",
																	"src": "1761:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1761:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Router_$330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1691:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1699:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1707:5:1",
														"type": ""
													}
												],
												"src": "1647:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1883:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1893:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1908:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1902:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1893:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1924:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1924:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1924:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1861:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1869:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1877:5:1",
														"type": ""
													}
												],
												"src": "1820:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2046:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2092:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2094:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2094:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2094:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2067:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2076:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2063:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2063:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2088:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2059:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2059:32:1"
															},
															"nodeType": "YulIf",
															"src": "2056:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2185:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2200:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2204:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2229:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2275:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2286:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2271:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2271:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2295:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2239:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2239:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2229:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2016:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2027:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2039:6:1",
														"type": ""
													}
												],
												"src": "1969:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2428:452:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2474:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2476:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2476:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2476:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2449:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2458:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2445:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2445:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2470:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2441:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:32:1"
															},
															"nodeType": "YulIf",
															"src": "2438:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2567:306:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2582:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2606:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2617:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2602:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2602:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2596:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2596:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2586:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2667:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2669:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2669:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2669:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2639:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2647:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2636:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2636:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2633:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2764:99:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2835:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2846:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2831:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2831:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2855:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2774:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2774:89:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2764:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2398:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2409:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2421:6:1",
														"type": ""
													}
												],
												"src": "2326:554:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2965:276:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3011:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3013:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3013:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3013:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2986:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2995:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2982:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2982:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3007:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2978:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2978:32:1"
															},
															"nodeType": "YulIf",
															"src": "2975:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3104:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3119:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3133:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3123:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3148:76:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3196:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3207:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3192:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3192:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3216:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$25",
																			"nodeType": "YulIdentifier",
																			"src": "3158:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:66:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3148:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2935:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2946:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2958:6:1",
														"type": ""
													}
												],
												"src": "2886:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3374:546:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3420:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3422:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3422:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3422:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3395:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3404:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3391:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3391:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3416:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3387:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3387:32:1"
															},
															"nodeType": "YulIf",
															"src": "3384:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3513:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3528:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3542:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3532:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3557:76:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3605:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3616:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3601:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3601:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3625:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$25",
																			"nodeType": "YulIdentifier",
																			"src": "3567:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3567:66:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3557:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3653:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3668:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3682:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3672:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3698:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3747:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3758:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3743:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3743:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3767:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$330",
																			"nodeType": "YulIdentifier",
																			"src": "3708:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3708:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3698:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3795:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3810:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3824:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3814:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3840:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3875:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3886:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3871:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3871:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3895:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3850:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3850:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3840:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$25t_contract$_Router_$330t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3328:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3339:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3351:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3359:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3367:6:1",
														"type": ""
													}
												],
												"src": "3247:673:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4003:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4049:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4051:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4051:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4051:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4024:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4033:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4020:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4020:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4045:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4016:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4016:32:1"
															},
															"nodeType": "YulIf",
															"src": "4013:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4142:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4157:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4171:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4161:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4186:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4232:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4243:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4228:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4228:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4252:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4196:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4196:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4186:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3973:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3984:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3996:6:1",
														"type": ""
													}
												],
												"src": "3926:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4363:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4407:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4415:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4373:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4373:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4373:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4428:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4446:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4451:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4442:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4442:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "4428:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4336:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4344:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "4352:10:1",
														"type": ""
													}
												],
												"src": "4283:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4523:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4540:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4563:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4545:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4545:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4533:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4533:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4533:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4511:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4518:3:1",
														"type": ""
													}
												],
												"src": "4468:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4647:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4664:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4687:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4669:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4669:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4657:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4657:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4657:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4635:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4642:3:1",
														"type": ""
													}
												],
												"src": "4582:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4850:582:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4860:66:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4920:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$2_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4874:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4874:52:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4864:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4935:91:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5014:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5019:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$2_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4942:71:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:84:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4935:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5035:69:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5098:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$2_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5050:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5050:54:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "5039:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5113:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "5127:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5117:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5203:222:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5217:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5244:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5238:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5238:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "5221:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5264:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "5315:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5330:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "5271:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5271:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5264:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5347:68:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5408:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$2_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5357:50:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5357:58:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5347:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5165:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5168:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5162:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5162:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5176:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5178:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5187:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5190:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5183:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5183:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5178:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5147:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5149:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5158:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "5153:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5143:282:1"
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$2_memory_ptr_to_t_array$_t_address_$2_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4837:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4844:3:1",
														"type": ""
													}
												],
												"src": "4738:694:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5503:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5520:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5543:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5525:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5525:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5513:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5513:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5513:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5491:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5498:3:1",
														"type": ""
													}
												],
												"src": "5438:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5660:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5670:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5682:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5693:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5678:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5670:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5750:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5763:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5774:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5759:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5759:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5706:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5632:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5655:4:1",
														"type": ""
													}
												],
												"src": "5562:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5898:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5910:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5921:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5906:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5906:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5898:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5978:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5991:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6002:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5987:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5987:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5934:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5934:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5934:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5860:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5872:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5883:4:1",
														"type": ""
													}
												],
												"src": "5790:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6190:252:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6200:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6212:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6223:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6208:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6208:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6200:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6280:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6293:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6304:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6289:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6289:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6236:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6236:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6236:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6407:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6420:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6431:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6416:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6416:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$2_memory_ptr_to_t_array$_t_address_$2_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6317:89:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6317:118:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6317:118:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$2_memory_ptr__to_t_uint256_t_array$_t_address_$2_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6154:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6166:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6174:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6185:4:1",
														"type": ""
													}
												],
												"src": "6018:424:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6489:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6499:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6509:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6509:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6499:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6558:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6566:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6538:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6538:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6538:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6473:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6482:6:1",
														"type": ""
													}
												],
												"src": "6448:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6623:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6633:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6649:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6643:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6633:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6616:6:1",
														"type": ""
													}
												],
												"src": "6583:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6746:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6851:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6853:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6853:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6853:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6823:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6831:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6820:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6820:30:1"
															},
															"nodeType": "YulIf",
															"src": "6817:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6883:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6895:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6903:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6891:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6883:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6945:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6957:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6963:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6953:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6953:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6945:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6730:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6741:4:1",
														"type": ""
													}
												],
												"src": "6664:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7051:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7061:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "7069:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7061:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$2_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7038:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7046:4:1",
														"type": ""
													}
												],
												"src": "6981:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7157:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7168:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7178:4:1",
																"type": "",
																"value": "0x02"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7168:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$2_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7140:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7150:6:1",
														"type": ""
													}
												],
												"src": "7085:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7278:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7290:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7295:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7286:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7286:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "7278:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$2_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7255:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "7263:4:1",
														"type": ""
													}
												],
												"src": "7195:111:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7421:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7431:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7446:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7431:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$2_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7393:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7398:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7409:11:1",
														"type": ""
													}
												],
												"src": "7312:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7506:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7516:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7545:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7527:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7527:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7516:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7488:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7498:7:1",
														"type": ""
													}
												],
												"src": "7461:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7621:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7631:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7660:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7642:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7642:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7631:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7603:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7613:7:1",
														"type": ""
													}
												],
												"src": "7563:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7737:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7747:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7776:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7758:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7758:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7747:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Router_$330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7719:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7729:7:1",
														"type": ""
													}
												],
												"src": "7678:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7839:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7849:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7864:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7871:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7860:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7860:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7849:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7821:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7831:7:1",
														"type": ""
													}
												],
												"src": "7794:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7971:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7981:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7992:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7981:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7953:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7963:7:1",
														"type": ""
													}
												],
												"src": "7926:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8052:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8062:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8084:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "8114:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "8092:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8092:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8080:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8080:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8066:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8231:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8233:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8233:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8233:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8174:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8186:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8171:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8171:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8210:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8222:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8207:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8207:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8168:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8168:62:1"
															},
															"nodeType": "YulIf",
															"src": "8165:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8269:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8273:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8262:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8262:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8262:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8038:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8046:4:1",
														"type": ""
													}
												],
												"src": "8009:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8324:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8341:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8344:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8334:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8334:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8334:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8438:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8441:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8431:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8431:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8431:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8462:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8465:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8455:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8455:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8455:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "8296:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8571:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8588:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8591:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8581:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8581:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8581:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "8482:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8694:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8711:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8714:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8704:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8704:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "8605:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8817:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8834:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8837:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8827:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8827:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8827:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "8728:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8940:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8957:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8960:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8950:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8950:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8950:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "8851:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9022:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9032:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9050:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9057:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9046:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9046:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9066:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9062:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9062:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9042:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9042:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9032:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9005:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9015:6:1",
														"type": ""
													}
												],
												"src": "8974:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9125:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9182:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9191:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9194:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9184:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9184:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9184:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9148:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9173:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "9155:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9155:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9145:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9145:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9138:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9138:43:1"
															},
															"nodeType": "YulIf",
															"src": "9135:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9118:5:1",
														"type": ""
													}
												],
												"src": "9082:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9266:92:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9336:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9345:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9348:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9338:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9338:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9338:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9289:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9327:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$25",
																					"nodeType": "YulIdentifier",
																					"src": "9296:30:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9296:37:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9286:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9286:48:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9279:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9279:56:1"
															},
															"nodeType": "YulIf",
															"src": "9276:76:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9259:5:1",
														"type": ""
													}
												],
												"src": "9210:148:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9421:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9492:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9501:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9504:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9494:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9494:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9494:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9444:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9483:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Router_$330",
																					"nodeType": "YulIdentifier",
																					"src": "9451:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9451:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9441:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9441:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9434:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9434:57:1"
															},
															"nodeType": "YulIf",
															"src": "9431:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Router_$330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9414:5:1",
														"type": ""
													}
												],
												"src": "9364:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9563:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9620:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9629:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9632:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9622:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9622:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9622:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9586:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9611:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9593:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9593:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9583:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9583:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9576:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9576:43:1"
															},
															"nodeType": "YulIf",
															"src": "9573:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9556:5:1",
														"type": ""
													}
												],
												"src": "9520:122:1"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_IERC20_$25(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$25(value)\n    }\n\n    function abi_decode_t_contract$_Router_$330(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Router_$330(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$25(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$25(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$25t_contract$_Router_$330t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$25(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Router_$330(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[2] -> address[2]\n    function abi_encode_t_array$_t_address_$2_memory_ptr_to_t_array$_t_address_$2_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_address_$2_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$2_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$2_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$2_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$2_memory_ptr__to_t_uint256_t_array$_t_address_$2_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_array$_t_address_$2_memory_ptr_to_t_array$_t_address_$2_memory_ptr_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$2_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function array_length_t_array$_t_address_$2_memory_ptr(value) -> length {\n\n        length := 0x02\n\n    }\n\n    function array_nextElement_t_array$_t_address_$2_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$2_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$25(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Router_$330(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$25(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$25(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Router_$330(value) {\n        if iszero(eq(value, cleanup_t_contract$_Router_$330(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806320ae0b6d14610051578063484f4ea9146100815780638dd950021461009f578063e4dc2aa4146100bd575b600080fd5b61006b600480360381019061006691906104f6565b6100ed565b604051610078919061062d565b60405180910390f35b6100896102fb565b6040516100969190610612565b60405180910390f35b6100a7610321565b6040516100b49190610612565b60405180910390f35b6100d760048036038101906100d291906104c9565b610345565b6040516100e4919061062d565b60405180910390f35b6000808473ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561013657600080fd5b505afa15801561014a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016e9190610549565b905060008473ffffffffffffffffffffffffffffffffffffffff1663bd5f68b060025460405180604001604052808a73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156101e257600080fd5b505afa1580156101f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021a9190610453565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152506040518363ffffffff1660e01b8152600401610298929190610648565b60006040518083038186803b1580156102b057600080fd5b505afa1580156102c4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102ed9190610480565b905081925050509392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000919050565b600061035f61035a84610696565b610671565b90508083825260208201905082856020860282011115610382576103816107b4565b5b60005b858110156103b25781610398888261043e565b845260208401935060208301925050600181019050610385565b5050509392505050565b6000813590506103cb816107d4565b92915050565b6000815190506103e0816107d4565b92915050565b600082601f8301126103fb576103fa6107af565b5b815161040b84826020860161034c565b91505092915050565b600081359050610423816107eb565b92915050565b60008135905061043881610802565b92915050565b60008151905061044d81610819565b92915050565b600060208284031215610469576104686107be565b5b6000610477848285016103d1565b91505092915050565b600060208284031215610496576104956107be565b5b600082015167ffffffffffffffff8111156104b4576104b36107b9565b5b6104c0848285016103e6565b91505092915050565b6000602082840312156104df576104de6107be565b5b60006104ed84828501610414565b91505092915050565b60008060006060848603121561050f5761050e6107be565b5b600061051d86828701610414565b935050602061052e86828701610429565b925050604061053f868287016103bc565b9150509250925092565b60006020828403121561055f5761055e6107be565b5b600061056d8482850161043e565b91505092915050565b6000610582838361058e565b60208301905092915050565b610597816106ef565b82525050565b6105a6816106ef565b82525050565b6105b5816106cc565b6105bf81846106e4565b92506105ca826106c2565b8060005b838110156105fb5781516105e28782610576565b96506105ed836106d7565b9250506001810190506105ce565b505050505050565b61060c81610745565b82525050565b6000602082019050610627600083018461059d565b92915050565b60006020820190506106426000830184610603565b92915050565b600060608201905061065d6000830185610603565b61066a60208301846105ac565b9392505050565b600061067b61068c565b9050610687828261074f565b919050565b6000604051905090565b600067ffffffffffffffff8211156106b1576106b0610780565b5b602082029050602081019050919050565b6000819050919050565b600060029050919050565b6000602082019050919050565b600081905092915050565b60006106fa82610725565b9050919050565b600061070c826106ef565b9050919050565b600061071e826106ef565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610758826107c3565b810181811067ffffffffffffffff8211171561077757610776610780565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6107dd816106ef565b81146107e857600080fd5b50565b6107f481610701565b81146107ff57600080fd5b50565b61080b81610713565b811461081657600080fd5b50565b61082281610745565b811461082d57600080fd5b5056fea2646970667358221220e77fcb00e27f170dc7eb5d171b85d4852dcb8cb9175bd80e6d95acacdc5f871264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20AE0B6D EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xE4DC2AA4 EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x4F6 JUMP JUMPDEST PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x549 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBD5F68B0 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x453 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP3 SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x480 JUMP JUMPDEST SWAP1 POP DUP2 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F PUSH2 0x35A DUP5 PUSH2 0x696 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x382 JUMPI PUSH2 0x381 PUSH2 0x7B4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3B2 JUMPI DUP2 PUSH2 0x398 DUP9 DUP3 PUSH2 0x43E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x385 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CB DUP2 PUSH2 0x7D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3E0 DUP2 PUSH2 0x7D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3FB JUMPI PUSH2 0x3FA PUSH2 0x7AF JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x40B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x34C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x423 DUP2 PUSH2 0x7EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x438 DUP2 PUSH2 0x802 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x44D DUP2 PUSH2 0x819 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x469 JUMPI PUSH2 0x468 PUSH2 0x7BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x477 DUP5 DUP3 DUP6 ADD PUSH2 0x3D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x496 JUMPI PUSH2 0x495 PUSH2 0x7BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B4 JUMPI PUSH2 0x4B3 PUSH2 0x7B9 JUMP JUMPDEST JUMPDEST PUSH2 0x4C0 DUP5 DUP3 DUP6 ADD PUSH2 0x3E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4DF JUMPI PUSH2 0x4DE PUSH2 0x7BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4ED DUP5 DUP3 DUP6 ADD PUSH2 0x414 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x50F JUMPI PUSH2 0x50E PUSH2 0x7BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x51D DUP7 DUP3 DUP8 ADD PUSH2 0x414 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x52E DUP7 DUP3 DUP8 ADD PUSH2 0x429 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x53F DUP7 DUP3 DUP8 ADD PUSH2 0x3BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x55F JUMPI PUSH2 0x55E PUSH2 0x7BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x56D DUP5 DUP3 DUP6 ADD PUSH2 0x43E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x582 DUP4 DUP4 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x597 DUP2 PUSH2 0x6EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5A6 DUP2 PUSH2 0x6EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5B5 DUP2 PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x5BF DUP2 DUP5 PUSH2 0x6E4 JUMP JUMPDEST SWAP3 POP PUSH2 0x5CA DUP3 PUSH2 0x6C2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5FB JUMPI DUP2 MLOAD PUSH2 0x5E2 DUP8 DUP3 PUSH2 0x576 JUMP JUMPDEST SWAP7 POP PUSH2 0x5ED DUP4 PUSH2 0x6D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5CE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x60C DUP2 PUSH2 0x745 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x627 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x59D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x642 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x603 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x65D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x66A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67B PUSH2 0x68C JUMP JUMPDEST SWAP1 POP PUSH2 0x687 DUP3 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6B1 JUMPI PUSH2 0x6B0 PUSH2 0x780 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA DUP3 PUSH2 0x725 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70C DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71E DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x758 DUP3 PUSH2 0x7C3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x777 JUMPI PUSH2 0x776 PUSH2 0x780 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DD DUP2 PUSH2 0x6EF JUMP JUMPDEST DUP2 EQ PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7F4 DUP2 PUSH2 0x701 JUMP JUMPDEST DUP2 EQ PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x80B DUP2 PUSH2 0x713 JUMP JUMPDEST DUP2 EQ PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x822 DUP2 PUSH2 0x745 JUMP JUMPDEST DUP2 EQ PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 PUSH32 0xCB00E27F170DC7EB5D171B85D4852DCB8CB9175BD80E6D95ACACDC5F87126473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "8847:610:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9058:301;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8942:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8871;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9367:87;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9058:301;9155:7;9174:19;9196:9;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9174:45;;9232:23;9258:13;:27;;;9286:6;;9258:62;;;;;;;;9294:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9258:62;;;;;;;;9314:4;9258:62;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9232:88;;9340:11;9333:18;;;;9058:301;;;;;:::o;8942:64::-;;;;;;;;;;;;;:::o;8871:::-;;;;;;;;;;;;:::o;9367:87::-;9428:7;9367:87;;;:::o;24:744:1:-;131:5;156:81;172:64;229:6;172:64;:::i;:::-;156:81;:::i;:::-;147:90;;257:5;286:6;279:5;272:21;320:4;313:5;309:16;302:23;;346:6;396:3;388:4;380:6;376:17;371:3;367:27;364:36;361:143;;;415:79;;:::i;:::-;361:143;528:1;513:249;538:6;535:1;532:13;513:249;;;606:3;635:48;679:3;667:10;635:48;:::i;:::-;630:3;623:61;713:4;708:3;704:14;697:21;;747:4;742:3;738:14;731:21;;573:189;560:1;557;553:9;548:14;;513:249;;;517:14;137:631;;24:744;;;;;:::o;774:139::-;820:5;858:6;845:20;836:29;;874:33;901:5;874:33;:::i;:::-;774:139;;;;:::o;919:143::-;976:5;1007:6;1001:13;992:22;;1023:33;1050:5;1023:33;:::i;:::-;919:143;;;;:::o;1085:385::-;1167:5;1216:3;1209:4;1201:6;1197:17;1193:27;1183:122;;1224:79;;:::i;:::-;1183:122;1334:6;1328:13;1359:105;1460:3;1452:6;1445:4;1437:6;1433:17;1359:105;:::i;:::-;1350:114;;1173:297;1085:385;;;;:::o;1476:165::-;1535:5;1573:6;1560:20;1551:29;;1589:46;1629:5;1589:46;:::i;:::-;1476:165;;;;:::o;1647:167::-;1707:5;1745:6;1732:20;1723:29;;1761:47;1802:5;1761:47;:::i;:::-;1647:167;;;;:::o;1820:143::-;1877:5;1908:6;1902:13;1893:22;;1924:33;1951:5;1924:33;:::i;:::-;1820:143;;;;:::o;1969:351::-;2039:6;2088:2;2076:9;2067:7;2063:23;2059:32;2056:119;;;2094:79;;:::i;:::-;2056:119;2214:1;2239:64;2295:7;2286:6;2275:9;2271:22;2239:64;:::i;:::-;2229:74;;2185:128;1969:351;;;;:::o;2326:554::-;2421:6;2470:2;2458:9;2449:7;2445:23;2441:32;2438:119;;;2476:79;;:::i;:::-;2438:119;2617:1;2606:9;2602:17;2596:24;2647:18;2639:6;2636:30;2633:117;;;2669:79;;:::i;:::-;2633:117;2774:89;2855:7;2846:6;2835:9;2831:22;2774:89;:::i;:::-;2764:99;;2567:306;2326:554;;;;:::o;2886:355::-;2958:6;3007:2;2995:9;2986:7;2982:23;2978:32;2975:119;;;3013:79;;:::i;:::-;2975:119;3133:1;3158:66;3216:7;3207:6;3196:9;3192:22;3158:66;:::i;:::-;3148:76;;3104:130;2886:355;;;;:::o;3247:673::-;3351:6;3359;3367;3416:2;3404:9;3395:7;3391:23;3387:32;3384:119;;;3422:79;;:::i;:::-;3384:119;3542:1;3567:66;3625:7;3616:6;3605:9;3601:22;3567:66;:::i;:::-;3557:76;;3513:130;3682:2;3708:67;3767:7;3758:6;3747:9;3743:22;3708:67;:::i;:::-;3698:77;;3653:132;3824:2;3850:53;3895:7;3886:6;3875:9;3871:22;3850:53;:::i;:::-;3840:63;;3795:118;3247:673;;;;;:::o;3926:351::-;3996:6;4045:2;4033:9;4024:7;4020:23;4016:32;4013:119;;;4051:79;;:::i;:::-;4013:119;4171:1;4196:64;4252:7;4243:6;4232:9;4228:22;4196:64;:::i;:::-;4186:74;;4142:128;3926:351;;;;:::o;4283:179::-;4352:10;4373:46;4415:3;4407:6;4373:46;:::i;:::-;4451:4;4446:3;4442:14;4428:28;;4283:179;;;;:::o;4468:108::-;4545:24;4563:5;4545:24;:::i;:::-;4540:3;4533:37;4468:108;;:::o;4582:118::-;4669:24;4687:5;4669:24;:::i;:::-;4664:3;4657:37;4582:118;;:::o;4738:694::-;4874:52;4920:5;4874:52;:::i;:::-;4942:84;5019:6;5014:3;4942:84;:::i;:::-;4935:91;;5050:54;5098:5;5050:54;:::i;:::-;5127:7;5158:1;5143:282;5168:6;5165:1;5162:13;5143:282;;;5244:6;5238:13;5271:63;5330:3;5315:13;5271:63;:::i;:::-;5264:70;;5357:58;5408:6;5357:58;:::i;:::-;5347:68;;5203:222;5190:1;5187;5183:9;5178:14;;5143:282;;;5147:14;4850:582;;;4738:694;;:::o;5438:118::-;5525:24;5543:5;5525:24;:::i;:::-;5520:3;5513:37;5438:118;;:::o;5562:222::-;5655:4;5693:2;5682:9;5678:18;5670:26;;5706:71;5774:1;5763:9;5759:17;5750:6;5706:71;:::i;:::-;5562:222;;;;:::o;5790:::-;5883:4;5921:2;5910:9;5906:18;5898:26;;5934:71;6002:1;5991:9;5987:17;5978:6;5934:71;:::i;:::-;5790:222;;;;:::o;6018:424::-;6185:4;6223:2;6212:9;6208:18;6200:26;;6236:71;6304:1;6293:9;6289:17;6280:6;6236:71;:::i;:::-;6317:118;6431:2;6420:9;6416:18;6407:6;6317:118;:::i;:::-;6018:424;;;;;:::o;6448:129::-;6482:6;6509:20;;:::i;:::-;6499:30;;6538:33;6566:4;6558:6;6538:33;:::i;:::-;6448:129;;;:::o;6583:75::-;6616:6;6649:2;6643:9;6633:19;;6583:75;:::o;6664:311::-;6741:4;6831:18;6823:6;6820:30;6817:56;;;6853:18;;:::i;:::-;6817:56;6903:4;6895:6;6891:17;6883:25;;6963:4;6957;6953:15;6945:23;;6664:311;;;:::o;6981:98::-;7046:4;7069:3;7061:11;;6981:98;;;:::o;7085:104::-;7150:6;7178:4;7168:14;;7085:104;;;:::o;7195:111::-;7263:4;7295;7290:3;7286:14;7278:22;;7195:111;;;:::o;7312:143::-;7409:11;7446:3;7431:18;;7312:143;;;;:::o;7461:96::-;7498:7;7527:24;7545:5;7527:24;:::i;:::-;7516:35;;7461:96;;;:::o;7563:109::-;7613:7;7642:24;7660:5;7642:24;:::i;:::-;7631:35;;7563:109;;;:::o;7678:110::-;7729:7;7758:24;7776:5;7758:24;:::i;:::-;7747:35;;7678:110;;;:::o;7794:126::-;7831:7;7871:42;7864:5;7860:54;7849:65;;7794:126;;;:::o;7926:77::-;7963:7;7992:5;7981:16;;7926:77;;;:::o;8009:281::-;8092:27;8114:4;8092:27;:::i;:::-;8084:6;8080:40;8222:6;8210:10;8207:22;8186:18;8174:10;8171:34;8168:62;8165:88;;;8233:18;;:::i;:::-;8165:88;8273:10;8269:2;8262:22;8052:238;8009:281;;:::o;8296:180::-;8344:77;8341:1;8334:88;8441:4;8438:1;8431:15;8465:4;8462:1;8455:15;8482:117;8591:1;8588;8581:12;8605:117;8714:1;8711;8704:12;8728:117;8837:1;8834;8827:12;8851:117;8960:1;8957;8950:12;8974:102;9015:6;9066:2;9062:7;9057:2;9050:5;9046:14;9042:28;9032:38;;8974:102;;;:::o;9082:122::-;9155:24;9173:5;9155:24;:::i;:::-;9148:5;9145:35;9135:63;;9194:1;9191;9184:12;9135:63;9082:122;:::o;9210:148::-;9296:37;9327:5;9296:37;:::i;:::-;9289:5;9286:48;9276:76;;9348:1;9345;9338:12;9276:76;9210:148;:::o;9364:150::-;9451:38;9483:5;9451:38;:::i;:::-;9444:5;9441:49;9431:77;;9504:1;9501;9494:12;9431:77;9364:150;:::o;9520:122::-;9593:24;9611:5;9593:24;:::i;:::-;9586:5;9583:35;9573:63;;9632:1;9629;9622:12;9573:63;9520:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "430000",
								"executionCost": "71108",
								"totalCost": "501108"
							},
							"external": {
								"BUSD()": "2514",
								"CalcLpPrice(address,address,address)": "infinite",
								"WBNB()": "2533",
								"totalSupply(address)": "730"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8847,
									"end": 9457,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8893,
									"end": 8935,
									"name": "PUSH",
									"source": 0,
									"value": "AE13D989DAC2F0DEBFF460AC112A837C89BAA7CD"
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8964,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "78867BBEEF44F2326BF8DDD1941A4439382EF2A7"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9030,
									"end": 9049,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 9013,
									"end": 9049,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 9013,
									"end": 9049,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8847,
									"end": 9457,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e77fcb00e27f170dc7eb5d171b85d4852dcb8cb9175bd80e6d95acacdc5f871264736f6c63430008070033",
									".code": [
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH",
											"source": 0,
											"value": "20AE0B6D"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH",
											"source": 0,
											"value": "484F4EA9"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH",
											"source": 0,
											"value": "8DD95002"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH",
											"source": 0,
											"value": "E4DC2AA4"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9457,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9155,
											"end": 9162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9205,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9196,
											"end": 9217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9217,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9271,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "PUSH",
											"source": 0,
											"value": "BD5F68B0"
										},
										{
											"begin": 9286,
											"end": 9292,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9286,
											"end": 9292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9303,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9310,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9294,
											"end": 9310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9310,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9314,
											"end": 9318,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9333,
											"end": 9351,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9333,
											"end": 9351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9333,
											"end": 9351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9333,
											"end": 9351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9359,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9454,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 272,
											"end": 293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 309,
											"end": 325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 376,
											"end": 393,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 367,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 400,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 535,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 545,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 679,
											"end": 682,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 623,
											"end": 684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 713,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 704,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 738,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 774,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 820,
											"end": 825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 865,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 901,
											"end": 906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 874,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 976,
											"end": 981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1050,
											"end": 1055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1220,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1460,
											"end": 1463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1476,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1476,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1580,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1629,
											"end": 1634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1589,
											"end": 1635,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1589,
											"end": 1635,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1589,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1641,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1647,
											"end": 1814,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1647,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1752,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1802,
											"end": 1807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1761,
											"end": 1808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1761,
											"end": 1808,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1761,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1814,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1814,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1820,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1820,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1951,
											"end": 1956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1924,
											"end": 1957,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1924,
											"end": 1957,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1924,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1963,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1963,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1969,
											"end": 2320,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1969,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2074,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2086,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2091,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2295,
											"end": 2302,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2284,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2239,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2239,
											"end": 2303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2239,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2320,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2320,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2326,
											"end": 2880,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2326,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2472,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2468,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2473,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2438,
											"end": 2557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2476,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2476,
											"end": 2555,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2476,
											"end": 2555,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2476,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2557,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2438,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2666,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2750,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2633,
											"end": 2750,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2669,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2669,
											"end": 2748,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2669,
											"end": 2748,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2669,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2750,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2633,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2774,
											"end": 2863,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2774,
											"end": 2863,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2774,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2880,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2880,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2886,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2886,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3009,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 2993,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3010,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3094,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2975,
											"end": 3094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3013,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3013,
											"end": 3092,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3013,
											"end": 3092,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3013,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3094,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2975,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3216,
											"end": 3223,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3205,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3192,
											"end": 3214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3158,
											"end": 3224,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3158,
											"end": 3224,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3158,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3224,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 3241,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 3241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 3241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 3241,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3247,
											"end": 3920,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3247,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3418,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3404,
											"end": 3413,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3402,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3391,
											"end": 3414,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3419,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3503,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3384,
											"end": 3503,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3422,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3422,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3422,
											"end": 3501,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3422,
											"end": 3501,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3422,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3503,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3384,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3625,
											"end": 3632,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3622,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3614,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3567,
											"end": 3633,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3567,
											"end": 3633,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3567,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3708,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3767,
											"end": 3774,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3756,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3708,
											"end": 3775,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3708,
											"end": 3775,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3708,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3775,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 3785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3895,
											"end": 3902,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3850,
											"end": 3903,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3850,
											"end": 3903,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3850,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3903,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3920,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3926,
											"end": 4277,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3926,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4047,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4031,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4043,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4048,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4132,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4013,
											"end": 4132,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4051,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4051,
											"end": 4130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4051,
											"end": 4130,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4051,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4132,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4013,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4252,
											"end": 4259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4228,
											"end": 4250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4196,
											"end": 4260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4196,
											"end": 4260,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4196,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4277,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4277,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4283,
											"end": 4462,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4283,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4373,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4415,
											"end": 4418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4413,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4373,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4373,
											"end": 4419,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4373,
											"end": 4419,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4373,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4446,
											"end": 4449,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4462,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4462,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4468,
											"end": 4576,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4468,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4545,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4563,
											"end": 4568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4545,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4545,
											"end": 4569,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4545,
											"end": 4569,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4545,
											"end": 4569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4533,
											"end": 4570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4576,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4582,
											"end": 4700,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4582,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4687,
											"end": 4692,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4664,
											"end": 4667,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4700,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4738,
											"end": 5432,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4738,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4920,
											"end": 4925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4874,
											"end": 4926,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4874,
											"end": 4926,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4874,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5019,
											"end": 5025,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4942,
											"end": 5026,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4942,
											"end": 5026,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4942,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 5026,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 5026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5098,
											"end": 5103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5050,
											"end": 5104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5050,
											"end": 5104,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5050,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5127,
											"end": 5134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5143,
											"end": 5425,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5143,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5174,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5165,
											"end": 5166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5162,
											"end": 5175,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5143,
											"end": 5425,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5143,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5143,
											"end": 5425,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5244,
											"end": 5250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5238,
											"end": 5251,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5330,
											"end": 5333,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5271,
											"end": 5334,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5271,
											"end": 5334,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5271,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5334,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5408,
											"end": 5414,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5357,
											"end": 5415,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5357,
											"end": 5415,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5357,
											"end": 5415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5415,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5191,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5187,
											"end": 5188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5178,
											"end": 5192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5178,
											"end": 5192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5143,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5143,
											"end": 5425,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5143,
											"end": 5425,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5143,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5147,
											"end": 5161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4738,
											"end": 5432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4738,
											"end": 5432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4738,
											"end": 5432,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5438,
											"end": 5556,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 5438,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 5543,
											"end": 5548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 5525,
											"end": 5549,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5525,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 5525,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5513,
											"end": 5550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5556,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5562,
											"end": 5784,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 5562,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5695,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5682,
											"end": 5691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5670,
											"end": 5696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5670,
											"end": 5696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5772,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5759,
											"end": 5776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5750,
											"end": 5756,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5706,
											"end": 5777,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5706,
											"end": 5777,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 5706,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5784,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5784,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5784,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5790,
											"end": 6012,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5790,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 5887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5923,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5910,
											"end": 5919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5934,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6002,
											"end": 6003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 6000,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 6004,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5978,
											"end": 5984,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5934,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 5934,
											"end": 6005,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5934,
											"end": 6005,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5934,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5790,
											"end": 6012,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5790,
											"end": 6012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5790,
											"end": 6012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5790,
											"end": 6012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5790,
											"end": 6012,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6018,
											"end": 6442,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 6018,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6223,
											"end": 6225,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6212,
											"end": 6221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6200,
											"end": 6226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6200,
											"end": 6226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6293,
											"end": 6302,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6289,
											"end": 6306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6280,
											"end": 6286,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6236,
											"end": 6307,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6236,
											"end": 6307,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6236,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6431,
											"end": 6433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6420,
											"end": 6429,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6416,
											"end": 6434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6407,
											"end": 6413,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6317,
											"end": 6435,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6317,
											"end": 6435,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6317,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6442,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6442,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6442,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6448,
											"end": 6577,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6448,
											"end": 6577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6482,
											"end": 6488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6509,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6509,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6509,
											"end": 6529,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6509,
											"end": 6529,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6509,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6538,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6566,
											"end": 6570,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6538,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6538,
											"end": 6571,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6538,
											"end": 6571,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6538,
											"end": 6571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6577,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6583,
											"end": 6658,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6583,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6616,
											"end": 6622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6643,
											"end": 6652,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6658,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6664,
											"end": 6975,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6664,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6823,
											"end": 6829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6873,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6817,
											"end": 6873,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6873,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6817,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6907,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6895,
											"end": 6901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6891,
											"end": 6908,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 6967,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6957,
											"end": 6961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6975,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6981,
											"end": 7079,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6981,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7069,
											"end": 7072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7061,
											"end": 7072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7061,
											"end": 7072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6981,
											"end": 7079,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6981,
											"end": 7079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6981,
											"end": 7079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6981,
											"end": 7079,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7085,
											"end": 7189,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7085,
											"end": 7189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7150,
											"end": 7156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7178,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7168,
											"end": 7182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7189,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7195,
											"end": 7306,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7195,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7263,
											"end": 7267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7295,
											"end": 7299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7290,
											"end": 7293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7286,
											"end": 7300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7306,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7312,
											"end": 7455,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7312,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7446,
											"end": 7449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7431,
											"end": 7449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7431,
											"end": 7449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7455,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7455,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7461,
											"end": 7557,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 7461,
											"end": 7557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7498,
											"end": 7505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7527,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 7545,
											"end": 7550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7527,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 7527,
											"end": 7551,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7527,
											"end": 7551,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 7527,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7557,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7563,
											"end": 7672,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 7563,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7613,
											"end": 7620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7642,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 7660,
											"end": 7665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7642,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 7642,
											"end": 7666,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7642,
											"end": 7666,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 7642,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7631,
											"end": 7666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7631,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7563,
											"end": 7672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7563,
											"end": 7672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7563,
											"end": 7672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7563,
											"end": 7672,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7678,
											"end": 7788,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7678,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7729,
											"end": 7736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7758,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7776,
											"end": 7781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 7758,
											"end": 7782,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7758,
											"end": 7782,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7758,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7747,
											"end": 7782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7747,
											"end": 7782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7678,
											"end": 7788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7678,
											"end": 7788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7678,
											"end": 7788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7678,
											"end": 7788,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7794,
											"end": 7920,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 7794,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7831,
											"end": 7838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7871,
											"end": 7913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7864,
											"end": 7869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7860,
											"end": 7914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 7914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 7914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7920,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7926,
											"end": 8003,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7926,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7963,
											"end": 7970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 7997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 7997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 8003,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 8003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 8003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 8003,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8009,
											"end": 8290,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 8009,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 8114,
											"end": 8118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 8092,
											"end": 8119,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8092,
											"end": 8119,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 8092,
											"end": 8119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8207,
											"end": 8229,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8186,
											"end": 8204,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8174,
											"end": 8184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8171,
											"end": 8205,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8230,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8165,
											"end": 8253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8165,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 8165,
											"end": 8253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8233,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8233,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8233,
											"end": 8251,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8233,
											"end": 8251,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8233,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8165,
											"end": 8253,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 8165,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8271,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8262,
											"end": 8284,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8009,
											"end": 8290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8009,
											"end": 8290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8009,
											"end": 8290,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8296,
											"end": 8476,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8296,
											"end": 8476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8344,
											"end": 8421,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8341,
											"end": 8342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8334,
											"end": 8422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8441,
											"end": 8445,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 8438,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8431,
											"end": 8446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8462,
											"end": 8463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8455,
											"end": 8470,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8599,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 8482,
											"end": 8599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8591,
											"end": 8592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8588,
											"end": 8589,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8581,
											"end": 8593,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8605,
											"end": 8722,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 8605,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 8715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8704,
											"end": 8716,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8728,
											"end": 8845,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 8728,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8837,
											"end": 8838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8834,
											"end": 8835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8827,
											"end": 8839,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8851,
											"end": 8968,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8851,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8960,
											"end": 8961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8957,
											"end": 8958,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8950,
											"end": 8962,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8974,
											"end": 9076,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 8974,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9066,
											"end": 9068,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9062,
											"end": 9069,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9057,
											"end": 9059,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9050,
											"end": 9055,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9046,
											"end": 9060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9070,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9032,
											"end": 9070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9032,
											"end": 9070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8974,
											"end": 9076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8974,
											"end": 9076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8974,
											"end": 9076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8974,
											"end": 9076,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9082,
											"end": 9204,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 9082,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 9173,
											"end": 9178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 9155,
											"end": 9179,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9155,
											"end": 9179,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 9155,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9148,
											"end": 9153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9145,
											"end": 9180,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 9135,
											"end": 9198,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9194,
											"end": 9195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9191,
											"end": 9192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9184,
											"end": 9196,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9198,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 9135,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9082,
											"end": 9204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9082,
											"end": 9204,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9210,
											"end": 9358,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 9210,
											"end": 9358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9296,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 9327,
											"end": 9332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9296,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 9296,
											"end": 9333,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9296,
											"end": 9333,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 9296,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9289,
											"end": 9294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9286,
											"end": 9334,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9276,
											"end": 9352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 9276,
											"end": 9352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9348,
											"end": 9349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9345,
											"end": 9346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9338,
											"end": 9350,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9276,
											"end": 9352,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 9276,
											"end": 9352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9210,
											"end": 9358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9210,
											"end": 9358,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9364,
											"end": 9514,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 9364,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9451,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 9483,
											"end": 9488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9451,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 9451,
											"end": 9489,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9451,
											"end": 9489,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 9451,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9490,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9431,
											"end": 9508,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9501,
											"end": 9502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9494,
											"end": 9506,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9508,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9431,
											"end": 9508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9364,
											"end": 9514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9364,
											"end": 9514,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9520,
											"end": 9642,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 9520,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9593,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 9611,
											"end": 9616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9593,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9593,
											"end": 9617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9593,
											"end": 9617,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 9593,
											"end": 9617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9591,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9583,
											"end": 9618,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9573,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 9573,
											"end": 9636,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9632,
											"end": 9633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9629,
											"end": 9630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9573,
											"end": 9636,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 9573,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9520,
											"end": 9642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9520,
											"end": 9642,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BUSD()": "484f4ea9",
							"CalcLpPrice(address,address,address)": "20ae0b6d",
							"WBNB()": "8dd95002",
							"totalSupply(address)": "e4dc2aa4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"},{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"busd\",\"type\":\"address\"}],\"name\":\"CalcLpPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LpUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x8dcc45f3e81c2838b0004fb5a62491d9b1cae96a8175fa29a75e8aac14c4c53e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b7caf0810f0bc2aa5e8ae1abdc08b39703f838b364278bd6cd215476c62c815\",\"dweb:/ipfs/QmRb8vefByMagpRFK2bvusSrSSSRdjAQso4x7KKrHaGw5d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 333,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "WBNB",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 336,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "BUSD",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 339,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "amount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[2]",
									"name": "path",
									"type": "address[2]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[2])": "bd5f68b0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[2]\",\"name\":\"path\",\"type\":\"address[2]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x8dcc45f3e81c2838b0004fb5a62491d9b1cae96a8175fa29a75e8aac14c4c53e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b7caf0810f0bc2aa5e8ae1abdc08b39703f838b364278bd6cd215476c62c815\",\"dweb:/ipfs/QmRb8vefByMagpRFK2bvusSrSSSRdjAQso4x7KKrHaGw5d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": "Warning: This declaration has the same name as another declaration.\n   --> contracts/LpPrice.sol:244:9:\n    |\n244 |         uint256 totalSupply = lpAddress.totalSupply();\n    |         ^^^^^^^^^^^^^^^^^^^\nNote: The other declaration is here:\n   --> contracts/LpPrice.sol:251:5:\n    |\n251 |     function totalSupply(IERC20 lpAddress) external view returns(uint256){\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 9454,
						"file": "contracts/LpPrice.sol",
						"message": "The other declaration is here:",
						"start": 9367
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 9193,
					"file": "contracts/LpPrice.sol",
					"start": 9174
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/LpPrice.sol:246:9:\n    |\n246 |         uint256[] memory price0 = routerAddress.getAmountsOut(amount,[lpAddress.token0(), busd]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9255,
					"file": "contracts/LpPrice.sol",
					"start": 9232
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/LpPrice.sol": {
				"ast": {
					"absolutePath": "contracts/LpPrice.sol",
					"exportedSymbols": {
						"Address": [
							317
						],
						"IERC20": [
							25
						],
						"LpUtils": [
							386
						],
						"Router": [
							330
						]
					},
					"id": 387,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "IERC20",
							"nameLocation": "70:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "84:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "167:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "204:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:0"
									},
									"scope": 25,
									"src": "158:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "230:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "236:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:9:0"
									},
									"scope": 25,
									"src": "221:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "288:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:9:0"
									},
									"scope": 25,
									"src": "279:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "346:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:17:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:9:0"
									},
									"scope": 25,
									"src": "337:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 387,
							"src": "60:348:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 317,
							"linearizedBaseContracts": [
								317
							],
							"name": "Address",
							"nameLocation": "420:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1486:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 33,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1715:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1715:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1715:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1737:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1715:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 32,
												"id": 38,
												"nodeType": "Return",
												"src": "1708:30:0"
											}
										]
									},
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "435:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1429:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1448:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1440:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1439:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:6:0"
									},
									"scope": 317,
									"src": "1420:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "2752:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 51,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2779:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		],
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2771:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 49,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2771:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2771:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2771:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 54,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "2796:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2771:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2804:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 48,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2763:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "2763:73:0"
											},
											{
												"assignments": [
													60,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2855:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "2850:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 59,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2850:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 67,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2898:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 61,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2868:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2868:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 63,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "2890:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2868:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2868:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2849:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 69,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "2920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2929:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2912:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2912:78:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1754:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2690:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2716:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2700:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2735:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2699:43:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2752:0:0"
									},
									"scope": 317,
									"src": "2681:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3849:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 85,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3880:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 86,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3888:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3894:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 84,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															91,
															111
														],
														"referencedDeclaration": 111,
														"src": "3867:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3867:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 83,
												"id": 89,
												"nodeType": "Return",
												"src": "3860:67:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3006:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3769:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3790:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3782:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3811:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3798:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3798:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3781:35:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3835:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 81,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:14:0"
									},
									"scope": 317,
									"src": "3760:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4316:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 104,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4356:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 105,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "4364:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4370:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 107,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "4373:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 103,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															131,
															181
														],
														"referencedDeclaration": 181,
														"src": "4334:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4334:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 102,
												"id": 109,
												"nodeType": "Return",
												"src": "4327:59:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3943:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4174:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4205:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4197:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4235:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4222:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 95,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4222:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4264:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4250:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 97,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4250:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:97:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4302:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4302:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4301:14:0"
									},
									"scope": 317,
									"src": "4165:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "4916:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 124,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "4956:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 125,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 126,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "4970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4977:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 123,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															131,
															181
														],
														"referencedDeclaration": 181,
														"src": "4934:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4934:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 129,
												"nodeType": "Return",
												"src": "4927:94:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "4402:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4778:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4818:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4848:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4835:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4871:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4863:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4799:84:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4902:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4902:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4901:14:0"
									},
									"scope": 317,
									"src": "4769:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5469:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 148,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5496:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		],
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5488:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 146,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5488:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5488:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5488:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 151,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "5513:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5488:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5520:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5480:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "5480:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 158,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "5591:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 157,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "5580:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5580:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5600:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5572:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "5572:60:0"
											},
											{
												"assignments": [
													164,
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 164,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5651:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5646:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 163,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5646:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5673:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5660:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 165,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5660:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"arguments": [
														{
															"id": 171,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "5713:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 167,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "5687:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5687:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 169,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "5706:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5687:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5687:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5645:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "5753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 176,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "5762:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 177,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5774:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 174,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "5736:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5736:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 144,
												"id": 179,
												"nodeType": "Return",
												"src": "5729:58:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "5037:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5294:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5334:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5326:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5364:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5351:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5351:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5387:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5379:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5417:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5403:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 139,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5403:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:121:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5455:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5455:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5454:14:0"
									},
									"scope": 317,
									"src": "5285:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "6080:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "6125:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6131:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 191,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															198,
															233
														],
														"referencedDeclaration": 233,
														"src": "6098:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6098:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 190,
												"id": 196,
												"nodeType": "Return",
												"src": "6091:80:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "5803:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5989:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6016:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6008:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6037:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6024:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 185,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6024:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:35:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6066:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6065:14:0"
									},
									"scope": 317,
									"src": "5980:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "6533:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 212,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "6563:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 211,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "6552:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6552:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6572:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6544:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "6544:67:0"
											},
											{
												"assignments": [
													218,
													220
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6630:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "6625:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 217,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6625:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6652:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "6639:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 219,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6639:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 225,
												"initialValue": {
													"arguments": [
														{
															"id": 223,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "6684:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6666:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6666:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6666:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6624:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 228,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "6733:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 229,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6745:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 226,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "6707:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6707:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 209,
												"id": 231,
												"nodeType": "Return",
												"src": "6700:58:0"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "6187:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6380:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6434:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6434:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6476:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6462:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:97:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6519:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6519:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6518:14:0"
									},
									"scope": 317,
									"src": "6371:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "7050:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7089:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "7097:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7103:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 243,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															250,
															285
														],
														"referencedDeclaration": 285,
														"src": "7068:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 242,
												"id": 248,
												"nodeType": "Return",
												"src": "7061:84:0"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "6774:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6962:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6991:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "6983:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "6999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6982:35:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "7036:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7036:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7035:14:0"
									},
									"scope": 317,
									"src": "6953:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "7506:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 264,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "7536:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 263,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "7525:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7525:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7545:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7517:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "7517:69:0"
											},
											{
												"assignments": [
													270,
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7605:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "7600:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 269,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7600:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7627:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "7614:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 271,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7614:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 277,
												"initialValue": {
													"arguments": [
														{
															"id": 275,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "7661:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 273,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "7641:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7641:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7641:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7599:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "7701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 280,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7710:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 281,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "7722:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 278,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "7684:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7684:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 261,
												"id": 283,
												"nodeType": "Return",
												"src": "7677:58:0"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "7161:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7356:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7395:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7387:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7425:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7412:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7412:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7454:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7440:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7440:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:97:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7492:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7492:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:14:0"
									},
									"scope": 317,
									"src": "7347:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "8135:548:0",
										"statements": [
											{
												"condition": {
													"id": 297,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 288,
													"src": "8150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 313,
													"nodeType": "Block",
													"src": "8209:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 301,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "8295:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8295:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8315:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8295:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 311,
																"nodeType": "Block",
																"src": "8610:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 308,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 292,
																					"src": "8636:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 307,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8629:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8629:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 310,
																		"nodeType": "ExpressionStatement",
																		"src": "8629:20:0"
																	}
																]
															},
															"id": 312,
															"nodeType": "IfStatement",
															"src": "8291:374:0",
															"trueBody": {
																"id": 306,
																"nodeType": "Block",
																"src": "8318:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8441:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8464:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8493:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8487:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8487:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8468:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8537:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8541:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8533:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8533:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8554:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8526:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8526:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8526:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 290,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8493:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 290,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8541:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 305,
																		"nodeType": "InlineAssembly",
																		"src": "8432:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 314,
												"nodeType": "IfStatement",
												"src": "8146:530:0",
												"trueBody": {
													"id": 300,
													"nodeType": "Block",
													"src": "8159:44:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "8181:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 296,
															"id": 299,
															"nodeType": "Return",
															"src": "8174:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "7751:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7980:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8012:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8007:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8007:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8043:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8030:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8030:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8078:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8064:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8064:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7996:101:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8121:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8121:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8120:14:0"
									},
									"scope": 317,
									"src": "7971:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 387,
							"src": "412:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 330,
							"linearizedBaseContracts": [
								330
							],
							"name": "Router",
							"nameLocation": "8700:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "bd5f68b0",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "8723:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "8742:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8737:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "8770:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8752:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
													"typeString": "address[2]"
												},
												"typeName": {
													"baseType": {
														"id": 320,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8752:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 322,
													"length": {
														"hexValue": "32",
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8760:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "8752:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$2_storage_ptr",
														"typeString": "address[2]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8736:39:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "8831:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8817:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 325,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "8817:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 326,
													"nodeType": "ArrayTypeName",
													"src": "8817:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8816:23:0"
									},
									"scope": 330,
									"src": "8714:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 387,
							"src": "8690:153:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 386,
							"linearizedBaseContracts": [
								386
							],
							"name": "LpUtils",
							"nameLocation": "8856:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8dd95002",
									"id": 333,
									"mutability": "mutable",
									"name": "WBNB",
									"nameLocation": "8886:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 386,
									"src": "8871:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 331,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8871:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
										"id": 332,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8893:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "484f4ea9",
									"id": 336,
									"mutability": "mutable",
									"name": "BUSD",
									"nameLocation": "8957:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 386,
									"src": "8942:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 334,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8942:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837383836374262456546343466323332366246384444643139343161343433393338324546324137",
										"id": 335,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8964:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 339,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "9021:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 386,
									"src": "9013:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9013:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 338,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9030:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "9163:196:0",
										"statements": [
											{
												"assignments": [
													353
												],
												"declarations": [
													{
														"constant": false,
														"id": 353,
														"mutability": "mutable",
														"name": "totalSupply",
														"nameLocation": "9182:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "9174:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 352,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9174:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 354,
															"name": "lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "9196:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$25",
																"typeString": "contract IERC20"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "9196:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9196:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9174:45:0"
											},
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "price0",
														"nameLocation": "9249:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "9232:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 360,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9232:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 361,
															"nodeType": "ArrayTypeName",
															"src": "9232:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 372,
												"initialValue": {
													"arguments": [
														{
															"id": 365,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "9286:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 366,
																			"name": "lpAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "9294:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$25",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 12,
																		"src": "9294:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9294:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 369,
																	"name": "busd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "9314:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 370,
															"isConstant": false,
															"isInlineArray": true,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9293:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																"typeString": "address[2] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																"typeString": "address[2] memory"
															}
														],
														"expression": {
															"id": 363,
															"name": "routerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "9258:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Router_$330",
																"typeString": "contract Router"
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getAmountsOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 329,
														"src": "9258:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$2_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,address[2] memory) view external returns (uint256[] memory)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9258:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9232:88:0"
											},
											{
												"expression": {
													"id": 373,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 353,
													"src": "9340:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 374,
												"nodeType": "Return",
												"src": "9333:18:0"
											}
										]
									},
									"functionSelector": "20ae0b6d",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CalcLpPrice",
									"nameLocation": "9067:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9086:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9079:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$25",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "9079:6:0"
													},
													"referencedDeclaration": 25,
													"src": "9079:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$25",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "9104:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9097:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$330",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 343,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 330,
														"src": "9097:6:0"
													},
													"referencedDeclaration": 330,
													"src": "9097:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$330",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "busd",
												"nameLocation": "9127:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9119:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9078:54:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9155:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9154:9:0"
									},
									"scope": 386,
									"src": "9058:301:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "9436:18:0",
										"statements": []
									},
									"functionSelector": "e4dc2aa4",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "9376:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "9388:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$25",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 378,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 377,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "9388:6:0"
													},
													"referencedDeclaration": 25,
													"src": "9388:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$25",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9387:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "9428:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9427:9:0"
									},
									"scope": 386,
									"src": "9367:87:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 387,
							"src": "8847:610:0",
							"usedErrors": []
						}
					],
					"src": "33:9424:0"
				},
				"id": 0
			}
		}
	}
}
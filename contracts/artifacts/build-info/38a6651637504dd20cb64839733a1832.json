{
	"id": "38a6651637504dd20cb64839733a1832",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.16",
	"solcLongVersion": "0.8.16+commit.07a7930e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTMasterChef.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2022-02-21\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function mint(address account, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    event Mint(address indexed minter, address indexed to, uint256 amount);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ninterface IMigratorChef {\r\n    function migrate(IERC20 token) external returns (IERC20);\r\n}\r\n\r\ninterface IERC721 {\r\n    function createNFT(address to) external;\r\n}\r\n\r\n// MasterChef is the master of Power. He can make Power and he is a fair guy.\r\n//\r\n// Note that it's ownable and the owner wields tremendous power. The ownership\r\n// will be transferred to a governance smart contract once Power is sufficiently\r\n// distributed and the community can show to govern itself.\r\n//\r\n// Have fun reading it. Hopefully it's bug-free. God bless.\r\ncontract NFTMasterChef is Ownable {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n        //\r\n        // We do some fancy math here. Basically, any point in time, the amount of Powers\r\n        // entitled to a user but is pending to be distributed is:\r\n        //\r\n        //   pending reward = (user.amount * pool.accPowerPerShare) - user.rewardDebt\r\n        //\r\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n        //   1. The pool's `accPowerPerShare` (and `lastRewardBlock`) gets updated.\r\n        //   2. User receives the pending reward sent to his/her address.\r\n        //   3. User's `amount` gets updated.\r\n        //   4. User's `rewardDebt` gets updated.\r\n    }\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 lpToken; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. Powers to distribute per block.\r\n        uint256 lastRewardBlock; // Last block number that Powers distribution occurs.\r\n        uint256 accPowerPerShare; // Accumulated Powers per share, times 1e12. See below.\r\n    }\r\n\r\n    struct NFTsInfo {\r\n        IERC721 NFT;\r\n        uint256 power;\r\n    }\r\n\r\n    NFTsInfo[] public nftsInfo;\r\n\r\n    // The Power TOKEN!\r\n    IERC20 public DDT;\r\n    // Power tokens created per block.\r\n    uint256 public PowerPerBlock;\r\n    // Bonus muliplier for early Power makers.\r\n    uint256 public BONUS_MULTIPLIER = 1;\r\n    // The migrator contract. It has a lot of power. Can only be set through governance (owner).\r\n    IMigratorChef public migrator;\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n    // The block number when Power mining starts.\r\n    uint256 public startBlock;\r\n\r\n    address public NFTStakeAddress;\r\n    address public DDTMasterchefAddress;\r\n\r\n    mapping(address => uint256) public powerBalance;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 amount\r\n    );\r\n\r\n    constructor(\r\n        IERC20 _DDT,\r\n        uint256 _PowerPerBlock,\r\n        uint256 _startBlock\r\n    ) {\r\n        DDT = _DDT;\r\n        PowerPerBlock = _PowerPerBlock;\r\n        startBlock = _startBlock;\r\n        \r\n        // staking pool\r\n        poolInfo.push(PoolInfo({\r\n            lpToken: DDT,\r\n            allocPoint: 1000,\r\n            lastRewardBlock: startBlock,\r\n            accPowerPerShare: 0\r\n        }));\r\n\r\n        totalAllocPoint = 1000;\r\n\r\n    }\r\n\r\n    function updateNFTStakeAddress(address _NFTStakeAddress) public onlyOwner{\r\n        NFTStakeAddress = _NFTStakeAddress;\r\n    }\r\n\r\n    function updateDDTMasterchefAddress(address _DDTMasterchefAddress) public onlyOwner{\r\n        DDTMasterchefAddress = _DDTMasterchefAddress;\r\n    }\r\n\r\n    function getPowerBalance(address account) public view returns(uint256) {\r\n        return powerBalance[account];\r\n    }\r\n\r\n    function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {\r\n        nftsInfo.push(\r\n            NFTsInfo({\r\n                NFT: _NFT,\r\n                power: _power\r\n            })\r\n        );\r\n    }\r\n\r\n    function updateNFT(uint256 level, uint256 _power) public onlyOwner {\r\n        nftsInfo[level].power = _power;\r\n    }\r\n\r\n    function claimNFTReward(uint256 level, uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 accPowerPerShare = pool.accPowerPerShare;\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n            uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n            accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply));\r\n        }\r\n        uint256 pending = user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n        NFTsInfo storage nft = nftsInfo[level];\r\n        uint256 total = pending.add(powerBalance[msg.sender]);\r\n        if(total > nft.power){\r\n            if(_pid == 0){\r\n                leaveStaking(0);\r\n            }\r\n            if(_pid != 0){\r\n                withdraw(_pid,0);\r\n            }\r\n        }\r\n        require(nft.power < powerBalance[msg.sender], 'Power is not enough');\r\n        powerBalance[msg.sender] = powerBalance[msg.sender].sub(nft.power);\r\n        nft.NFT.createNFT(msg.sender);\r\n    }\r\n\r\n    function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r\n        BONUS_MULTIPLIER = multiplierNumber;\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfo.length;\r\n    }\r\n\r\n    // Add a new lp to the pool. Can only be called by the owner.\r\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\r\n    function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\r\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        poolInfo.push(\r\n            PoolInfo({\r\n                lpToken: _lpToken,\r\n                allocPoint: _allocPoint,\r\n                lastRewardBlock: lastRewardBlock,\r\n                accPowerPerShare: 0\r\n            })\r\n        );\r\n    }\r\n\r\n    // Update the given pool's Power allocation point. Can only be called by the owner.\r\n    function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\r\n        poolInfo[_pid].allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Set the migrator contract. Can only be called by the owner.\r\n    function setMigrator(IMigratorChef _migrator) public onlyOwner {\r\n        migrator = _migrator;\r\n    }\r\n\r\n    // Migrate lp token to another lp contract. Can be called by anyone. We trust that migrator contract is good.\r\n    function migrate(uint256 _pid) public {\r\n        require(address(migrator) != address(0), 'migrate: no migrator');\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        IERC20 lpToken = pool.lpToken;\r\n        uint256 bal = lpToken.balanceOf(address(this));\r\n        lpToken.safeApprove(address(migrator), bal);\r\n        IERC20 newLpToken = migrator.migrate(lpToken);\r\n        require(bal == newLpToken.balanceOf(address(this)), 'migrate: bad');\r\n        pool.lpToken = newLpToken;\r\n    }\r\n\r\n    // Return reward multiplier over the given _from to _to block.\r\n    function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r\n         return _to.sub(_from).mul(BONUS_MULTIPLIER);\r\n    }\r\n\r\n    // View function to see pending Powers on frontend.\r\n    function pendingPower(uint256 _pid, address _user) external view returns (uint256){\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accPowerPerShare = pool.accPowerPerShare;\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n            uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n            accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply));\r\n        }\r\n        return user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward vairables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.number <= pool.lastRewardBlock) {\r\n            return;\r\n        }\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (lpSupply <= 0) {\r\n            pool.lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n        uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n        pool.accPowerPerShare = pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply));\r\n        pool.lastRewardBlock = block.number;\r\n    }\r\n\r\n    // Deposit LP tokens to MasterChef for Power allocation.\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n        require (_pid != 0, \"deposit Power by staking\");\r\n        require(_amount > 0, \"Amount is zero\");\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        updatePool(_pid);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0){\r\n                powerBalance[msg.sender] = powerBalance[msg.sender].add(pending);\r\n            }\r\n        }\r\n        pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n        user.amount = user.amount.add(_amount);\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Deposit(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens from MasterChef.\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n\r\n        require (_pid != 0, \"withdraw Power by unstaking\");\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(_pid);\r\n        uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n        if(pending > 0){\r\n            powerBalance[msg.sender] = powerBalance[msg.sender].add(pending);\r\n        }\r\n        user.amount = user.amount.sub(_amount);\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        pool.lpToken.safeTransfer(address(msg.sender), _amount);\r\n        emit Withdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n        // Stake Power tokens to MasterChef\r\n    function enterStaking(uint256 _amount) public {\r\n        require(_amount > 0, \"Amount is zero\");\r\n\r\n        PoolInfo storage pool = poolInfo[0];\r\n        UserInfo storage user = userInfo[0][address(msg.sender)];\r\n        \r\n        updatePool(0);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0) {\r\n                powerBalance[address(msg.sender)] = powerBalance[address(msg.sender)].add(pending);\r\n            }\r\n        }\r\n        if(_amount > 0) {\r\n            pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n            user.amount = user.amount.add(_amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Deposit(msg.sender, 0, _amount);\r\n    }\r\n\r\n    function enterStakingCompund(uint256 _amount, address _account) public {\r\n        require(_amount > 0, \"Amount is zero\");\r\n        require(msg.sender == NFTStakeAddress || msg.sender == DDTMasterchefAddress, \"Caller is not family\");\r\n        PoolInfo storage pool = poolInfo[0];\r\n        UserInfo storage user = userInfo[0][address(_account)];\r\n        \r\n        updatePool(0);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0) {\r\n                powerBalance[address(_account)] = powerBalance[address(_account)].add(pending);\r\n            }\r\n        }\r\n        if(_amount > 0) {\r\n            pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n            user.amount = user.amount.add(_amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Deposit(_account, 0, _amount);\r\n    }\r\n\r\n    // Withdraw Power tokens from STAKING.\r\n    function leaveStaking(uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfo[0];\r\n        UserInfo storage user = userInfo[0][msg.sender];\r\n\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(0);\r\n        uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n        if(pending > 0) {\r\n            powerBalance[msg.sender] = powerBalance[msg.sender].add(pending);\r\n        }\r\n        if(_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            pool.lpToken.safeTransfer(address(msg.sender), _amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Withdraw(msg.sender, 0, _amount);\r\n    }\r\n\r\n    \r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n    }\r\n    \r\n    function updatePowerPerBlock(uint256 newAmount) public onlyOwner {\r\n        PowerPerBlock = newAmount;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/NFTMasterChef.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":7813:16087  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":7813:16087  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207dffd03613657966e6f8f2df53f53be2c18e5cfe9ed1a413d840f8ff2a7915d864736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207dffd03613657966e6f8f2df53f53be2c18e5cfe9ed1a413d840f8ff2a7915d864736f6c63430008100033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xFFD03613657966E6F8F2DF53F53BE2C18E5CFE9ED1A413D840F8FF2A7915 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "7813:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207dffd03613657966e6f8f2df53f53be2c18e5cfe9ed1a413d840f8ff2a7915d864736f6c63430008100033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xFFD03613657966E6F8F2DF53F53BE2C18E5CFE9ED1A413D840F8FF2A7915 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "7813:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207dffd03613657966e6f8f2df53f53be2c18e5cfe9ed1a413d840f8ff2a7915d864736f6c63430008100033",
									".code": [
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTMasterChef.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xadb7e581fb37e6ff5b85a2b2eb1efbe4b3a4c2f62d01e39b14ed92e411a63b87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1f8b8db77bd6dae4584ec4c604c9538291d93a0552d537ba2f1b42555029ff\",\"dweb:/ipfs/QmPYkLmzLV3Kh5pD9z4hyhpJmgA1LjcuPM6Y8Q2LLEUNV8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xadb7e581fb37e6ff5b85a2b2eb1efbe4b3a4c2f62d01e39b14ed92e411a63b87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1f8b8db77bd6dae4584ec4c604c9538291d93a0552d537ba2f1b42555029ff\",\"dweb:/ipfs/QmPYkLmzLV3Kh5pD9z4hyhpJmgA1LjcuPM6Y8Q2LLEUNV8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xadb7e581fb37e6ff5b85a2b2eb1efbe4b3a4c2f62d01e39b14ed92e411a63b87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1f8b8db77bd6dae4584ec4c604c9538291d93a0552d537ba2f1b42555029ff\",\"dweb:/ipfs/QmPYkLmzLV3Kh5pD9z4hyhpJmgA1LjcuPM6Y8Q2LLEUNV8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "createNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createNFT(address)": "17e5883c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"createNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xadb7e581fb37e6ff5b85a2b2eb1efbe4b3a4c2f62d01e39b14ed92e411a63b87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1f8b8db77bd6dae4584ec4c604c9538291d93a0552d537ba2f1b42555029ff\",\"dweb:/ipfs/QmPYkLmzLV3Kh5pD9z4hyhpJmgA1LjcuPM6Y8Q2LLEUNV8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IMigratorChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "migrate",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"migrate(address)": "ce5494bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"IMigratorChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xadb7e581fb37e6ff5b85a2b2eb1efbe4b3a4c2f62d01e39b14ed92e411a63b87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1f8b8db77bd6dae4584ec4c604c9538291d93a0552d537ba2f1b42555029ff\",\"dweb:/ipfs/QmPYkLmzLV3Kh5pD9z4hyhpJmgA1LjcuPM6Y8Q2LLEUNV8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NFTMasterChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_DDT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_PowerPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BONUS_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DDT",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DDTMasterchefAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NFTStakeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PowerPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC721",
									"name": "_NFT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_power",
									"type": "uint256"
								}
							],
							"name": "addNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "claimNFTReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enterStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "enterStakingCompund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getPowerBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "leaveStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "migrate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "migrator",
							"outputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nftsInfo",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "NFT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "power",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accPowerPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "powerBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "_migrator",
									"type": "address"
								}
							],
							"name": "setMigrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_DDTMasterchefAddress",
									"type": "address"
								}
							],
							"name": "updateDDTMasterchefAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "multiplierNumber",
									"type": "uint256"
								}
							],
							"name": "updateMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_power",
									"type": "uint256"
								}
							],
							"name": "updateNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_NFTStakeAddress",
									"type": "address"
								}
							],
							"name": "updateNFTStakeAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "updatePowerPerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":22111:36454  contract NFTMasterChef is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTMasterChef.sol\":23774:23775  1 */\n  0x01\n    /* \"contracts/NFTMasterChef.sol\":23740:23775  uint256 public BONUS_MULTIPLIER = 1 */\n  0x04\n  sstore\n    /* \"contracts/NFTMasterChef.sol\":24217:24218  0 */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":24184:24218  uint256 public totalAllocPoint = 0 */\n  0x08\n  sstore\n    /* \"contracts/NFTMasterChef.sol\":24731:25193  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NFTMasterChef.sol\":19984:20016  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"contracts/NFTMasterChef.sol\":20003:20015  _msgSender() */\n  tag_8\n    /* \"contracts/NFTMasterChef.sol\":20003:20013  _msgSender */\n  shl(0x20, tag_9)\n    /* \"contracts/NFTMasterChef.sol\":20003:20015  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/NFTMasterChef.sol\":19984:20002  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"contracts/NFTMasterChef.sol\":19984:20016  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/NFTMasterChef.sol\":24852:24856  _DDT */\n  dup3\n    /* \"contracts/NFTMasterChef.sol\":24846:24849  DDT */\n  0x02\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":24846:24856  DDT = _DDT */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24883:24897  _PowerPerBlock */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":24867:24880  PowerPerBlock */\n  0x03\n    /* \"contracts/NFTMasterChef.sol\":24867:24897  PowerPerBlock = _PowerPerBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24921:24932  _startBlock */\n  dup1\n    /* \"contracts/NFTMasterChef.sol\":24908:24918  startBlock */\n  0x09\n    /* \"contracts/NFTMasterChef.sol\":24908:24932  startBlock = _startBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24978:24986  poolInfo */\n  0x06\n    /* \"contracts/NFTMasterChef.sol\":24992:25147  PoolInfo({... */\n  mload(0x40)\n  dup1\n  0x80\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/NFTMasterChef.sol\":25025:25028  DDT */\n  0x02\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTMasterChef.sol\":24992:25147  PoolInfo({... */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/NFTMasterChef.sol\":25055:25059  1000 */\n  0x03e8\n    /* \"contracts/NFTMasterChef.sol\":24992:25147  PoolInfo({... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/NFTMasterChef.sol\":25091:25101  startBlock */\n  sload(0x09)\n    /* \"contracts/NFTMasterChef.sol\":24992:25147  PoolInfo({... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/NFTMasterChef.sol\":25134:25135  0 */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":24992:25147  PoolInfo({... */\n  dup2\n  mstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24978:25148  poolInfo.push(PoolInfo({... */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x04\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  sstore\n  pop\n  pop\n    /* \"contracts/NFTMasterChef.sol\":25179:25183  1000 */\n  0x03e8\n    /* \"contracts/NFTMasterChef.sol\":25161:25176  totalAllocPoint */\n  0x08\n    /* \"contracts/NFTMasterChef.sol\":25161:25183  totalAllocPoint = 1000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24731:25193  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/NFTMasterChef.sol\":22111:36454  contract NFTMasterChef is Ownable {... */\n  jump(tag_13)\n    /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"contracts/NFTMasterChef.sol\":19532:19539  address */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":19559:19569  msg.sender */\n  caller\n    /* \"contracts/NFTMasterChef.sol\":19552:19569  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"contracts/NFTMasterChef.sol\":21449:21465  address oldOwner */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":21468:21474  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTMasterChef.sol\":21449:21474  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/NFTMasterChef.sol\":21494:21502  newOwner */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":21485:21491  _owner */\n  0x00\n  dup1\n    /* \"contracts/NFTMasterChef.sol\":21485:21502  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":21549:21557  newOwner */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTMasterChef.sol\":21539:21547  oldOwner */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/NFTMasterChef.sol\":21438:21566  {... */\n  pop\n    /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_17:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_19:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_20:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_33\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_19\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_21:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_35\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_20\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_22:\n    /* \"#utility.yul\":771:809   */\n  tag_37\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_38:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_23:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_40\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1094   */\ntag_24:\n    /* \"#utility.yul\":1054:1061   */\n  0x00\n    /* \"#utility.yul\":1083:1088   */\n  dup2\n    /* \"#utility.yul\":1072:1088   */\n  swap1\n  pop\n    /* \"#utility.yul\":1017:1094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1100:1222   */\ntag_25:\n    /* \"#utility.yul\":1173:1197   */\n  tag_43\n    /* \"#utility.yul\":1191:1196   */\n  dup2\n    /* \"#utility.yul\":1173:1197   */\n  tag_24\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1166:1171   */\n  dup2\n    /* \"#utility.yul\":1163:1198   */\n  eq\n    /* \"#utility.yul\":1153:1216   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1153:1216   */\ntag_44:\n    /* \"#utility.yul\":1100:1222   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1228:1371   */\ntag_26:\n    /* \"#utility.yul\":1285:1290   */\n  0x00\n    /* \"#utility.yul\":1316:1322   */\n  dup2\n    /* \"#utility.yul\":1310:1323   */\n  mload\n    /* \"#utility.yul\":1301:1323   */\n  swap1\n  pop\n    /* \"#utility.yul\":1332:1365   */\n  tag_46\n    /* \"#utility.yul\":1359:1364   */\n  dup2\n    /* \"#utility.yul\":1332:1365   */\n  tag_25\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1228:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:2068   */\ntag_3:\n    /* \"#utility.yul\":1479:1485   */\n  0x00\n    /* \"#utility.yul\":1487:1493   */\n  dup1\n    /* \"#utility.yul\":1495:1501   */\n  0x00\n    /* \"#utility.yul\":1544:1546   */\n  0x60\n    /* \"#utility.yul\":1532:1541   */\n  dup5\n    /* \"#utility.yul\":1523:1530   */\n  dup7\n    /* \"#utility.yul\":1519:1542   */\n  sub\n    /* \"#utility.yul\":1515:1547   */\n  slt\n    /* \"#utility.yul\":1512:1631   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1550:1629   */\n  tag_49\n  tag_17\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1512:1631   */\ntag_48:\n    /* \"#utility.yul\":1670:1671   */\n  0x00\n    /* \"#utility.yul\":1695:1773   */\n  tag_50\n    /* \"#utility.yul\":1765:1772   */\n  dup7\n    /* \"#utility.yul\":1756:1762   */\n  dup3\n    /* \"#utility.yul\":1745:1754   */\n  dup8\n    /* \"#utility.yul\":1741:1763   */\n  add\n    /* \"#utility.yul\":1695:1773   */\n  tag_23\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1685:1773   */\n  swap4\n  pop\n    /* \"#utility.yul\":1641:1783   */\n  pop\n    /* \"#utility.yul\":1822:1824   */\n  0x20\n    /* \"#utility.yul\":1848:1912   */\n  tag_51\n    /* \"#utility.yul\":1904:1911   */\n  dup7\n    /* \"#utility.yul\":1895:1901   */\n  dup3\n    /* \"#utility.yul\":1884:1893   */\n  dup8\n    /* \"#utility.yul\":1880:1902   */\n  add\n    /* \"#utility.yul\":1848:1912   */\n  tag_26\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1838:1912   */\n  swap3\n  pop\n    /* \"#utility.yul\":1793:1922   */\n  pop\n    /* \"#utility.yul\":1961:1963   */\n  0x40\n    /* \"#utility.yul\":1987:2051   */\n  tag_52\n    /* \"#utility.yul\":2043:2050   */\n  dup7\n    /* \"#utility.yul\":2034:2040   */\n  dup3\n    /* \"#utility.yul\":2023:2032   */\n  dup8\n    /* \"#utility.yul\":2019:2041   */\n  add\n    /* \"#utility.yul\":1987:2051   */\n  tag_26\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1977:2051   */\n  swap2\n  pop\n    /* \"#utility.yul\":1932:2061   */\n  pop\n    /* \"#utility.yul\":1377:2068   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"contracts/NFTMasterChef.sol\":22111:36454  contract NFTMasterChef is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":22111:36454  contract NFTMasterChef is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5ffe6146\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xcf35fddf\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xcf35fddf\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xd209db8c\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xf3239ab5\n      eq\n      tag_40\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xc11490cc\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xcb3cba55\n      eq\n      tag_35\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x715018a6\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x7cd07e47\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x83e32135\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x8aa28550\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x8c51793b\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x5ffe6146\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x61c1b724\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x64482f79\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x3df7aff3\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x4ea2813c\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x4ea2813c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x56b4685f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x5990c569\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x3df7aff3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x41441d3b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x454b0608\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x17caf6f1\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1d5fbd87\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1eaaa045\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x22f58541\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x23cf3118\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0ba33a58\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1058d281\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTMasterChef.sol\":27360:27455  function poolLength() external view returns (uint256) {... */\n    tag_3:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25201:25327  function updateNFTStakeAddress(address _NFTStakeAddress) public onlyOwner{... */\n    tag_4:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":35146:35895  function leaveStaking(uint256 _amount) public {... */\n    tag_5:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23943:23969  PoolInfo[] public poolInfo */\n    tag_6:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":24184:24218  uint256 public totalAllocPoint = 0 */\n    tag_7:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25953:27221  function claimNFTReward(uint256 level, uint256 _pid) public {... */\n    tag_8:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":27624:28184  function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {... */\n    tag_9:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":24347:24382  address public DDTMasterchefAddress */\n    tag_10:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":28662:28764  function setMigrator(IMigratorChef _migrator) public onlyOwner {... */\n    tag_11:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":36342:36451  function updatePowerPerBlock(uint256 newAmount) public onlyOwner {... */\n    tag_12:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":33264:34112  function enterStaking(uint256 _amount) public {... */\n    tag_13:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":32424:33211  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_14:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":28887:29378  function migrate(uint256 _pid) public {... */\n    tag_15:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":24276:24301  uint256 public startBlock */\n    tag_16:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25615:25821  function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {... */\n    tag_17:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":30769:31459  function updatePool(uint256 _pid) public {... */\n    tag_18:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":35974:36330  function emergencyWithdraw(uint256 _pid) public {... */\n    tag_19:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":25335:25481  function updateDDTMasterchefAddress(address _DDTMasterchefAddress) public onlyOwner{... */\n    tag_20:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23657:23685  uint256 public PowerPerBlock */\n    tag_21:\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":27229:27352  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {... */\n    tag_22:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23533:23559  NFTsInfo[] public nftsInfo */\n    tag_23:\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_121\n      swap3\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":30513:30693  function massUpdatePools() public {... */\n    tag_24:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":28281:28586  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n    tag_25:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      tag_128\n      jump\t// in\n    tag_125:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":20756:20859  function renounceOwnership() public virtual onlyOwner {... */\n    tag_26:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23880:23909  IMigratorChef public migrator */\n    tag_27:\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":24310:24340  address public NFTStakeAddress */\n    tag_28:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":23740:23775  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_29:\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25489:25607  function getPowerBalance(address account) public view returns(uint256) {... */\n    tag_30:\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":20105:20192  function owner() public view virtual returns (address) {... */\n    tag_31:\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":29454:29598  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {... */\n    tag_32:\n      tag_148\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_149:\n      tag_150\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":24025:24089  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_33:\n      tag_152\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      tag_155\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      tag_156\n      swap3\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25829:25945  function updateNFT(uint256 level, uint256 _power) public onlyOwner {... */\n    tag_34:\n      tag_158\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n    tag_158:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23593:23610  IERC20 public DDT */\n    tag_35:\n      tag_161\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":34120:35094  function enterStakingCompund(uint256 _amount, address _account) public {... */\n    tag_36:\n      tag_165\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_166:\n      tag_167\n      jump\t// in\n    tag_165:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":24391:24438  mapping(address => uint256) public powerBalance */\n    tag_37:\n      tag_168\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":31529:32372  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_38:\n      tag_172\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_173\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_173:\n      tag_174\n      jump\t// in\n    tag_172:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":21014:21215  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_39:\n      tag_175\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_176:\n      tag_177\n      jump\t// in\n    tag_175:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":29663:30430  function pendingPower(uint256 _pid, address _user) external view returns (uint256){... */\n    tag_40:\n      tag_178\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_179:\n      tag_180\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      tag_181\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":27360:27455  function poolLength() external view returns (uint256) {... */\n    tag_49:\n        /* \"contracts/NFTMasterChef.sol\":27405:27412  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27432:27440  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":27432:27447  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27425:27447  return poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27360:27455  function poolLength() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25201:25327  function updateNFTStakeAddress(address _NFTStakeAddress) public onlyOwner{... */\n    tag_55:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_184\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_186\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/NFTMasterChef.sol\":25303:25319  _NFTStakeAddress */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":25285:25300  NFTStakeAddress */\n      0x0a\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25285:25319  NFTStakeAddress = _NFTStakeAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25201:25327  function updateNFTStakeAddress(address _NFTStakeAddress) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":35146:35895  function leaveStaking(uint256 _amount) public {... */\n    tag_59:\n        /* \"contracts/NFTMasterChef.sol\":35203:35224  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35227:35235  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":35236:35237  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35227:35238  poolInfo[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_192\n      jumpi\n      tag_193\n      tag_194\n      jump\t// in\n    tag_193:\n    tag_192:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":35203:35238  PoolInfo storage pool = poolInfo[0] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35249:35270  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35273:35281  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":35273:35284  userInfo[0] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35282:35283  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":35273:35284  userInfo[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":35273:35296  userInfo[0][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35285:35295  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35273:35296  userInfo[0][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":35249:35296  UserInfo storage user = userInfo[0][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35332:35339  _amount */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":35317:35321  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":35317:35328  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35317:35339  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":35309:35362  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"contracts/NFTMasterChef.sol\":35373:35386  updatePool(0) */\n      tag_199\n        /* \"contracts/NFTMasterChef.sol\":35384:35385  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35373:35383  updatePool */\n      tag_105\n        /* \"contracts/NFTMasterChef.sol\":35373:35386  updatePool(0) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/NFTMasterChef.sol\":35397:35412  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35415:35484  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_200\n        /* \"contracts/NFTMasterChef.sol\":35468:35472  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":35468:35483  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35415:35463  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_201\n        /* \"contracts/NFTMasterChef.sol\":35458:35462  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":35415:35453  user.amount.mul(pool.accPowerPerShare) */\n      tag_202\n        /* \"contracts/NFTMasterChef.sol\":35431:35435  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":35431:35452  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35415:35419  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":35415:35426  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35415:35430  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35415:35453  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_202:\n        /* \"contracts/NFTMasterChef.sol\":35415:35457  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35415:35463  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"contracts/NFTMasterChef.sol\":35415:35467  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35415:35484  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"contracts/NFTMasterChef.sol\":35397:35484  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35508:35509  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35498:35505  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":35498:35509  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":35495:35602  if(pending > 0) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":35553:35590  powerBalance[msg.sender].add(pending) */\n      tag_207\n        /* \"contracts/NFTMasterChef.sol\":35582:35589  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":35553:35565  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":35553:35577  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35566:35576  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35553:35577  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35553:35581  powerBalance[msg.sender].add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35553:35590  powerBalance[msg.sender].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"contracts/NFTMasterChef.sol\":35526:35538  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":35526:35550  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35539:35549  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35526:35550  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":35526:35590  powerBalance[msg.sender] = powerBalance[msg.sender].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35495:35602  if(pending > 0) {... */\n    tag_206:\n        /* \"contracts/NFTMasterChef.sol\":35625:35626  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35615:35622  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":35615:35626  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":35612:35763  if(_amount > 0) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":35657:35681  user.amount.sub(_amount) */\n      tag_210\n        /* \"contracts/NFTMasterChef.sol\":35673:35680  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":35657:35661  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":35657:35668  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35657:35672  user.amount.sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35657:35681  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"contracts/NFTMasterChef.sol\":35643:35647  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":35643:35654  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":35643:35681  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35696:35751  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_211\n        /* \"contracts/NFTMasterChef.sol\":35730:35740  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35743:35750  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":35696:35700  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":35696:35708  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":35696:35721  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_212\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35696:35751  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"contracts/NFTMasterChef.sol\":35612:35763  if(_amount > 0) {... */\n    tag_209:\n        /* \"contracts/NFTMasterChef.sol\":35791:35839  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_213\n        /* \"contracts/NFTMasterChef.sol\":35834:35838  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":35791:35829  user.amount.mul(pool.accPowerPerShare) */\n      tag_214\n        /* \"contracts/NFTMasterChef.sol\":35807:35811  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":35807:35828  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35791:35795  user */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":35791:35802  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35791:35806  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35791:35829  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"contracts/NFTMasterChef.sol\":35791:35833  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35791:35839  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"contracts/NFTMasterChef.sol\":35773:35777  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":35773:35788  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":35773:35839  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35876:35877  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35864:35874  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35855:35887  Withdraw(msg.sender, 0, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTMasterChef.sol\":35879:35886  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":35855:35887  Withdraw(msg.sender, 0, _amount) */\n      mload(0x40)\n      tag_215\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":35192:35895  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35146:35895  function leaveStaking(uint256 _amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23943:23969  PoolInfo[] public poolInfo */\n    tag_62:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24184:24218  uint256 public totalAllocPoint = 0 */\n    tag_66:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25953:27221  function claimNFTReward(uint256 level, uint256 _pid) public {... */\n    tag_71:\n        /* \"contracts/NFTMasterChef.sol\":26024:26045  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26048:26056  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":26057:26061  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":26048:26062  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_219\n      jumpi\n      tag_220\n      tag_194\n      jump\t// in\n    tag_220:\n    tag_219:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":26024:26062  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26073:26094  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26097:26105  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":26097:26111  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26106:26110  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26097:26111  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":26097:26123  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26112:26122  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26097:26123  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":26073:26123  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26134:26158  uint256 accPowerPerShare */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26161:26165  pool */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":26161:26182  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26134:26182  uint256 accPowerPerShare = pool.accPowerPerShare */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26193:26209  uint256 lpSupply */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26212:26216  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":26212:26224  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":26212:26234  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":26243:26247  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":26212:26249  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_222:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"contracts/NFTMasterChef.sol\":26193:26249  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26279:26283  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":26279:26299  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26264:26276  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":26264:26299  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":26264:26316  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_227\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26315:26316  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26303:26311  lpSupply */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":26303:26316  lpSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":26264:26316  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_227:\n        /* \"contracts/NFTMasterChef.sol\":26260:26614  if (block.number > pool.lastRewardBlock && lpSupply != 0) {... */\n      iszero\n      tag_228\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26333:26351  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26354:26403  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_229\n        /* \"contracts/NFTMasterChef.sol\":26368:26372  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":26368:26388  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26390:26402  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":26354:26367  getMultiplier */\n      tag_150\n        /* \"contracts/NFTMasterChef.sol\":26354:26403  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/NFTMasterChef.sol\":26333:26403  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26418:26437  uint256 PowerReward */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26440:26511  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_230\n        /* \"contracts/NFTMasterChef.sol\":26495:26510  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":26440:26490  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      tag_231\n        /* \"contracts/NFTMasterChef.sol\":26474:26478  pool */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26474:26489  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26440:26469  multiplier.mul(PowerPerBlock) */\n      tag_232\n        /* \"contracts/NFTMasterChef.sol\":26455:26468  PowerPerBlock */\n      sload(0x03)\n        /* \"contracts/NFTMasterChef.sol\":26440:26450  multiplier */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":26440:26454  multiplier.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26440:26469  multiplier.mul(PowerPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"contracts/NFTMasterChef.sol\":26440:26473  multiplier.mul(PowerPerBlock).mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26440:26490  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_231:\n        /* \"contracts/NFTMasterChef.sol\":26440:26494  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26440:26511  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"contracts/NFTMasterChef.sol\":26418:26511  uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26545:26602  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      tag_233\n        /* \"contracts/NFTMasterChef.sol\":26566:26601  PowerReward.mul(1e12).div(lpSupply) */\n      tag_234\n        /* \"contracts/NFTMasterChef.sol\":26592:26600  lpSupply */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26566:26587  PowerReward.mul(1e12) */\n      tag_235\n        /* \"contracts/NFTMasterChef.sol\":26582:26586  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":26566:26577  PowerReward */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":26566:26581  PowerReward.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26566:26587  PowerReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_235:\n        /* \"contracts/NFTMasterChef.sol\":26566:26591  PowerReward.mul(1e12).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26566:26601  PowerReward.mul(1e12).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_234:\n        /* \"contracts/NFTMasterChef.sol\":26545:26561  accPowerPerShare */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":26545:26565  accPowerPerShare.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26545:26602  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"contracts/NFTMasterChef.sol\":26526:26602  accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap4\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26318:26614  {... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26260:26614  if (block.number > pool.lastRewardBlock && lpSupply != 0) {... */\n    tag_228:\n        /* \"contracts/NFTMasterChef.sol\":26624:26639  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26642:26706  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_236\n        /* \"contracts/NFTMasterChef.sol\":26690:26694  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26690:26705  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26642:26685  user.amount.mul(accPowerPerShare).div(1e12) */\n      tag_237\n        /* \"contracts/NFTMasterChef.sol\":26680:26684  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":26642:26675  user.amount.mul(accPowerPerShare) */\n      tag_238\n        /* \"contracts/NFTMasterChef.sol\":26658:26674  accPowerPerShare */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":26642:26646  user */\n      dup10\n        /* \"contracts/NFTMasterChef.sol\":26642:26653  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26642:26657  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26642:26675  user.amount.mul(accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"contracts/NFTMasterChef.sol\":26642:26679  user.amount.mul(accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26642:26685  user.amount.mul(accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"contracts/NFTMasterChef.sol\":26642:26689  user.amount.mul(accPowerPerShare).div(1e12).sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26642:26706  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_236:\n        /* \"contracts/NFTMasterChef.sol\":26624:26706  uint256 pending = user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26717:26737  NFTsInfo storage nft */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26740:26748  nftsInfo */\n      0x01\n        /* \"contracts/NFTMasterChef.sol\":26749:26754  level */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26740:26755  nftsInfo[level] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_239\n      jumpi\n      tag_240\n      tag_194\n      jump\t// in\n    tag_240:\n    tag_239:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":26717:26755  NFTsInfo storage nft = nftsInfo[level] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26766:26779  uint256 total */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26782:26819  pending.add(powerBalance[msg.sender]) */\n      tag_242\n        /* \"contracts/NFTMasterChef.sol\":26794:26806  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":26794:26818  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26807:26817  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26794:26818  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26782:26789  pending */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26782:26793  pending.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26782:26819  pending.add(powerBalance[msg.sender]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"contracts/NFTMasterChef.sol\":26766:26819  uint256 total = pending.add(powerBalance[msg.sender]) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26841:26844  nft */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":26841:26850  nft.power */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26833:26838  total */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":26833:26850  total > nft.power */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":26830:27018  if(total > nft.power){... */\n      iszero\n      tag_243\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26877:26878  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26869:26873  _pid */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26869:26878  _pid == 0 */\n      sub\n        /* \"contracts/NFTMasterChef.sol\":26866:26929  if(_pid == 0){... */\n      tag_244\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26898:26913  leaveStaking(0) */\n      tag_245\n        /* \"contracts/NFTMasterChef.sol\":26911:26912  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26898:26910  leaveStaking */\n      tag_59\n        /* \"contracts/NFTMasterChef.sol\":26898:26913  leaveStaking(0) */\n      jump\t// in\n    tag_245:\n        /* \"contracts/NFTMasterChef.sol\":26866:26929  if(_pid == 0){... */\n    tag_244:\n        /* \"contracts/NFTMasterChef.sol\":26954:26955  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26946:26950  _pid */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26946:26955  _pid != 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":26943:27007  if(_pid != 0){... */\n      tag_246\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26975:26991  withdraw(_pid,0) */\n      tag_247\n        /* \"contracts/NFTMasterChef.sol\":26984:26988  _pid */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26989:26990  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26975:26983  withdraw */\n      tag_92\n        /* \"contracts/NFTMasterChef.sol\":26975:26991  withdraw(_pid,0) */\n      jump\t// in\n    tag_247:\n        /* \"contracts/NFTMasterChef.sol\":26943:27007  if(_pid != 0){... */\n    tag_246:\n        /* \"contracts/NFTMasterChef.sol\":26830:27018  if(total > nft.power){... */\n    tag_243:\n        /* \"contracts/NFTMasterChef.sol\":27048:27060  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":27048:27072  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27061:27071  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":27048:27072  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":27036:27039  nft */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":27036:27045  nft.power */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":27036:27072  nft.power < powerBalance[msg.sender] */\n      lt\n        /* \"contracts/NFTMasterChef.sol\":27028:27096  require(nft.power < powerBalance[msg.sender], 'Power is not enough') */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"contracts/NFTMasterChef.sol\":27134:27173  powerBalance[msg.sender].sub(nft.power) */\n      tag_251\n        /* \"contracts/NFTMasterChef.sol\":27163:27166  nft */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":27163:27172  nft.power */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":27134:27146  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":27134:27158  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27147:27157  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":27134:27158  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":27134:27162  powerBalance[msg.sender].sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":27134:27173  powerBalance[msg.sender].sub(nft.power) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_251:\n        /* \"contracts/NFTMasterChef.sol\":27107:27119  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":27107:27131  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27120:27130  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":27107:27131  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":27107:27173  powerBalance[msg.sender] = powerBalance[msg.sender].sub(nft.power) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27184:27187  nft */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":27184:27191  nft.NFT */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":27184:27201  nft.NFT.createNFT */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17e5883c\n        /* \"contracts/NFTMasterChef.sol\":27202:27212  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":27184:27213  nft.NFT.createNFT(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_252:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_253:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_255\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_255:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26013:27221  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25953:27221  function claimNFTReward(uint256 level, uint256 _pid) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":27624:28184  function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {... */\n    tag_75:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_257\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_257:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_258\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_258:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_189\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"contracts/NFTMasterChef.sol\":27727:27738  _withUpdate */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":27723:27784  if (_withUpdate) {... */\n      iszero\n      tag_262\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":27755:27772  massUpdatePools() */\n      tag_263\n        /* \"contracts/NFTMasterChef.sol\":27755:27770  massUpdatePools */\n      tag_124\n        /* \"contracts/NFTMasterChef.sol\":27755:27772  massUpdatePools() */\n      jump\t// in\n    tag_263:\n        /* \"contracts/NFTMasterChef.sol\":27723:27784  if (_withUpdate) {... */\n    tag_262:\n        /* \"contracts/NFTMasterChef.sol\":27794:27817  uint256 lastRewardBlock */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27835:27845  startBlock */\n      sload(0x09)\n        /* \"contracts/NFTMasterChef.sol\":27820:27832  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":27820:27845  block.number > startBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":27820:27873  block.number > startBlock ? block.number : startBlock */\n      tag_264\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":27863:27873  startBlock */\n      sload(0x09)\n        /* \"contracts/NFTMasterChef.sol\":27820:27873  block.number > startBlock ? block.number : startBlock */\n      jump(tag_265)\n    tag_264:\n        /* \"contracts/NFTMasterChef.sol\":27848:27860  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":27820:27873  block.number > startBlock ? block.number : startBlock */\n    tag_265:\n        /* \"contracts/NFTMasterChef.sol\":27794:27873  uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27902:27934  totalAllocPoint.add(_allocPoint) */\n      tag_266\n        /* \"contracts/NFTMasterChef.sol\":27922:27933  _allocPoint */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":27902:27917  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":27902:27921  totalAllocPoint.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":27902:27934  totalAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_266:\n        /* \"contracts/NFTMasterChef.sol\":27884:27899  totalAllocPoint */\n      0x08\n        /* \"contracts/NFTMasterChef.sol\":27884:27934  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27945:27953  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":27973:28165  PoolInfo({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":28010:28018  _lpToken */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":27973:28165  PoolInfo({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":28049:28060  _allocPoint */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":27973:28165  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":28096:28111  lastRewardBlock */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":27973:28165  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":28148:28149  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27973:28165  PoolInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27945:28176  poolInfo.push(... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27712:28184  {... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27624:28184  function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24347:24382  address public DDTMasterchefAddress */\n    tag_77:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":28662:28764  function setMigrator(IMigratorChef _migrator) public onlyOwner {... */\n    tag_83:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_269\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_269:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_270\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_270:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap1\n      tag_189\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"contracts/NFTMasterChef.sol\":28747:28756  _migrator */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":28736:28744  migrator */\n      0x05\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28736:28756  migrator = _migrator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28662:28764  function setMigrator(IMigratorChef _migrator) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":36342:36451  function updatePowerPerBlock(uint256 newAmount) public onlyOwner {... */\n    tag_86:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_275\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_275:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_276\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_276:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_189\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"contracts/NFTMasterChef.sol\":36434:36443  newAmount */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":36418:36431  PowerPerBlock */\n      0x03\n        /* \"contracts/NFTMasterChef.sol\":36418:36443  PowerPerBlock = newAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":36342:36451  function updatePowerPerBlock(uint256 newAmount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":33264:34112  function enterStaking(uint256 _amount) public {... */\n    tag_89:\n        /* \"contracts/NFTMasterChef.sol\":33339:33340  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33329:33336  _amount */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33329:33340  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33321:33359  require(_amount > 0, \"Amount is zero\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_281:\n        /* \"contracts/NFTMasterChef.sol\":33372:33393  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33396:33404  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":33405:33406  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33396:33407  poolInfo[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_284\n      jumpi\n      tag_285\n      tag_194\n      jump\t// in\n    tag_285:\n    tag_284:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":33372:33407  PoolInfo storage pool = poolInfo[0] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33418:33439  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33442:33450  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":33442:33453  userInfo[0] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33451:33452  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":33442:33453  userInfo[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33442:33474  userInfo[0][address(msg.sender)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33462:33472  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33442:33474  userInfo[0][address(msg.sender)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33418:33474  UserInfo storage user = userInfo[0][address(msg.sender)] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33495:33508  updatePool(0) */\n      tag_287\n        /* \"contracts/NFTMasterChef.sol\":33506:33507  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33495:33505  updatePool */\n      tag_105\n        /* \"contracts/NFTMasterChef.sol\":33495:33508  updatePool(0) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/NFTMasterChef.sol\":33537:33538  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33523:33527  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33523:33534  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33523:33538  user.amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33519:33801  if (user.amount > 0) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":33555:33570  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33573:33642  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_289\n        /* \"contracts/NFTMasterChef.sol\":33626:33630  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33626:33641  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33573:33621  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_290\n        /* \"contracts/NFTMasterChef.sol\":33616:33620  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":33573:33611  user.amount.mul(pool.accPowerPerShare) */\n      tag_291\n        /* \"contracts/NFTMasterChef.sol\":33589:33593  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":33589:33610  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33573:33577  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":33573:33584  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33573:33588  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33573:33611  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_291:\n        /* \"contracts/NFTMasterChef.sol\":33573:33615  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33573:33621  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_290:\n        /* \"contracts/NFTMasterChef.sol\":33573:33625  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33573:33642  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_289:\n        /* \"contracts/NFTMasterChef.sol\":33555:33642  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33670:33671  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33660:33667  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33660:33671  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33657:33790  if(pending > 0) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":33728:33774  powerBalance[address(msg.sender)].add(pending) */\n      tag_293\n        /* \"contracts/NFTMasterChef.sol\":33766:33773  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33728:33740  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":33728:33761  powerBalance[address(msg.sender)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33749:33759  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33728:33761  powerBalance[address(msg.sender)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33728:33765  powerBalance[address(msg.sender)].add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33728:33774  powerBalance[address(msg.sender)].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_293:\n        /* \"contracts/NFTMasterChef.sol\":33692:33704  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":33692:33725  powerBalance[address(msg.sender)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33713:33723  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33692:33725  powerBalance[address(msg.sender)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33692:33774  powerBalance[address(msg.sender)] = powerBalance[address(msg.sender)].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33657:33790  if(pending > 0) {... */\n    tag_292:\n        /* \"contracts/NFTMasterChef.sol\":33540:33801  {... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33519:33801  if (user.amount > 0) {... */\n    tag_288:\n        /* \"contracts/NFTMasterChef.sol\":33824:33825  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33814:33821  _amount */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":33814:33825  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33811:33981  if(_amount > 0) {... */\n      iszero\n      tag_294\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":33842:33916  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_295\n        /* \"contracts/NFTMasterChef.sol\":33880:33890  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33901:33905  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":33908:33915  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33842:33846  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33842:33854  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":33842:33871  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_296\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33842:33916  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_295:\n        /* \"contracts/NFTMasterChef.sol\":33945:33969  user.amount.add(_amount) */\n      tag_297\n        /* \"contracts/NFTMasterChef.sol\":33961:33968  _amount */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":33945:33949  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33945:33956  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33945:33960  user.amount.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33945:33969  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_297:\n        /* \"contracts/NFTMasterChef.sol\":33931:33935  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33931:33942  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":33931:33969  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33811:33981  if(_amount > 0) {... */\n    tag_294:\n        /* \"contracts/NFTMasterChef.sol\":34009:34057  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_298\n        /* \"contracts/NFTMasterChef.sol\":34052:34056  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":34009:34047  user.amount.mul(pool.accPowerPerShare) */\n      tag_299\n        /* \"contracts/NFTMasterChef.sol\":34025:34029  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34025:34046  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34009:34013  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34009:34020  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34009:34024  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34009:34047  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_299:\n        /* \"contracts/NFTMasterChef.sol\":34009:34051  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34009:34057  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_298:\n        /* \"contracts/NFTMasterChef.sol\":33991:33995  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33991:34006  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":33991:34057  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34093:34094  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34081:34091  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34073:34104  Deposit(msg.sender, 0, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTMasterChef.sol\":34096:34103  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":34073:34104  Deposit(msg.sender, 0, _amount) */\n      mload(0x40)\n      tag_300\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":33310:34112  {... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33264:34112  function enterStaking(uint256 _amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":32424:33211  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_92:\n        /* \"contracts/NFTMasterChef.sol\":32510:32511  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32502:32506  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32502:32511  _pid != 0 */\n      sub\n        /* \"contracts/NFTMasterChef.sol\":32493:32543  require (_pid != 0, \"withdraw Power by unstaking\") */\n      tag_302\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_302:\n        /* \"contracts/NFTMasterChef.sol\":32556:32577  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32580:32588  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":32589:32593  _pid */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32580:32594  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_305\n      jumpi\n      tag_306\n      tag_194\n      jump\t// in\n    tag_306:\n    tag_305:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":32556:32594  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32605:32626  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32629:32637  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":32629:32643  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32638:32642  _pid */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32629:32643  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32629:32655  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32644:32654  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32629:32655  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32605:32655  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32689:32696  _amount */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32674:32678  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32674:32685  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32674:32696  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":32666:32719  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap1\n      tag_198\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_308:\n        /* \"contracts/NFTMasterChef.sol\":32730:32746  updatePool(_pid) */\n      tag_310\n        /* \"contracts/NFTMasterChef.sol\":32741:32745  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32730:32740  updatePool */\n      tag_105\n        /* \"contracts/NFTMasterChef.sol\":32730:32746  updatePool(_pid) */\n      jump\t// in\n    tag_310:\n        /* \"contracts/NFTMasterChef.sol\":32757:32772  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32775:32844  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_311\n        /* \"contracts/NFTMasterChef.sol\":32828:32832  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32828:32843  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32775:32823  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_312\n        /* \"contracts/NFTMasterChef.sol\":32818:32822  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":32775:32813  user.amount.mul(pool.accPowerPerShare) */\n      tag_313\n        /* \"contracts/NFTMasterChef.sol\":32791:32795  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":32791:32812  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32775:32779  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":32775:32786  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32775:32790  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32775:32813  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_313:\n        /* \"contracts/NFTMasterChef.sol\":32775:32817  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32775:32823  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_312:\n        /* \"contracts/NFTMasterChef.sol\":32775:32827  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32775:32844  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_311:\n        /* \"contracts/NFTMasterChef.sol\":32757:32844  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32868:32869  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32858:32865  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32858:32869  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":32855:32961  if(pending > 0){... */\n      iszero\n      tag_314\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":32912:32949  powerBalance[msg.sender].add(pending) */\n      tag_315\n        /* \"contracts/NFTMasterChef.sol\":32941:32948  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32912:32924  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":32912:32936  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32925:32935  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32912:32936  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32912:32940  powerBalance[msg.sender].add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32912:32949  powerBalance[msg.sender].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_315:\n        /* \"contracts/NFTMasterChef.sol\":32885:32897  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":32885:32909  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32898:32908  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32885:32909  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32885:32949  powerBalance[msg.sender] = powerBalance[msg.sender].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32855:32961  if(pending > 0){... */\n    tag_314:\n        /* \"contracts/NFTMasterChef.sol\":32985:33009  user.amount.sub(_amount) */\n      tag_316\n        /* \"contracts/NFTMasterChef.sol\":33001:33008  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32985:32989  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32985:32996  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32985:33000  user.amount.sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32985:33009  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_316:\n        /* \"contracts/NFTMasterChef.sol\":32971:32975  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32971:32982  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":32971:33009  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33038:33086  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_317\n        /* \"contracts/NFTMasterChef.sol\":33081:33085  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":33038:33076  user.amount.mul(pool.accPowerPerShare) */\n      tag_318\n        /* \"contracts/NFTMasterChef.sol\":33054:33058  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33054:33075  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33038:33042  user */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33038:33049  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33038:33053  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33038:33076  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_318:\n        /* \"contracts/NFTMasterChef.sol\":33038:33080  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33038:33086  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_317:\n        /* \"contracts/NFTMasterChef.sol\":33020:33024  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33020:33035  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":33020:33086  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33097:33152  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_319\n        /* \"contracts/NFTMasterChef.sol\":33131:33141  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33144:33151  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33097:33101  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33097:33109  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":33097:33122  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_212\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33097:33152  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_319:\n        /* \"contracts/NFTMasterChef.sol\":33189:33193  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":33177:33187  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33168:33203  Withdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTMasterChef.sol\":33195:33202  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":33168:33203  Withdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_320\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":32480:33211  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32424:33211  function withdraw(uint256 _pid, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":28887:29378  function migrate(uint256 _pid) public {... */\n    tag_95:\n        /* \"contracts/NFTMasterChef.sol\":28973:28974  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28944:28975  address(migrator) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28952:28960  migrator */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28944:28975  address(migrator) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NFTMasterChef.sol\":28936:29000  require(address(migrator) != address(0), 'migrate: no migrator') */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap1\n      tag_324\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n        /* \"contracts/NFTMasterChef.sol\":29011:29032  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29035:29043  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":29044:29048  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":29035:29049  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_325\n      jumpi\n      tag_326\n      tag_194\n      jump\t// in\n    tag_326:\n    tag_325:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":29011:29049  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29060:29074  IERC20 lpToken */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29077:29081  pool */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":29077:29089  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":29060:29089  IERC20 lpToken = pool.lpToken */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29100:29111  uint256 bal */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29114:29121  lpToken */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":29114:29131  lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":29140:29144  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":29114:29146  lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_328:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_330\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_330:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_331\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_331:\n        /* \"contracts/NFTMasterChef.sol\":29100:29146  uint256 bal = lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29157:29200  lpToken.safeApprove(address(migrator), bal) */\n      tag_332\n        /* \"contracts/NFTMasterChef.sol\":29185:29193  migrator */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":29196:29199  bal */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":29157:29164  lpToken */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":29157:29176  lpToken.safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_333\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29157:29200  lpToken.safeApprove(address(migrator), bal) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_332:\n        /* \"contracts/NFTMasterChef.sol\":29211:29228  IERC20 newLpToken */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29231:29239  migrator */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":29231:29247  migrator.migrate */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xce5494bb\n        /* \"contracts/NFTMasterChef.sol\":29248:29255  lpToken */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":29231:29256  migrator.migrate(lpToken) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_334:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_336\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_336:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_337\n      swap2\n      swap1\n      tag_338\n      jump\t// in\n    tag_337:\n        /* \"contracts/NFTMasterChef.sol\":29211:29256  IERC20 newLpToken = migrator.migrate(lpToken) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29282:29292  newLpToken */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":29282:29302  newLpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":29311:29315  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":29282:29317  newLpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_339\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_339:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_341\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_341:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_342\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_342:\n        /* \"contracts/NFTMasterChef.sol\":29275:29278  bal */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":29275:29317  bal == newLpToken.balanceOf(address(this)) */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":29267:29334  require(bal == newLpToken.balanceOf(address(this)), 'migrate: bad') */\n      tag_343\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap1\n      tag_345\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_343:\n        /* \"contracts/NFTMasterChef.sol\":29360:29370  newLpToken */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":29345:29349  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":29345:29357  pool.lpToken */\n      0x00\n      add\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29345:29370  pool.lpToken = newLpToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28925:29378  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28887:29378  function migrate(uint256 _pid) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24276:24301  uint256 public startBlock */\n    tag_97:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25615:25821  function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {... */\n    tag_102:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_347\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_347:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_348\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_348:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_350\n      swap1\n      tag_189\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_349:\n        /* \"contracts/NFTMasterChef.sol\":25689:25697  nftsInfo */\n      0x01\n        /* \"contracts/NFTMasterChef.sol\":25717:25802  NFTsInfo({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":25750:25754  _NFT */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":25717:25802  NFTsInfo({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":25780:25786  _power */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25717:25802  NFTsInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25689:25813  nftsInfo.push(... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25615:25821  function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":30769:31459  function updatePool(uint256 _pid) public {... */\n    tag_105:\n        /* \"contracts/NFTMasterChef.sol\":30821:30842  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30845:30853  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":30854:30858  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":30845:30859  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_354\n      jumpi\n      tag_355\n      tag_194\n      jump\t// in\n    tag_355:\n    tag_354:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":30821:30859  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30890:30894  pool */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":30890:30910  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30874:30886  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":30874:30910  block.number <= pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":30870:30945  if (block.number <= pool.lastRewardBlock) {... */\n      tag_357\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":30927:30934  return; */\n      pop\n      jump(tag_353)\n        /* \"contracts/NFTMasterChef.sol\":30870:30945  if (block.number <= pool.lastRewardBlock) {... */\n    tag_357:\n        /* \"contracts/NFTMasterChef.sol\":30955:30971  uint256 lpSupply */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30974:30978  pool */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30974:30986  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":30974:30996  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":31005:31009  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":30974:31011  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_358\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_358:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_360\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_360:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_361\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_361:\n        /* \"contracts/NFTMasterChef.sol\":30955:31011  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31038:31039  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31026:31034  lpSupply */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31026:31039  lpSupply <= 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":31022:31124  if (lpSupply <= 0) {... */\n      tag_362\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":31079:31091  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":31056:31060  pool */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":31056:31076  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTMasterChef.sol\":31056:31091  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31106:31113  return; */\n      pop\n      pop\n      jump(tag_353)\n        /* \"contracts/NFTMasterChef.sol\":31022:31124  if (lpSupply <= 0) {... */\n    tag_362:\n        /* \"contracts/NFTMasterChef.sol\":31134:31152  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31155:31204  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_363\n        /* \"contracts/NFTMasterChef.sol\":31169:31173  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":31169:31189  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31191:31203  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":31155:31168  getMultiplier */\n      tag_150\n        /* \"contracts/NFTMasterChef.sol\":31155:31204  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_363:\n        /* \"contracts/NFTMasterChef.sol\":31134:31204  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31215:31234  uint256 PowerReward */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31237:31308  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_364\n        /* \"contracts/NFTMasterChef.sol\":31292:31307  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":31237:31287  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      tag_365\n        /* \"contracts/NFTMasterChef.sol\":31271:31275  pool */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":31271:31286  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31237:31266  multiplier.mul(PowerPerBlock) */\n      tag_366\n        /* \"contracts/NFTMasterChef.sol\":31252:31265  PowerPerBlock */\n      sload(0x03)\n        /* \"contracts/NFTMasterChef.sol\":31237:31247  multiplier */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":31237:31251  multiplier.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31237:31266  multiplier.mul(PowerPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_366:\n        /* \"contracts/NFTMasterChef.sol\":31237:31270  multiplier.mul(PowerPerBlock).mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31237:31287  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_365:\n        /* \"contracts/NFTMasterChef.sol\":31237:31291  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31237:31308  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_364:\n        /* \"contracts/NFTMasterChef.sol\":31215:31308  uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31343:31405  pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      tag_367\n        /* \"contracts/NFTMasterChef.sol\":31369:31404  PowerReward.mul(1e12).div(lpSupply) */\n      tag_368\n        /* \"contracts/NFTMasterChef.sol\":31395:31403  lpSupply */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31369:31390  PowerReward.mul(1e12) */\n      tag_369\n        /* \"contracts/NFTMasterChef.sol\":31385:31389  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":31369:31380  PowerReward */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31369:31384  PowerReward.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31369:31390  PowerReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_369:\n        /* \"contracts/NFTMasterChef.sol\":31369:31394  PowerReward.mul(1e12).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31369:31404  PowerReward.mul(1e12).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_368:\n        /* \"contracts/NFTMasterChef.sol\":31343:31347  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31343:31364  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31343:31368  pool.accPowerPerShare.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31343:31405  pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_367:\n        /* \"contracts/NFTMasterChef.sol\":31319:31323  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31319:31340  pool.accPowerPerShare */\n      0x03\n      add\n        /* \"contracts/NFTMasterChef.sol\":31319:31405  pool.accPowerPerShare = pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31439:31451  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":31416:31420  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31416:31436  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTMasterChef.sol\":31416:31451  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30810:31459  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30769:31459  function updatePool(uint256 _pid) public {... */\n    tag_353:\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":35974:36330  function emergencyWithdraw(uint256 _pid) public {... */\n    tag_108:\n        /* \"contracts/NFTMasterChef.sol\":36033:36054  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":36057:36065  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":36066:36070  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":36057:36071  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_371\n      jumpi\n      tag_372\n      tag_194\n      jump\t// in\n    tag_372:\n    tag_371:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":36033:36071  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":36082:36103  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":36106:36114  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":36106:36120  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":36115:36119  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":36106:36120  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":36106:36132  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":36121:36131  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":36106:36132  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":36082:36132  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":36143:36202  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      tag_374\n        /* \"contracts/NFTMasterChef.sol\":36177:36187  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":36190:36194  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":36190:36201  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":36143:36147  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":36143:36155  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":36143:36168  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_212\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":36143:36202  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_374:\n        /* \"contracts/NFTMasterChef.sol\":36248:36252  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":36236:36246  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":36218:36266  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/NFTMasterChef.sol\":36254:36258  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":36254:36265  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":36218:36266  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      mload(0x40)\n      tag_375\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_375:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":36291:36292  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":36277:36281  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":36277:36288  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":36277:36292  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":36321:36322  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":36303:36307  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":36303:36318  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":36303:36322  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":36022:36330  {... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35974:36330  function emergencyWithdraw(uint256 _pid) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25335:25481  function updateDDTMasterchefAddress(address _DDTMasterchefAddress) public onlyOwner{... */\n    tag_111:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_377\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_377:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_378\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_378:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_380\n      swap1\n      tag_189\n      jump\t// in\n    tag_380:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_379:\n        /* \"contracts/NFTMasterChef.sol\":25452:25473  _DDTMasterchefAddress */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":25429:25449  DDTMasterchefAddress */\n      0x0b\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25429:25473  DDTMasterchefAddress = _DDTMasterchefAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25335:25481  function updateDDTMasterchefAddress(address _DDTMasterchefAddress) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23657:23685  uint256 public PowerPerBlock */\n    tag_113:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":27229:27352  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {... */\n    tag_117:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_383\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_383:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_384\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_384:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_386\n      swap1\n      tag_189\n      jump\t// in\n    tag_386:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_385:\n        /* \"contracts/NFTMasterChef.sol\":27328:27344  multiplierNumber */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":27309:27325  BONUS_MULTIPLIER */\n      0x04\n        /* \"contracts/NFTMasterChef.sol\":27309:27344  BONUS_MULTIPLIER = multiplierNumber */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27229:27352  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23533:23559  NFTsInfo[] public nftsInfo */\n    tag_120:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_388\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_388:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":30513:30693  function massUpdatePools() public {... */\n    tag_124:\n        /* \"contracts/NFTMasterChef.sol\":30558:30572  uint256 length */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30575:30583  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":30575:30590  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30558:30590  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30606:30617  uint256 pid */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30601:30686  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_391:\n        /* \"contracts/NFTMasterChef.sol\":30629:30635  length */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30623:30626  pid */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30623:30635  pid < length */\n      lt\n        /* \"contracts/NFTMasterChef.sol\":30601:30686  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_392\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":30659:30674  updatePool(pid) */\n      tag_394\n        /* \"contracts/NFTMasterChef.sol\":30670:30673  pid */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30659:30669  updatePool */\n      tag_105\n        /* \"contracts/NFTMasterChef.sol\":30659:30674  updatePool(pid) */\n      jump\t// in\n    tag_394:\n        /* \"contracts/NFTMasterChef.sol\":30637:30642  ++pid */\n      dup1\n      tag_395\n      swap1\n      tag_396\n      jump\t// in\n    tag_395:\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30601:30686  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_391)\n    tag_392:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30547:30693  {... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30513:30693  function massUpdatePools() public {... */\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":28281:28586  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n    tag_128:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_398\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_398:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_399\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_399:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_400\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_401\n      swap1\n      tag_189\n      jump\t// in\n    tag_401:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_400:\n        /* \"contracts/NFTMasterChef.sol\":28380:28391  _withUpdate */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":28376:28437  if (_withUpdate) {... */\n      iszero\n      tag_403\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":28408:28425  massUpdatePools() */\n      tag_404\n        /* \"contracts/NFTMasterChef.sol\":28408:28423  massUpdatePools */\n      tag_124\n        /* \"contracts/NFTMasterChef.sol\":28408:28425  massUpdatePools() */\n      jump\t// in\n    tag_404:\n        /* \"contracts/NFTMasterChef.sol\":28376:28437  if (_withUpdate) {... */\n    tag_403:\n        /* \"contracts/NFTMasterChef.sol\":28465:28528  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_405\n        /* \"contracts/NFTMasterChef.sol\":28516:28527  _allocPoint */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":28465:28511  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_406\n        /* \"contracts/NFTMasterChef.sol\":28485:28493  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":28494:28498  _pid */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":28485:28499  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_407\n      jumpi\n      tag_408\n      tag_194\n      jump\t// in\n    tag_408:\n    tag_407:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":28485:28510  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":28465:28480  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":28465:28484  totalAllocPoint.sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":28465:28511  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_406:\n        /* \"contracts/NFTMasterChef.sol\":28465:28515  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":28465:28528  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_405:\n        /* \"contracts/NFTMasterChef.sol\":28447:28462  totalAllocPoint */\n      0x08\n        /* \"contracts/NFTMasterChef.sol\":28447:28528  totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28567:28578  _allocPoint */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":28539:28547  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":28548:28552  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":28539:28553  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_410\n      jumpi\n      tag_411\n      tag_194\n      jump\t// in\n    tag_411:\n    tag_410:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":28539:28564  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":28539:28578  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28281:28586  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":20756:20859  function renounceOwnership() public virtual onlyOwner {... */\n    tag_130:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_414\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_414:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_415\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_415:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_416\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_417\n      swap1\n      tag_189\n      jump\t// in\n    tag_417:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_416:\n        /* \"contracts/NFTMasterChef.sol\":20821:20851  _transferOwnership(address(0)) */\n      tag_419\n        /* \"contracts/NFTMasterChef.sol\":20848:20849  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":20821:20839  _transferOwnership */\n      tag_420\n        /* \"contracts/NFTMasterChef.sol\":20821:20851  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_419:\n        /* \"contracts/NFTMasterChef.sol\":20756:20859  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23880:23909  IMigratorChef public migrator */\n    tag_132:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24310:24340  address public NFTStakeAddress */\n    tag_136:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23740:23775  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_139:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25489:25607  function getPowerBalance(address account) public view returns(uint256) {... */\n    tag_143:\n        /* \"contracts/NFTMasterChef.sol\":25551:25558  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25578:25590  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":25578:25599  powerBalance[account] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25591:25598  account */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25578:25599  powerBalance[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":25571:25599  return powerBalance[account] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25489:25607  function getPowerBalance(address account) public view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":20105:20192  function owner() public view virtual returns (address) {... */\n    tag_146:\n        /* \"contracts/NFTMasterChef.sol\":20151:20158  address */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":20178:20184  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20171:20184  return _owner */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":20105:20192  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":29454:29598  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {... */\n    tag_150:\n        /* \"contracts/NFTMasterChef.sol\":29526:29533  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29554:29590  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      tag_424\n        /* \"contracts/NFTMasterChef.sol\":29573:29589  BONUS_MULTIPLIER */\n      sload(0x04)\n        /* \"contracts/NFTMasterChef.sol\":29554:29568  _to.sub(_from) */\n      tag_425\n        /* \"contracts/NFTMasterChef.sol\":29562:29567  _from */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29554:29557  _to */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29554:29561  _to.sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29554:29568  _to.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_425:\n        /* \"contracts/NFTMasterChef.sol\":29554:29572  _to.sub(_from).mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29554:29590  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_424:\n        /* \"contracts/NFTMasterChef.sol\":29547:29590  return _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29454:29598  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24025:24089  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_155:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25829:25945  function updateNFT(uint256 level, uint256 _power) public onlyOwner {... */\n    tag_160:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_427\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_427:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_428\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_428:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_429\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_430\n      swap1\n      tag_189\n      jump\t// in\n    tag_430:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_429:\n        /* \"contracts/NFTMasterChef.sol\":25931:25937  _power */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":25907:25915  nftsInfo */\n      0x01\n        /* \"contracts/NFTMasterChef.sol\":25916:25921  level */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25907:25922  nftsInfo[level] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_432\n      jumpi\n      tag_433\n      tag_194\n      jump\t// in\n    tag_433:\n    tag_432:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":25907:25928  nftsInfo[level].power */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":25907:25937  nftsInfo[level].power = _power */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25829:25945  function updateNFT(uint256 level, uint256 _power) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23593:23610  IERC20 public DDT */\n    tag_162:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":34120:35094  function enterStakingCompund(uint256 _amount, address _account) public {... */\n    tag_167:\n        /* \"contracts/NFTMasterChef.sol\":34220:34221  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34210:34217  _amount */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34210:34221  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":34202:34240  require(_amount > 0, \"Amount is zero\") */\n      tag_436\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_437\n      swap1\n      tag_283\n      jump\t// in\n    tag_437:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_436:\n        /* \"contracts/NFTMasterChef.sol\":34273:34288  NFTStakeAddress */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":34259:34288  msg.sender == NFTStakeAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":34259:34269  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34259:34288  msg.sender == NFTStakeAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":34259:34326  msg.sender == NFTStakeAddress || msg.sender == DDTMasterchefAddress */\n      dup1\n      tag_438\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34306:34326  DDTMasterchefAddress */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":34292:34326  msg.sender == DDTMasterchefAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":34292:34302  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34292:34326  msg.sender == DDTMasterchefAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":34259:34326  msg.sender == NFTStakeAddress || msg.sender == DDTMasterchefAddress */\n    tag_438:\n        /* \"contracts/NFTMasterChef.sol\":34251:34351  require(msg.sender == NFTStakeAddress || msg.sender == DDTMasterchefAddress, \"Caller is not family\") */\n      tag_439\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_440\n      swap1\n      tag_441\n      jump\t// in\n    tag_440:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_439:\n        /* \"contracts/NFTMasterChef.sol\":34362:34383  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34386:34394  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":34395:34396  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34386:34397  poolInfo[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_442\n      jumpi\n      tag_443\n      tag_194\n      jump\t// in\n    tag_443:\n    tag_442:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":34362:34397  PoolInfo storage pool = poolInfo[0] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34408:34429  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34432:34440  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":34432:34443  userInfo[0] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34441:34442  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":34432:34443  userInfo[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34432:34462  userInfo[0][address(_account)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34452:34460  _account */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34432:34462  userInfo[0][address(_account)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34408:34462  UserInfo storage user = userInfo[0][address(_account)] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34483:34496  updatePool(0) */\n      tag_445\n        /* \"contracts/NFTMasterChef.sol\":34494:34495  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34483:34493  updatePool */\n      tag_105\n        /* \"contracts/NFTMasterChef.sol\":34483:34496  updatePool(0) */\n      jump\t// in\n    tag_445:\n        /* \"contracts/NFTMasterChef.sol\":34525:34526  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34511:34515  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34511:34522  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34511:34526  user.amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":34507:34785  if (user.amount > 0) {... */\n      iszero\n      tag_446\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":34543:34558  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34561:34630  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_447\n        /* \"contracts/NFTMasterChef.sol\":34614:34618  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34614:34629  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34561:34609  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_448\n        /* \"contracts/NFTMasterChef.sol\":34604:34608  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":34561:34599  user.amount.mul(pool.accPowerPerShare) */\n      tag_449\n        /* \"contracts/NFTMasterChef.sol\":34577:34581  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":34577:34598  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34561:34565  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":34561:34572  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34561:34576  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34561:34599  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_449:\n        /* \"contracts/NFTMasterChef.sol\":34561:34603  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34561:34609  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_448:\n        /* \"contracts/NFTMasterChef.sol\":34561:34613  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34561:34630  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_447:\n        /* \"contracts/NFTMasterChef.sol\":34543:34630  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34658:34659  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34648:34655  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34648:34659  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":34645:34774  if(pending > 0) {... */\n      iszero\n      tag_450\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":34714:34758  powerBalance[address(_account)].add(pending) */\n      tag_451\n        /* \"contracts/NFTMasterChef.sol\":34750:34757  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34714:34726  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":34714:34745  powerBalance[address(_account)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34735:34743  _account */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":34714:34745  powerBalance[address(_account)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34714:34749  powerBalance[address(_account)].add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34714:34758  powerBalance[address(_account)].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_451:\n        /* \"contracts/NFTMasterChef.sol\":34680:34692  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":34680:34711  powerBalance[address(_account)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34701:34709  _account */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":34680:34711  powerBalance[address(_account)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34680:34758  powerBalance[address(_account)] = powerBalance[address(_account)].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34645:34774  if(pending > 0) {... */\n    tag_450:\n        /* \"contracts/NFTMasterChef.sol\":34528:34785  {... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34507:34785  if (user.amount > 0) {... */\n    tag_446:\n        /* \"contracts/NFTMasterChef.sol\":34808:34809  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34798:34805  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34798:34809  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":34795:34965  if(_amount > 0) {... */\n      iszero\n      tag_452\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":34826:34900  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_453\n        /* \"contracts/NFTMasterChef.sol\":34864:34874  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34885:34889  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":34892:34899  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":34826:34830  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":34826:34838  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":34826:34855  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_296\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34826:34900  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_453:\n        /* \"contracts/NFTMasterChef.sol\":34929:34953  user.amount.add(_amount) */\n      tag_454\n        /* \"contracts/NFTMasterChef.sol\":34945:34952  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34929:34933  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34929:34940  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34929:34944  user.amount.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34929:34953  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_454:\n        /* \"contracts/NFTMasterChef.sol\":34915:34919  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34915:34926  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":34915:34953  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34795:34965  if(_amount > 0) {... */\n    tag_452:\n        /* \"contracts/NFTMasterChef.sol\":34993:35041  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_455\n        /* \"contracts/NFTMasterChef.sol\":35036:35040  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":34993:35031  user.amount.mul(pool.accPowerPerShare) */\n      tag_456\n        /* \"contracts/NFTMasterChef.sol\":35009:35013  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":35009:35030  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34993:34997  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34993:35004  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34993:35008  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34993:35031  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_456:\n        /* \"contracts/NFTMasterChef.sol\":34993:35035  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34993:35041  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_455:\n        /* \"contracts/NFTMasterChef.sol\":34975:34979  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34975:34990  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":34975:35041  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35075:35076  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35065:35073  _account */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":35057:35086  Deposit(_account, 0, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTMasterChef.sol\":35078:35085  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":35057:35086  Deposit(_account, 0, _amount) */\n      mload(0x40)\n      tag_457\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_457:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":34191:35094  {... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34120:35094  function enterStakingCompund(uint256 _amount, address _account) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24391:24438  mapping(address => uint256) public powerBalance */\n    tag_170:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":31529:32372  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_174:\n        /* \"contracts/NFTMasterChef.sol\":31612:31613  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31604:31608  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":31604:31613  _pid != 0 */\n      sub\n        /* \"contracts/NFTMasterChef.sol\":31595:31642  require (_pid != 0, \"deposit Power by staking\") */\n      tag_459\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_460\n      swap1\n      tag_461\n      jump\t// in\n    tag_460:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_459:\n        /* \"contracts/NFTMasterChef.sol\":31671:31672  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31661:31668  _amount */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31661:31672  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":31653:31691  require(_amount > 0, \"Amount is zero\") */\n      tag_462\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_463\n      swap1\n      tag_283\n      jump\t// in\n    tag_463:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_462:\n        /* \"contracts/NFTMasterChef.sol\":31704:31725  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31728:31736  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":31737:31741  _pid */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":31728:31742  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_464\n      jumpi\n      tag_465\n      tag_194\n      jump\t// in\n    tag_465:\n    tag_464:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":31704:31742  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31753:31774  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31777:31785  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":31777:31791  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31786:31790  _pid */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31777:31791  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":31777:31803  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31792:31802  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31777:31803  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":31753:31803  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31814:31830  updatePool(_pid) */\n      tag_467\n        /* \"contracts/NFTMasterChef.sol\":31825:31829  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31814:31824  updatePool */\n      tag_105\n        /* \"contracts/NFTMasterChef.sol\":31814:31830  updatePool(_pid) */\n      jump\t// in\n    tag_467:\n        /* \"contracts/NFTMasterChef.sol\":31859:31860  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31845:31849  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31845:31856  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31845:31860  user.amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":31841:32104  if (user.amount > 0) {... */\n      iszero\n      tag_468\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":31877:31892  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31895:31964  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_469\n        /* \"contracts/NFTMasterChef.sol\":31948:31952  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":31948:31963  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31895:31943  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_470\n        /* \"contracts/NFTMasterChef.sol\":31938:31942  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":31895:31933  user.amount.mul(pool.accPowerPerShare) */\n      tag_471\n        /* \"contracts/NFTMasterChef.sol\":31911:31915  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":31911:31932  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31895:31899  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":31895:31906  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31895:31910  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31895:31933  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_471:\n        /* \"contracts/NFTMasterChef.sol\":31895:31937  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31895:31943  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_470:\n        /* \"contracts/NFTMasterChef.sol\":31895:31947  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31895:31964  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_469:\n        /* \"contracts/NFTMasterChef.sol\":31877:31964  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31992:31993  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31982:31989  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31982:31993  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":31979:32093  if(pending > 0){... */\n      iszero\n      tag_472\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":32040:32077  powerBalance[msg.sender].add(pending) */\n      tag_473\n        /* \"contracts/NFTMasterChef.sol\":32069:32076  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32040:32052  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":32040:32064  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32053:32063  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32040:32064  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32040:32068  powerBalance[msg.sender].add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32040:32077  powerBalance[msg.sender].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_473:\n        /* \"contracts/NFTMasterChef.sol\":32013:32025  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":32013:32037  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32026:32036  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32013:32037  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32013:32077  powerBalance[msg.sender] = powerBalance[msg.sender].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31979:32093  if(pending > 0){... */\n    tag_472:\n        /* \"contracts/NFTMasterChef.sol\":31862:32104  {... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31841:32104  if (user.amount > 0) {... */\n    tag_468:\n        /* \"contracts/NFTMasterChef.sol\":32114:32188  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_474\n        /* \"contracts/NFTMasterChef.sol\":32152:32162  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32173:32177  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":32180:32187  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32114:32118  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32114:32126  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":32114:32143  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_296\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32114:32188  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_474:\n        /* \"contracts/NFTMasterChef.sol\":32213:32237  user.amount.add(_amount) */\n      tag_475\n        /* \"contracts/NFTMasterChef.sol\":32229:32236  _amount */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32213:32217  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32213:32224  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32213:32228  user.amount.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32213:32237  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_475:\n        /* \"contracts/NFTMasterChef.sol\":32199:32203  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32199:32210  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":32199:32237  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32266:32314  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_476\n        /* \"contracts/NFTMasterChef.sol\":32309:32313  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":32266:32304  user.amount.mul(pool.accPowerPerShare) */\n      tag_477\n        /* \"contracts/NFTMasterChef.sol\":32282:32286  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32282:32303  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32266:32270  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32266:32277  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32266:32281  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32266:32304  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_477:\n        /* \"contracts/NFTMasterChef.sol\":32266:32308  user.amount.mul(pool.accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32266:32314  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_476:\n        /* \"contracts/NFTMasterChef.sol\":32248:32252  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32248:32263  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":32248:32314  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32350:32354  _pid */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32338:32348  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32330:32364  Deposit(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTMasterChef.sol\":32356:32363  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32330:32364  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_478\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_478:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":31584:32372  {... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31529:32372  function deposit(uint256 _pid, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":21014:21215  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_177:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_480\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_185\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_480:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_481\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_481:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_482\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_483\n      swap1\n      tag_189\n      jump\t// in\n    tag_483:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_482:\n        /* \"contracts/NFTMasterChef.sol\":21123:21124  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":21103:21125  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":21103:21111  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21103:21125  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NFTMasterChef.sol\":21095:21168  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_485\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_486\n      swap1\n      tag_487\n      jump\t// in\n    tag_486:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_485:\n        /* \"contracts/NFTMasterChef.sol\":21179:21207  _transferOwnership(newOwner) */\n      tag_488\n        /* \"contracts/NFTMasterChef.sol\":21198:21206  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21179:21197  _transferOwnership */\n      tag_420\n        /* \"contracts/NFTMasterChef.sol\":21179:21207  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_488:\n        /* \"contracts/NFTMasterChef.sol\":21014:21215  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":29663:30430  function pendingPower(uint256 _pid, address _user) external view returns (uint256){... */\n    tag_180:\n        /* \"contracts/NFTMasterChef.sol\":29737:29744  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29756:29777  PoolInfo storage pool */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":29780:29788  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":29789:29793  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":29780:29794  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_490\n      jumpi\n      tag_491\n      tag_194\n      jump\t// in\n    tag_491:\n    tag_490:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":29756:29794  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29805:29826  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29829:29837  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":29829:29843  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29838:29842  _pid */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":29829:29843  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":29829:29850  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29844:29849  _user */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29829:29850  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":29805:29850  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29861:29885  uint256 accPowerPerShare */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29888:29892  pool */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":29888:29909  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29861:29909  uint256 accPowerPerShare = pool.accPowerPerShare */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29920:29936  uint256 lpSupply */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29939:29943  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":29939:29951  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":29939:29961  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":29970:29974  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":29939:29976  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_493\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_493:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_495\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_495:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_496\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_496:\n        /* \"contracts/NFTMasterChef.sol\":29920:29976  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30006:30010  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":30006:30026  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29991:30003  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":29991:30026  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":29991:30043  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_497\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30042:30043  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30030:30038  lpSupply */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30030:30043  lpSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":29991:30043  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_497:\n        /* \"contracts/NFTMasterChef.sol\":29987:30341  if (block.number > pool.lastRewardBlock && lpSupply != 0) {... */\n      iszero\n      tag_498\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":30060:30078  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30081:30130  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_499\n        /* \"contracts/NFTMasterChef.sol\":30095:30099  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":30095:30115  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30117:30129  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":30081:30094  getMultiplier */\n      tag_150\n        /* \"contracts/NFTMasterChef.sol\":30081:30130  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_499:\n        /* \"contracts/NFTMasterChef.sol\":30060:30130  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30145:30164  uint256 PowerReward */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30167:30238  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_500\n        /* \"contracts/NFTMasterChef.sol\":30222:30237  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":30167:30217  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      tag_501\n        /* \"contracts/NFTMasterChef.sol\":30201:30205  pool */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":30201:30216  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30167:30196  multiplier.mul(PowerPerBlock) */\n      tag_502\n        /* \"contracts/NFTMasterChef.sol\":30182:30195  PowerPerBlock */\n      sload(0x03)\n        /* \"contracts/NFTMasterChef.sol\":30167:30177  multiplier */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":30167:30181  multiplier.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30167:30196  multiplier.mul(PowerPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_502:\n        /* \"contracts/NFTMasterChef.sol\":30167:30200  multiplier.mul(PowerPerBlock).mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30167:30217  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_501:\n        /* \"contracts/NFTMasterChef.sol\":30167:30221  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30167:30238  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_500:\n        /* \"contracts/NFTMasterChef.sol\":30145:30238  uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30272:30329  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      tag_503\n        /* \"contracts/NFTMasterChef.sol\":30293:30328  PowerReward.mul(1e12).div(lpSupply) */\n      tag_504\n        /* \"contracts/NFTMasterChef.sol\":30319:30327  lpSupply */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":30293:30314  PowerReward.mul(1e12) */\n      tag_505\n        /* \"contracts/NFTMasterChef.sol\":30309:30313  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":30293:30304  PowerReward */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":30293:30308  PowerReward.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30293:30314  PowerReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_505:\n        /* \"contracts/NFTMasterChef.sol\":30293:30318  PowerReward.mul(1e12).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30293:30328  PowerReward.mul(1e12).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_504:\n        /* \"contracts/NFTMasterChef.sol\":30272:30288  accPowerPerShare */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":30272:30292  accPowerPerShare.add */\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30272:30329  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_503:\n        /* \"contracts/NFTMasterChef.sol\":30253:30329  accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap4\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30045:30341  {... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29987:30341  if (block.number > pool.lastRewardBlock && lpSupply != 0) {... */\n    tag_498:\n        /* \"contracts/NFTMasterChef.sol\":30358:30422  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_506\n        /* \"contracts/NFTMasterChef.sol\":30406:30410  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":30406:30421  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30358:30401  user.amount.mul(accPowerPerShare).div(1e12) */\n      tag_507\n        /* \"contracts/NFTMasterChef.sol\":30396:30400  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":30358:30391  user.amount.mul(accPowerPerShare) */\n      tag_508\n        /* \"contracts/NFTMasterChef.sol\":30374:30390  accPowerPerShare */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":30358:30362  user */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":30358:30369  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30358:30373  user.amount.mul */\n      tag_203\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30358:30391  user.amount.mul(accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_508:\n        /* \"contracts/NFTMasterChef.sol\":30358:30395  user.amount.mul(accPowerPerShare).div */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30358:30401  user.amount.mul(accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_507:\n        /* \"contracts/NFTMasterChef.sol\":30358:30405  user.amount.mul(accPowerPerShare).div(1e12).sub */\n      tag_205\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30358:30422  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_506:\n        /* \"contracts/NFTMasterChef.sol\":30351:30422  return user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29663:30430  function pendingPower(uint256 _pid, address _user) external view returns (uint256){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {... */\n    tag_185:\n        /* \"contracts/NFTMasterChef.sol\":19532:19539  address */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":19559:19569  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":19552:19569  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":1757:2228  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_203:\n        /* \"contracts/NFTMasterChef.sol\":1815:1822  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2065:2066  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":2060:2061  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":2060:2066  a == 0 */\n      sub\n        /* \"contracts/NFTMasterChef.sol\":2056:2103  if (a == 0) {... */\n      tag_511\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":2090:2091  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2083:2091  return 0 */\n      swap1\n      pop\n      jump(tag_510)\n        /* \"contracts/NFTMasterChef.sol\":2056:2103  if (a == 0) {... */\n    tag_511:\n        /* \"contracts/NFTMasterChef.sol\":2115:2124  uint256 c */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2131:2132  b */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":2127:2128  a */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":2127:2132  a * b */\n      tag_512\n      swap2\n      swap1\n      tag_513\n      jump\t// in\n    tag_512:\n        /* \"contracts/NFTMasterChef.sol\":2115:2132  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":2160:2161  b */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":2155:2156  a */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":2151:2152  c */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":2151:2156  c / a */\n      tag_514\n      swap2\n      swap1\n      tag_515\n      jump\t// in\n    tag_514:\n        /* \"contracts/NFTMasterChef.sol\":2151:2161  c / a == b */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":2143:2199  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_516\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_517\n      swap1\n      tag_518\n      jump\t// in\n    tag_517:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_516:\n        /* \"contracts/NFTMasterChef.sol\":2219:2220  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":2212:2220  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1757:2228  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_510:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":2696:2828  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_204:\n        /* \"contracts/NFTMasterChef.sol\":2754:2761  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2781:2820  div(a, b, \"SafeMath: division by zero\") */\n      tag_520\n        /* \"contracts/NFTMasterChef.sol\":2785:2786  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":2788:2789  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":2781:2820  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":2781:2784  div */\n      tag_521\n        /* \"contracts/NFTMasterChef.sol\":2781:2820  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_520:\n        /* \"contracts/NFTMasterChef.sol\":2774:2820  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":2696:2828  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":841:977  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_205:\n        /* \"contracts/NFTMasterChef.sol\":899:906  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":926:969  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_523\n        /* \"contracts/NFTMasterChef.sol\":930:931  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":933:934  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":926:969  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":926:929  sub */\n      tag_524\n        /* \"contracts/NFTMasterChef.sol\":926:969  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_523:\n        /* \"contracts/NFTMasterChef.sol\":919:969  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":841:977  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":385:566  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_208:\n        /* \"contracts/NFTMasterChef.sol\":443:450  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":463:472  uint256 c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":479:480  b */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":475:476  a */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":475:480  a + b */\n      tag_526\n      swap2\n      swap1\n      tag_527\n      jump\t// in\n    tag_526:\n        /* \"contracts/NFTMasterChef.sol\":463:480  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":504:505  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":499:500  c */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":499:505  c >= a */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":491:537  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_528\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_529\n      swap1\n      tag_530\n      jump\t// in\n    tag_529:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_528:\n        /* \"contracts/NFTMasterChef.sol\":557:558  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":550:558  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":385:566  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":16150:16361  function safeTransfer(... */\n    tag_212:\n        /* \"contracts/NFTMasterChef.sol\":16267:16353  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_532\n        /* \"contracts/NFTMasterChef.sol\":16287:16292  token */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":16317:16340  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/NFTMasterChef.sol\":16342:16344  to */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":16346:16351  value */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":16294:16352  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_533\n      swap3\n      swap2\n      swap1\n      tag_534\n      jump\t// in\n    tag_533:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":16267:16286  _callOptionalReturn */\n      tag_535\n        /* \"contracts/NFTMasterChef.sol\":16267:16353  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_532:\n        /* \"contracts/NFTMasterChef.sol\":16150:16361  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":16369:16617  function safeTransferFrom(... */\n    tag_296:\n        /* \"contracts/NFTMasterChef.sol\":16513:16609  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_537\n        /* \"contracts/NFTMasterChef.sol\":16533:16538  token */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":16563:16590  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/NFTMasterChef.sol\":16592:16596  from */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":16598:16600  to */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":16602:16607  value */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":16540:16608  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_538\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_539\n      jump\t// in\n    tag_538:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":16513:16532  _callOptionalReturn */\n      tag_535\n        /* \"contracts/NFTMasterChef.sol\":16513:16609  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_537:\n        /* \"contracts/NFTMasterChef.sol\":16369:16617  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":16886:17502  function safeApprove(... */\n    tag_333:\n        /* \"contracts/NFTMasterChef.sol\":17259:17260  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":17250:17255  value */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":17250:17260  value == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":17249:17311  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      dup1\n      tag_541\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":17309:17310  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":17266:17271  token */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":17266:17281  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/NFTMasterChef.sol\":17290:17294  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":17297:17304  spender */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":17266:17305  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_542\n      swap3\n      swap2\n      swap1\n      tag_543\n      jump\t// in\n    tag_542:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_545\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_545:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_546\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_546:\n        /* \"contracts/NFTMasterChef.sol\":17266:17310  token.allowance(address(this), spender) == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":17249:17311  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_541:\n        /* \"contracts/NFTMasterChef.sol\":17227:17393  require(... */\n      tag_547\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_548\n      swap1\n      tag_549\n      jump\t// in\n    tag_548:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_547:\n        /* \"contracts/NFTMasterChef.sol\":17404:17494  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_550\n        /* \"contracts/NFTMasterChef.sol\":17424:17429  token */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":17454:17476  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"contracts/NFTMasterChef.sol\":17478:17485  spender */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":17487:17492  value */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":17431:17493  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      add(0x24, mload(0x40))\n      tag_551\n      swap3\n      swap2\n      swap1\n      tag_534\n      jump\t// in\n    tag_551:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":17404:17423  _callOptionalReturn */\n      tag_535\n        /* \"contracts/NFTMasterChef.sol\":17404:17494  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_550:\n        /* \"contracts/NFTMasterChef.sol\":16886:17502  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_420:\n        /* \"contracts/NFTMasterChef.sol\":21449:21465  address oldOwner */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":21468:21474  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":21449:21474  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":21494:21502  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21485:21491  _owner */\n      0x00\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":21485:21502  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":21549:21557  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":21539:21547  oldOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":21438:21566  {... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":3358:3703  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_521:\n        /* \"contracts/NFTMasterChef.sol\":3444:3451  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":3543:3544  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":3539:3540  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":3539:3544  b > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":3546:3558  errorMessage */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":3531:3559  require(b > 0, errorMessage) */\n      swap1\n      tag_554\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_555\n      swap2\n      swap1\n      tag_556\n      jump\t// in\n    tag_555:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_554:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":3570:3579  uint256 c */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":3586:3587  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":3582:3583  a */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":3582:3587  a / b */\n      tag_557\n      swap2\n      swap1\n      tag_515\n      jump\t// in\n    tag_557:\n        /* \"contracts/NFTMasterChef.sol\":3570:3587  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":3694:3695  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":3687:3695  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":3358:3703  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":1314:1506  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_524:\n        /* \"contracts/NFTMasterChef.sol\":1400:1407  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":1433:1434  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":1428:1429  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":1428:1434  b <= a */\n      gt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":1436:1448  errorMessage */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":1420:1449  require(b <= a, errorMessage) */\n      swap1\n      tag_559\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_560\n      swap2\n      swap1\n      tag_556\n      jump\t// in\n    tag_560:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_559:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1460:1469  uint256 c */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":1476:1477  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":1472:1473  a */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":1472:1477  a - b */\n      tag_561\n      swap2\n      swap1\n      tag_562\n      jump\t// in\n    tag_561:\n        /* \"contracts/NFTMasterChef.sol\":1460:1477  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1497:1498  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":1490:1498  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1314:1506  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":18723:19439  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_535:\n        /* \"contracts/NFTMasterChef.sol\":19147:19170  bytes memory returndata */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":19173:19242  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_564\n        /* \"contracts/NFTMasterChef.sol\":19201:19205  data */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":19173:19242  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":19181:19186  token */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":19173:19200  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_565\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":19173:19242  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_564:\n        /* \"contracts/NFTMasterChef.sol\":19147:19242  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":19277:19278  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":19257:19267  returndata */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":19257:19274  returndata.length */\n      mload\n        /* \"contracts/NFTMasterChef.sol\":19257:19278  returndata.length > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":19253:19432  if (returndata.length > 0) {... */\n      iszero\n      tag_566\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":19354:19364  returndata */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":19343:19373  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_567\n      swap2\n      swap1\n      tag_568\n      jump\t// in\n    tag_567:\n        /* \"contracts/NFTMasterChef.sol\":19335:19420  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_569\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_570\n      swap1\n      tag_571\n      jump\t// in\n    tag_570:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_569:\n        /* \"contracts/NFTMasterChef.sol\":19253:19432  if (returndata.length > 0) {... */\n    tag_566:\n        /* \"contracts/NFTMasterChef.sol\":18793:19439  {... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":18723:19439  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":11566:11795  function functionCall(... */\n    tag_565:\n        /* \"contracts/NFTMasterChef.sol\":11703:11715  bytes memory */\n      0x60\n        /* \"contracts/NFTMasterChef.sol\":11735:11787  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_573\n        /* \"contracts/NFTMasterChef.sol\":11757:11763  target */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":11765:11769  data */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":11771:11772  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":11774:11786  errorMessage */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":11735:11756  functionCallWithValue */\n      tag_574\n        /* \"contracts/NFTMasterChef.sol\":11735:11787  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_573:\n        /* \"contracts/NFTMasterChef.sol\":11728:11787  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":11566:11795  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":12686:13196  function functionCallWithValue(... */\n    tag_574:\n        /* \"contracts/NFTMasterChef.sol\":12856:12868  bytes memory */\n      0x60\n        /* \"contracts/NFTMasterChef.sol\":12914:12919  value */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":12889:12910  address(this).balance */\n      selfbalance\n        /* \"contracts/NFTMasterChef.sol\":12889:12919  address(this).balance >= value */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":12881:12962  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_576\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_577\n      swap1\n      tag_578\n      jump\t// in\n    tag_577:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_576:\n        /* \"contracts/NFTMasterChef.sol\":12981:12999  isContract(target) */\n      tag_579\n        /* \"contracts/NFTMasterChef.sol\":12992:12998  target */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":12981:12991  isContract */\n      tag_580\n        /* \"contracts/NFTMasterChef.sol\":12981:12999  isContract(target) */\n      jump\t// in\n    tag_579:\n        /* \"contracts/NFTMasterChef.sol\":12973:13033  require(isContract(target), \"Address: call to non-contract\") */\n      tag_581\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_582\n      swap1\n      tag_583\n      jump\t// in\n    tag_582:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_581:\n        /* \"contracts/NFTMasterChef.sol\":13047:13059  bool success */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":13061:13084  bytes memory returndata */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":13088:13094  target */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":13088:13099  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":13107:13112  value */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":13114:13118  data */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":13088:13119  target.call{value: value}(data) */\n      mload(0x40)\n      tag_584\n      swap2\n      swap1\n      tag_585\n      jump\t// in\n    tag_584:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_588\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_587)\n    tag_588:\n      0x60\n      swap2\n      pop\n    tag_587:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":13046:13119  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/NFTMasterChef.sol\":13137:13188  verifyCallResult(success, returndata, errorMessage) */\n      tag_589\n        /* \"contracts/NFTMasterChef.sol\":13154:13161  success */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":13163:13173  returndata */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":13175:13187  errorMessage */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":13137:13153  verifyCallResult */\n      tag_590\n        /* \"contracts/NFTMasterChef.sol\":13137:13188  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_589:\n        /* \"contracts/NFTMasterChef.sol\":13130:13188  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":12686:13196  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":8821:9147  function isContract(address account) internal view returns (bool) {... */\n    tag_580:\n        /* \"contracts/NFTMasterChef.sol\":8881:8885  bool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":9138:9139  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":9116:9123  account */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":9116:9135  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/NFTMasterChef.sol\":9116:9139  account.code.length > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":9109:9139  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":8821:9147  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":15372:16084  function verifyCallResult(... */\n    tag_590:\n        /* \"contracts/NFTMasterChef.sol\":15522:15534  bytes memory */\n      0x60\n        /* \"contracts/NFTMasterChef.sol\":15551:15558  success */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":15547:16077  if (success) {... */\n      iszero\n      tag_593\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":15582:15592  returndata */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":15575:15592  return returndata */\n      swap1\n      pop\n      jump(tag_592)\n        /* \"contracts/NFTMasterChef.sol\":15547:16077  if (success) {... */\n    tag_593:\n        /* \"contracts/NFTMasterChef.sol\":15716:15717  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":15696:15706  returndata */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":15696:15713  returndata.length */\n      mload\n        /* \"contracts/NFTMasterChef.sol\":15696:15717  returndata.length > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":15692:16066  if (returndata.length > 0) {... */\n      iszero\n      tag_595\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":15894:15904  returndata */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":15888:15905  mload(returndata) */\n      mload\n        /* \"contracts/NFTMasterChef.sol\":15955:15970  returndata_size */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":15942:15952  returndata */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":15938:15940  32 */\n      0x20\n        /* \"contracts/NFTMasterChef.sol\":15934:15953  add(32, returndata) */\n      add\n        /* \"contracts/NFTMasterChef.sol\":15927:15971  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/NFTMasterChef.sol\":15692:16066  if (returndata.length > 0) {... */\n    tag_595:\n        /* \"contracts/NFTMasterChef.sol\":16037:16049  errorMessage */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":16030:16050  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_597\n      swap2\n      swap1\n      tag_556\n      jump\t// in\n    tag_597:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/NFTMasterChef.sol\":15372:16084  function verifyCallResult(... */\n    tag_592:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_598:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_599:\n        /* \"#utility.yul\":177:201   */\n      tag_679\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_598\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_51:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_681\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_599\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_601:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_603:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_604:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_687\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_603\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_605:\n        /* \"#utility.yul\":1076:1100   */\n      tag_689\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_604\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_690\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_690:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_606:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_692\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_605\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_54:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_694\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_695\n      tag_601\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":1352:1471   */\n    tag_694:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_696\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_606\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_607:\n        /* \"#utility.yul\":1684:1708   */\n      tag_698\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_598\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_699\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_699:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_608:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_701\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_607\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_58:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_703\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_704\n      tag_601\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":1960:2079   */\n    tag_703:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_705\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_608\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2279   */\n    tag_609:\n        /* \"#utility.yul\":2247:2250   */\n      0x00\n        /* \"#utility.yul\":2268:2273   */\n      dup2\n        /* \"#utility.yul\":2261:2273   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2285:2427   */\n    tag_610:\n        /* \"#utility.yul\":2335:2344   */\n      0x00\n        /* \"#utility.yul\":2368:2421   */\n      tag_708\n        /* \"#utility.yul\":2386:2420   */\n      tag_709\n        /* \"#utility.yul\":2395:2419   */\n      tag_710\n        /* \"#utility.yul\":2413:2418   */\n      dup5\n        /* \"#utility.yul\":2395:2419   */\n      tag_603\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":2386:2420   */\n      tag_609\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":2368:2421   */\n      tag_603\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":2355:2421   */\n      swap1\n      pop\n        /* \"#utility.yul\":2285:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2559   */\n    tag_611:\n        /* \"#utility.yul\":2483:2492   */\n      0x00\n        /* \"#utility.yul\":2516:2553   */\n      tag_712\n        /* \"#utility.yul\":2547:2552   */\n      dup3\n        /* \"#utility.yul\":2516:2553   */\n      tag_610\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":2503:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2433:2559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2705   */\n    tag_612:\n        /* \"#utility.yul\":2629:2638   */\n      0x00\n        /* \"#utility.yul\":2662:2699   */\n      tag_714\n        /* \"#utility.yul\":2693:2698   */\n      dup3\n        /* \"#utility.yul\":2662:2699   */\n      tag_611\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":2649:2699   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2711:2870   */\n    tag_613:\n        /* \"#utility.yul\":2812:2863   */\n      tag_716\n        /* \"#utility.yul\":2857:2862   */\n      dup2\n        /* \"#utility.yul\":2812:2863   */\n      tag_612\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":2807:2810   */\n      dup3\n        /* \"#utility.yul\":2800:2864   */\n      mstore\n        /* \"#utility.yul\":2711:2870   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:3457   */\n    tag_64:\n        /* \"#utility.yul\":3067:3071   */\n      0x00\n        /* \"#utility.yul\":3105:3108   */\n      0x80\n        /* \"#utility.yul\":3094:3103   */\n      dup3\n        /* \"#utility.yul\":3090:3109   */\n      add\n        /* \"#utility.yul\":3082:3109   */\n      swap1\n      pop\n        /* \"#utility.yul\":3119:3204   */\n      tag_718\n        /* \"#utility.yul\":3201:3202   */\n      0x00\n        /* \"#utility.yul\":3190:3199   */\n      dup4\n        /* \"#utility.yul\":3186:3203   */\n      add\n        /* \"#utility.yul\":3177:3183   */\n      dup8\n        /* \"#utility.yul\":3119:3204   */\n      tag_613\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":3214:3286   */\n      tag_719\n        /* \"#utility.yul\":3282:3284   */\n      0x20\n        /* \"#utility.yul\":3271:3280   */\n      dup4\n        /* \"#utility.yul\":3267:3285   */\n      add\n        /* \"#utility.yul\":3258:3264   */\n      dup7\n        /* \"#utility.yul\":3214:3286   */\n      tag_599\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":3296:3368   */\n      tag_720\n        /* \"#utility.yul\":3364:3366   */\n      0x40\n        /* \"#utility.yul\":3353:3362   */\n      dup4\n        /* \"#utility.yul\":3349:3367   */\n      add\n        /* \"#utility.yul\":3340:3346   */\n      dup6\n        /* \"#utility.yul\":3296:3368   */\n      tag_599\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":3378:3450   */\n      tag_721\n        /* \"#utility.yul\":3446:3448   */\n      0x60\n        /* \"#utility.yul\":3435:3444   */\n      dup4\n        /* \"#utility.yul\":3431:3449   */\n      add\n        /* \"#utility.yul\":3422:3428   */\n      dup5\n        /* \"#utility.yul\":3378:3450   */\n      tag_599\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":2876:3457   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3937   */\n    tag_70:\n        /* \"#utility.yul\":3531:3537   */\n      0x00\n        /* \"#utility.yul\":3539:3545   */\n      dup1\n        /* \"#utility.yul\":3588:3590   */\n      0x40\n        /* \"#utility.yul\":3576:3585   */\n      dup4\n        /* \"#utility.yul\":3567:3574   */\n      dup6\n        /* \"#utility.yul\":3563:3586   */\n      sub\n        /* \"#utility.yul\":3559:3591   */\n      slt\n        /* \"#utility.yul\":3556:3675   */\n      iszero\n      tag_723\n      jumpi\n        /* \"#utility.yul\":3594:3673   */\n      tag_724\n      tag_601\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":3556:3675   */\n    tag_723:\n        /* \"#utility.yul\":3714:3715   */\n      0x00\n        /* \"#utility.yul\":3739:3792   */\n      tag_725\n        /* \"#utility.yul\":3784:3791   */\n      dup6\n        /* \"#utility.yul\":3775:3781   */\n      dup3\n        /* \"#utility.yul\":3764:3773   */\n      dup7\n        /* \"#utility.yul\":3760:3782   */\n      add\n        /* \"#utility.yul\":3739:3792   */\n      tag_608\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":3729:3792   */\n      swap3\n      pop\n        /* \"#utility.yul\":3685:3802   */\n      pop\n        /* \"#utility.yul\":3841:3843   */\n      0x20\n        /* \"#utility.yul\":3867:3920   */\n      tag_726\n        /* \"#utility.yul\":3912:3919   */\n      dup6\n        /* \"#utility.yul\":3903:3909   */\n      dup3\n        /* \"#utility.yul\":3892:3901   */\n      dup7\n        /* \"#utility.yul\":3888:3910   */\n      add\n        /* \"#utility.yul\":3867:3920   */\n      tag_608\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":3857:3920   */\n      swap2\n      pop\n        /* \"#utility.yul\":3812:3930   */\n      pop\n        /* \"#utility.yul\":3463:3937   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3943:4053   */\n    tag_614:\n        /* \"#utility.yul\":3994:4001   */\n      0x00\n        /* \"#utility.yul\":4023:4047   */\n      tag_728\n        /* \"#utility.yul\":4041:4046   */\n      dup3\n        /* \"#utility.yul\":4023:4047   */\n      tag_604\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":4012:4047   */\n      swap1\n      pop\n        /* \"#utility.yul\":3943:4053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4059:4209   */\n    tag_615:\n        /* \"#utility.yul\":4146:4184   */\n      tag_730\n        /* \"#utility.yul\":4178:4183   */\n      dup2\n        /* \"#utility.yul\":4146:4184   */\n      tag_614\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":4139:4144   */\n      dup2\n        /* \"#utility.yul\":4136:4185   */\n      eq\n        /* \"#utility.yul\":4126:4203   */\n      tag_731\n      jumpi\n        /* \"#utility.yul\":4199:4200   */\n      0x00\n        /* \"#utility.yul\":4196:4197   */\n      dup1\n        /* \"#utility.yul\":4189:4201   */\n      revert\n        /* \"#utility.yul\":4126:4203   */\n    tag_731:\n        /* \"#utility.yul\":4059:4209   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4215:4382   */\n    tag_616:\n        /* \"#utility.yul\":4275:4280   */\n      0x00\n        /* \"#utility.yul\":4313:4319   */\n      dup2\n        /* \"#utility.yul\":4300:4320   */\n      calldataload\n        /* \"#utility.yul\":4291:4320   */\n      swap1\n      pop\n        /* \"#utility.yul\":4329:4376   */\n      tag_733\n        /* \"#utility.yul\":4370:4375   */\n      dup2\n        /* \"#utility.yul\":4329:4376   */\n      tag_615\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":4215:4382   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4388:4478   */\n    tag_617:\n        /* \"#utility.yul\":4422:4429   */\n      0x00\n        /* \"#utility.yul\":4465:4470   */\n      dup2\n        /* \"#utility.yul\":4458:4471   */\n      iszero\n        /* \"#utility.yul\":4451:4472   */\n      iszero\n        /* \"#utility.yul\":4440:4472   */\n      swap1\n      pop\n        /* \"#utility.yul\":4388:4478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4484:4600   */\n    tag_618:\n        /* \"#utility.yul\":4554:4575   */\n      tag_736\n        /* \"#utility.yul\":4569:4574   */\n      dup2\n        /* \"#utility.yul\":4554:4575   */\n      tag_617\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":4547:4552   */\n      dup2\n        /* \"#utility.yul\":4544:4576   */\n      eq\n        /* \"#utility.yul\":4534:4594   */\n      tag_737\n      jumpi\n        /* \"#utility.yul\":4590:4591   */\n      0x00\n        /* \"#utility.yul\":4587:4588   */\n      dup1\n        /* \"#utility.yul\":4580:4592   */\n      revert\n        /* \"#utility.yul\":4534:4594   */\n    tag_737:\n        /* \"#utility.yul\":4484:4600   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4606:4739   */\n    tag_619:\n        /* \"#utility.yul\":4649:4654   */\n      0x00\n        /* \"#utility.yul\":4687:4693   */\n      dup2\n        /* \"#utility.yul\":4674:4694   */\n      calldataload\n        /* \"#utility.yul\":4665:4694   */\n      swap1\n      pop\n        /* \"#utility.yul\":4703:4733   */\n      tag_739\n        /* \"#utility.yul\":4727:4732   */\n      dup2\n        /* \"#utility.yul\":4703:4733   */\n      tag_618\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":4606:4739   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4745:5386   */\n    tag_74:\n        /* \"#utility.yul\":4833:4839   */\n      0x00\n        /* \"#utility.yul\":4841:4847   */\n      dup1\n        /* \"#utility.yul\":4849:4855   */\n      0x00\n        /* \"#utility.yul\":4898:4900   */\n      0x60\n        /* \"#utility.yul\":4886:4895   */\n      dup5\n        /* \"#utility.yul\":4877:4884   */\n      dup7\n        /* \"#utility.yul\":4873:4896   */\n      sub\n        /* \"#utility.yul\":4869:4901   */\n      slt\n        /* \"#utility.yul\":4866:4985   */\n      iszero\n      tag_741\n      jumpi\n        /* \"#utility.yul\":4904:4983   */\n      tag_742\n      tag_601\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":4866:4985   */\n    tag_741:\n        /* \"#utility.yul\":5024:5025   */\n      0x00\n        /* \"#utility.yul\":5049:5102   */\n      tag_743\n        /* \"#utility.yul\":5094:5101   */\n      dup7\n        /* \"#utility.yul\":5085:5091   */\n      dup3\n        /* \"#utility.yul\":5074:5083   */\n      dup8\n        /* \"#utility.yul\":5070:5092   */\n      add\n        /* \"#utility.yul\":5049:5102   */\n      tag_608\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":5039:5102   */\n      swap4\n      pop\n        /* \"#utility.yul\":4995:5112   */\n      pop\n        /* \"#utility.yul\":5151:5153   */\n      0x20\n        /* \"#utility.yul\":5177:5244   */\n      tag_744\n        /* \"#utility.yul\":5236:5243   */\n      dup7\n        /* \"#utility.yul\":5227:5233   */\n      dup3\n        /* \"#utility.yul\":5216:5225   */\n      dup8\n        /* \"#utility.yul\":5212:5234   */\n      add\n        /* \"#utility.yul\":5177:5244   */\n      tag_616\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":5167:5244   */\n      swap3\n      pop\n        /* \"#utility.yul\":5122:5254   */\n      pop\n        /* \"#utility.yul\":5293:5295   */\n      0x40\n        /* \"#utility.yul\":5319:5369   */\n      tag_745\n        /* \"#utility.yul\":5361:5368   */\n      dup7\n        /* \"#utility.yul\":5352:5358   */\n      dup3\n        /* \"#utility.yul\":5341:5350   */\n      dup8\n        /* \"#utility.yul\":5337:5359   */\n      add\n        /* \"#utility.yul\":5319:5369   */\n      tag_619\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":5309:5369   */\n      swap2\n      pop\n        /* \"#utility.yul\":5264:5379   */\n      pop\n        /* \"#utility.yul\":4745:5386   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5392:5510   */\n    tag_620:\n        /* \"#utility.yul\":5479:5503   */\n      tag_747\n        /* \"#utility.yul\":5497:5502   */\n      dup2\n        /* \"#utility.yul\":5479:5503   */\n      tag_604\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":5474:5477   */\n      dup3\n        /* \"#utility.yul\":5467:5504   */\n      mstore\n        /* \"#utility.yul\":5392:5510   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5516:5738   */\n    tag_79:\n        /* \"#utility.yul\":5609:5613   */\n      0x00\n        /* \"#utility.yul\":5647:5649   */\n      0x20\n        /* \"#utility.yul\":5636:5645   */\n      dup3\n        /* \"#utility.yul\":5632:5650   */\n      add\n        /* \"#utility.yul\":5624:5650   */\n      swap1\n      pop\n        /* \"#utility.yul\":5660:5731   */\n      tag_749\n        /* \"#utility.yul\":5728:5729   */\n      0x00\n        /* \"#utility.yul\":5717:5726   */\n      dup4\n        /* \"#utility.yul\":5713:5730   */\n      add\n        /* \"#utility.yul\":5704:5710   */\n      dup5\n        /* \"#utility.yul\":5660:5731   */\n      tag_620\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":5516:5738   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5744:5861   */\n    tag_621:\n        /* \"#utility.yul\":5802:5809   */\n      0x00\n        /* \"#utility.yul\":5831:5855   */\n      tag_751\n        /* \"#utility.yul\":5849:5854   */\n      dup3\n        /* \"#utility.yul\":5831:5855   */\n      tag_604\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":5820:5855   */\n      swap1\n      pop\n        /* \"#utility.yul\":5744:5861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5867:6031   */\n    tag_622:\n        /* \"#utility.yul\":5961:6006   */\n      tag_753\n        /* \"#utility.yul\":6000:6005   */\n      dup2\n        /* \"#utility.yul\":5961:6006   */\n      tag_621\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":5954:5959   */\n      dup2\n        /* \"#utility.yul\":5951:6007   */\n      eq\n        /* \"#utility.yul\":5941:6025   */\n      tag_754\n      jumpi\n        /* \"#utility.yul\":6021:6022   */\n      0x00\n        /* \"#utility.yul\":6018:6019   */\n      dup1\n        /* \"#utility.yul\":6011:6023   */\n      revert\n        /* \"#utility.yul\":5941:6025   */\n    tag_754:\n        /* \"#utility.yul\":5867:6031   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6037:6218   */\n    tag_623:\n        /* \"#utility.yul\":6104:6109   */\n      0x00\n        /* \"#utility.yul\":6142:6148   */\n      dup2\n        /* \"#utility.yul\":6129:6149   */\n      calldataload\n        /* \"#utility.yul\":6120:6149   */\n      swap1\n      pop\n        /* \"#utility.yul\":6158:6212   */\n      tag_756\n        /* \"#utility.yul\":6206:6211   */\n      dup2\n        /* \"#utility.yul\":6158:6212   */\n      tag_622\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":6037:6218   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6224:6595   */\n    tag_82:\n        /* \"#utility.yul\":6304:6310   */\n      0x00\n        /* \"#utility.yul\":6353:6355   */\n      0x20\n        /* \"#utility.yul\":6341:6350   */\n      dup3\n        /* \"#utility.yul\":6332:6339   */\n      dup5\n        /* \"#utility.yul\":6328:6351   */\n      sub\n        /* \"#utility.yul\":6324:6356   */\n      slt\n        /* \"#utility.yul\":6321:6440   */\n      iszero\n      tag_758\n      jumpi\n        /* \"#utility.yul\":6359:6438   */\n      tag_759\n      tag_601\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":6321:6440   */\n    tag_758:\n        /* \"#utility.yul\":6479:6480   */\n      0x00\n        /* \"#utility.yul\":6504:6578   */\n      tag_760\n        /* \"#utility.yul\":6570:6577   */\n      dup5\n        /* \"#utility.yul\":6561:6567   */\n      dup3\n        /* \"#utility.yul\":6550:6559   */\n      dup6\n        /* \"#utility.yul\":6546:6568   */\n      add\n        /* \"#utility.yul\":6504:6578   */\n      tag_623\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":6494:6578   */\n      swap2\n      pop\n        /* \"#utility.yul\":6450:6588   */\n      pop\n        /* \"#utility.yul\":6224:6595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6601:6712   */\n    tag_624:\n        /* \"#utility.yul\":6653:6660   */\n      0x00\n        /* \"#utility.yul\":6682:6706   */\n      tag_762\n        /* \"#utility.yul\":6700:6705   */\n      dup3\n        /* \"#utility.yul\":6682:6706   */\n      tag_604\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":6671:6706   */\n      swap1\n      pop\n        /* \"#utility.yul\":6601:6712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6718:6870   */\n    tag_625:\n        /* \"#utility.yul\":6806:6845   */\n      tag_764\n        /* \"#utility.yul\":6839:6844   */\n      dup2\n        /* \"#utility.yul\":6806:6845   */\n      tag_624\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":6799:6804   */\n      dup2\n        /* \"#utility.yul\":6796:6846   */\n      eq\n        /* \"#utility.yul\":6786:6864   */\n      tag_765\n      jumpi\n        /* \"#utility.yul\":6860:6861   */\n      0x00\n        /* \"#utility.yul\":6857:6858   */\n      dup1\n        /* \"#utility.yul\":6850:6862   */\n      revert\n        /* \"#utility.yul\":6786:6864   */\n    tag_765:\n        /* \"#utility.yul\":6718:6870   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6876:7045   */\n    tag_626:\n        /* \"#utility.yul\":6937:6942   */\n      0x00\n        /* \"#utility.yul\":6975:6981   */\n      dup2\n        /* \"#utility.yul\":6962:6982   */\n      calldataload\n        /* \"#utility.yul\":6953:6982   */\n      swap1\n      pop\n        /* \"#utility.yul\":6991:7039   */\n      tag_767\n        /* \"#utility.yul\":7033:7038   */\n      dup2\n        /* \"#utility.yul\":6991:7039   */\n      tag_625\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":6876:7045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7051:7555   */\n    tag_101:\n        /* \"#utility.yul\":7134:7140   */\n      0x00\n        /* \"#utility.yul\":7142:7148   */\n      dup1\n        /* \"#utility.yul\":7191:7193   */\n      0x40\n        /* \"#utility.yul\":7179:7188   */\n      dup4\n        /* \"#utility.yul\":7170:7177   */\n      dup6\n        /* \"#utility.yul\":7166:7189   */\n      sub\n        /* \"#utility.yul\":7162:7194   */\n      slt\n        /* \"#utility.yul\":7159:7278   */\n      iszero\n      tag_769\n      jumpi\n        /* \"#utility.yul\":7197:7276   */\n      tag_770\n      tag_601\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":7159:7278   */\n    tag_769:\n        /* \"#utility.yul\":7317:7318   */\n      0x00\n        /* \"#utility.yul\":7342:7410   */\n      tag_771\n        /* \"#utility.yul\":7402:7409   */\n      dup6\n        /* \"#utility.yul\":7393:7399   */\n      dup3\n        /* \"#utility.yul\":7382:7391   */\n      dup7\n        /* \"#utility.yul\":7378:7400   */\n      add\n        /* \"#utility.yul\":7342:7410   */\n      tag_626\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":7332:7410   */\n      swap3\n      pop\n        /* \"#utility.yul\":7288:7420   */\n      pop\n        /* \"#utility.yul\":7459:7461   */\n      0x20\n        /* \"#utility.yul\":7485:7538   */\n      tag_772\n        /* \"#utility.yul\":7530:7537   */\n      dup6\n        /* \"#utility.yul\":7521:7527   */\n      dup3\n        /* \"#utility.yul\":7510:7519   */\n      dup7\n        /* \"#utility.yul\":7506:7528   */\n      add\n        /* \"#utility.yul\":7485:7538   */\n      tag_608\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":7475:7538   */\n      swap2\n      pop\n        /* \"#utility.yul\":7430:7548   */\n      pop\n        /* \"#utility.yul\":7051:7555   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7561:7702   */\n    tag_627:\n        /* \"#utility.yul\":7626:7635   */\n      0x00\n        /* \"#utility.yul\":7659:7696   */\n      tag_774\n        /* \"#utility.yul\":7690:7695   */\n      dup3\n        /* \"#utility.yul\":7659:7696   */\n      tag_611\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":7646:7696   */\n      swap1\n      pop\n        /* \"#utility.yul\":7561:7702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7708:7869   */\n    tag_628:\n        /* \"#utility.yul\":7810:7862   */\n      tag_776\n        /* \"#utility.yul\":7856:7861   */\n      dup2\n        /* \"#utility.yul\":7810:7862   */\n      tag_627\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":7805:7808   */\n      dup3\n        /* \"#utility.yul\":7798:7863   */\n      mstore\n        /* \"#utility.yul\":7708:7869   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7875:8237   */\n    tag_122:\n        /* \"#utility.yul\":8011:8015   */\n      0x00\n        /* \"#utility.yul\":8049:8051   */\n      0x40\n        /* \"#utility.yul\":8038:8047   */\n      dup3\n        /* \"#utility.yul\":8034:8052   */\n      add\n        /* \"#utility.yul\":8026:8052   */\n      swap1\n      pop\n        /* \"#utility.yul\":8062:8148   */\n      tag_778\n        /* \"#utility.yul\":8145:8146   */\n      0x00\n        /* \"#utility.yul\":8134:8143   */\n      dup4\n        /* \"#utility.yul\":8130:8147   */\n      add\n        /* \"#utility.yul\":8121:8127   */\n      dup6\n        /* \"#utility.yul\":8062:8148   */\n      tag_628\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":8158:8230   */\n      tag_779\n        /* \"#utility.yul\":8226:8228   */\n      0x20\n        /* \"#utility.yul\":8215:8224   */\n      dup4\n        /* \"#utility.yul\":8211:8229   */\n      add\n        /* \"#utility.yul\":8202:8208   */\n      dup5\n        /* \"#utility.yul\":8158:8230   */\n      tag_599\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":7875:8237   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8243:8856   */\n    tag_127:\n        /* \"#utility.yul\":8317:8323   */\n      0x00\n        /* \"#utility.yul\":8325:8331   */\n      dup1\n        /* \"#utility.yul\":8333:8339   */\n      0x00\n        /* \"#utility.yul\":8382:8384   */\n      0x60\n        /* \"#utility.yul\":8370:8379   */\n      dup5\n        /* \"#utility.yul\":8361:8368   */\n      dup7\n        /* \"#utility.yul\":8357:8380   */\n      sub\n        /* \"#utility.yul\":8353:8385   */\n      slt\n        /* \"#utility.yul\":8350:8469   */\n      iszero\n      tag_781\n      jumpi\n        /* \"#utility.yul\":8388:8467   */\n      tag_782\n      tag_601\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":8350:8469   */\n    tag_781:\n        /* \"#utility.yul\":8508:8509   */\n      0x00\n        /* \"#utility.yul\":8533:8586   */\n      tag_783\n        /* \"#utility.yul\":8578:8585   */\n      dup7\n        /* \"#utility.yul\":8569:8575   */\n      dup3\n        /* \"#utility.yul\":8558:8567   */\n      dup8\n        /* \"#utility.yul\":8554:8576   */\n      add\n        /* \"#utility.yul\":8533:8586   */\n      tag_608\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":8523:8586   */\n      swap4\n      pop\n        /* \"#utility.yul\":8479:8596   */\n      pop\n        /* \"#utility.yul\":8635:8637   */\n      0x20\n        /* \"#utility.yul\":8661:8714   */\n      tag_784\n        /* \"#utility.yul\":8706:8713   */\n      dup7\n        /* \"#utility.yul\":8697:8703   */\n      dup3\n        /* \"#utility.yul\":8686:8695   */\n      dup8\n        /* \"#utility.yul\":8682:8704   */\n      add\n        /* \"#utility.yul\":8661:8714   */\n      tag_608\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":8651:8714   */\n      swap3\n      pop\n        /* \"#utility.yul\":8606:8724   */\n      pop\n        /* \"#utility.yul\":8763:8765   */\n      0x40\n        /* \"#utility.yul\":8789:8839   */\n      tag_785\n        /* \"#utility.yul\":8831:8838   */\n      dup7\n        /* \"#utility.yul\":8822:8828   */\n      dup3\n        /* \"#utility.yul\":8811:8820   */\n      dup8\n        /* \"#utility.yul\":8807:8829   */\n      add\n        /* \"#utility.yul\":8789:8839   */\n      tag_619\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":8779:8839   */\n      swap2\n      pop\n        /* \"#utility.yul\":8734:8849   */\n      pop\n        /* \"#utility.yul\":8243:8856   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8862:9009   */\n    tag_629:\n        /* \"#utility.yul\":8933:8942   */\n      0x00\n        /* \"#utility.yul\":8966:9003   */\n      tag_787\n        /* \"#utility.yul\":8997:9002   */\n      dup3\n        /* \"#utility.yul\":8966:9003   */\n      tag_611\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":8953:9003   */\n      swap1\n      pop\n        /* \"#utility.yul\":8862:9009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9015:9188   */\n    tag_630:\n        /* \"#utility.yul\":9123:9181   */\n      tag_789\n        /* \"#utility.yul\":9175:9180   */\n      dup2\n        /* \"#utility.yul\":9123:9181   */\n      tag_629\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":9118:9121   */\n      dup3\n        /* \"#utility.yul\":9111:9182   */\n      mstore\n        /* \"#utility.yul\":9015:9188   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9194:9458   */\n    tag_134:\n        /* \"#utility.yul\":9308:9312   */\n      0x00\n        /* \"#utility.yul\":9346:9348   */\n      0x20\n        /* \"#utility.yul\":9335:9344   */\n      dup3\n        /* \"#utility.yul\":9331:9349   */\n      add\n        /* \"#utility.yul\":9323:9349   */\n      swap1\n      pop\n        /* \"#utility.yul\":9359:9451   */\n      tag_791\n        /* \"#utility.yul\":9448:9449   */\n      0x00\n        /* \"#utility.yul\":9437:9446   */\n      dup4\n        /* \"#utility.yul\":9433:9450   */\n      add\n        /* \"#utility.yul\":9424:9430   */\n      dup5\n        /* \"#utility.yul\":9359:9451   */\n      tag_630\n      jump\t// in\n    tag_791:\n        /* \"#utility.yul\":9194:9458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9464:9938   */\n    tag_154:\n        /* \"#utility.yul\":9532:9538   */\n      0x00\n        /* \"#utility.yul\":9540:9546   */\n      dup1\n        /* \"#utility.yul\":9589:9591   */\n      0x40\n        /* \"#utility.yul\":9577:9586   */\n      dup4\n        /* \"#utility.yul\":9568:9575   */\n      dup6\n        /* \"#utility.yul\":9564:9587   */\n      sub\n        /* \"#utility.yul\":9560:9592   */\n      slt\n        /* \"#utility.yul\":9557:9676   */\n      iszero\n      tag_793\n      jumpi\n        /* \"#utility.yul\":9595:9674   */\n      tag_794\n      tag_601\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":9557:9676   */\n    tag_793:\n        /* \"#utility.yul\":9715:9716   */\n      0x00\n        /* \"#utility.yul\":9740:9793   */\n      tag_795\n        /* \"#utility.yul\":9785:9792   */\n      dup6\n        /* \"#utility.yul\":9776:9782   */\n      dup3\n        /* \"#utility.yul\":9765:9774   */\n      dup7\n        /* \"#utility.yul\":9761:9783   */\n      add\n        /* \"#utility.yul\":9740:9793   */\n      tag_608\n      jump\t// in\n    tag_795:\n        /* \"#utility.yul\":9730:9793   */\n      swap3\n      pop\n        /* \"#utility.yul\":9686:9803   */\n      pop\n        /* \"#utility.yul\":9842:9844   */\n      0x20\n        /* \"#utility.yul\":9868:9921   */\n      tag_796\n        /* \"#utility.yul\":9913:9920   */\n      dup6\n        /* \"#utility.yul\":9904:9910   */\n      dup3\n        /* \"#utility.yul\":9893:9902   */\n      dup7\n        /* \"#utility.yul\":9889:9911   */\n      add\n        /* \"#utility.yul\":9868:9921   */\n      tag_606\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":9858:9921   */\n      swap2\n      pop\n        /* \"#utility.yul\":9813:9931   */\n      pop\n        /* \"#utility.yul\":9464:9938   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9944:10276   */\n    tag_157:\n        /* \"#utility.yul\":10065:10069   */\n      0x00\n        /* \"#utility.yul\":10103:10105   */\n      0x40\n        /* \"#utility.yul\":10092:10101   */\n      dup3\n        /* \"#utility.yul\":10088:10106   */\n      add\n        /* \"#utility.yul\":10080:10106   */\n      swap1\n      pop\n        /* \"#utility.yul\":10116:10187   */\n      tag_798\n        /* \"#utility.yul\":10184:10185   */\n      0x00\n        /* \"#utility.yul\":10173:10182   */\n      dup4\n        /* \"#utility.yul\":10169:10186   */\n      add\n        /* \"#utility.yul\":10160:10166   */\n      dup6\n        /* \"#utility.yul\":10116:10187   */\n      tag_599\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":10197:10269   */\n      tag_799\n        /* \"#utility.yul\":10265:10267   */\n      0x20\n        /* \"#utility.yul\":10254:10263   */\n      dup4\n        /* \"#utility.yul\":10250:10268   */\n      add\n        /* \"#utility.yul\":10241:10247   */\n      dup5\n        /* \"#utility.yul\":10197:10269   */\n      tag_599\n      jump\t// in\n    tag_799:\n        /* \"#utility.yul\":9944:10276   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10282:10532   */\n    tag_164:\n        /* \"#utility.yul\":10389:10393   */\n      0x00\n        /* \"#utility.yul\":10427:10429   */\n      0x20\n        /* \"#utility.yul\":10416:10425   */\n      dup3\n        /* \"#utility.yul\":10412:10430   */\n      add\n        /* \"#utility.yul\":10404:10430   */\n      swap1\n      pop\n        /* \"#utility.yul\":10440:10525   */\n      tag_801\n        /* \"#utility.yul\":10522:10523   */\n      0x00\n        /* \"#utility.yul\":10511:10520   */\n      dup4\n        /* \"#utility.yul\":10507:10524   */\n      add\n        /* \"#utility.yul\":10498:10504   */\n      dup5\n        /* \"#utility.yul\":10440:10525   */\n      tag_613\n      jump\t// in\n    tag_801:\n        /* \"#utility.yul\":10282:10532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10538:10707   */\n    tag_631:\n        /* \"#utility.yul\":10622:10633   */\n      0x00\n        /* \"#utility.yul\":10656:10662   */\n      dup3\n        /* \"#utility.yul\":10651:10654   */\n      dup3\n        /* \"#utility.yul\":10644:10663   */\n      mstore\n        /* \"#utility.yul\":10696:10700   */\n      0x20\n        /* \"#utility.yul\":10691:10694   */\n      dup3\n        /* \"#utility.yul\":10687:10701   */\n      add\n        /* \"#utility.yul\":10672:10701   */\n      swap1\n      pop\n        /* \"#utility.yul\":10538:10707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10713:10895   */\n    tag_632:\n        /* \"#utility.yul\":10853:10887   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10849:10850   */\n      0x00\n        /* \"#utility.yul\":10841:10847   */\n      dup3\n        /* \"#utility.yul\":10837:10851   */\n      add\n        /* \"#utility.yul\":10830:10888   */\n      mstore\n        /* \"#utility.yul\":10713:10895   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10901:11267   */\n    tag_633:\n        /* \"#utility.yul\":11043:11046   */\n      0x00\n        /* \"#utility.yul\":11064:11131   */\n      tag_805\n        /* \"#utility.yul\":11128:11130   */\n      0x20\n        /* \"#utility.yul\":11123:11126   */\n      dup4\n        /* \"#utility.yul\":11064:11131   */\n      tag_631\n      jump\t// in\n    tag_805:\n        /* \"#utility.yul\":11057:11131   */\n      swap2\n      pop\n        /* \"#utility.yul\":11140:11233   */\n      tag_806\n        /* \"#utility.yul\":11229:11232   */\n      dup3\n        /* \"#utility.yul\":11140:11233   */\n      tag_632\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":11258:11260   */\n      0x20\n        /* \"#utility.yul\":11253:11256   */\n      dup3\n        /* \"#utility.yul\":11249:11261   */\n      add\n        /* \"#utility.yul\":11242:11261   */\n      swap1\n      pop\n        /* \"#utility.yul\":10901:11267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11273:11692   */\n    tag_189:\n        /* \"#utility.yul\":11439:11443   */\n      0x00\n        /* \"#utility.yul\":11477:11479   */\n      0x20\n        /* \"#utility.yul\":11466:11475   */\n      dup3\n        /* \"#utility.yul\":11462:11480   */\n      add\n        /* \"#utility.yul\":11454:11480   */\n      swap1\n      pop\n        /* \"#utility.yul\":11526:11535   */\n      dup2\n        /* \"#utility.yul\":11520:11524   */\n      dup2\n        /* \"#utility.yul\":11516:11536   */\n      sub\n        /* \"#utility.yul\":11512:11513   */\n      0x00\n        /* \"#utility.yul\":11501:11510   */\n      dup4\n        /* \"#utility.yul\":11497:11514   */\n      add\n        /* \"#utility.yul\":11490:11537   */\n      mstore\n        /* \"#utility.yul\":11554:11685   */\n      tag_808\n        /* \"#utility.yul\":11680:11684   */\n      dup2\n        /* \"#utility.yul\":11554:11685   */\n      tag_633\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":11546:11685   */\n      swap1\n      pop\n        /* \"#utility.yul\":11273:11692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11698:11878   */\n    tag_194:\n        /* \"#utility.yul\":11746:11823   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11743:11744   */\n      0x00\n        /* \"#utility.yul\":11736:11824   */\n      mstore\n        /* \"#utility.yul\":11843:11847   */\n      0x32\n        /* \"#utility.yul\":11840:11841   */\n      0x04\n        /* \"#utility.yul\":11833:11848   */\n      mstore\n        /* \"#utility.yul\":11867:11871   */\n      0x24\n        /* \"#utility.yul\":11864:11865   */\n      0x00\n        /* \"#utility.yul\":11857:11872   */\n      revert\n        /* \"#utility.yul\":11884:12052   */\n    tag_634:\n        /* \"#utility.yul\":12024:12044   */\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n        /* \"#utility.yul\":12020:12021   */\n      0x00\n        /* \"#utility.yul\":12012:12018   */\n      dup3\n        /* \"#utility.yul\":12008:12022   */\n      add\n        /* \"#utility.yul\":12001:12045   */\n      mstore\n        /* \"#utility.yul\":11884:12052   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12058:12424   */\n    tag_635:\n        /* \"#utility.yul\":12200:12203   */\n      0x00\n        /* \"#utility.yul\":12221:12288   */\n      tag_812\n        /* \"#utility.yul\":12285:12287   */\n      0x12\n        /* \"#utility.yul\":12280:12283   */\n      dup4\n        /* \"#utility.yul\":12221:12288   */\n      tag_631\n      jump\t// in\n    tag_812:\n        /* \"#utility.yul\":12214:12288   */\n      swap2\n      pop\n        /* \"#utility.yul\":12297:12390   */\n      tag_813\n        /* \"#utility.yul\":12386:12389   */\n      dup3\n        /* \"#utility.yul\":12297:12390   */\n      tag_634\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":12415:12417   */\n      0x20\n        /* \"#utility.yul\":12410:12413   */\n      dup3\n        /* \"#utility.yul\":12406:12418   */\n      add\n        /* \"#utility.yul\":12399:12418   */\n      swap1\n      pop\n        /* \"#utility.yul\":12058:12424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12430:12849   */\n    tag_198:\n        /* \"#utility.yul\":12596:12600   */\n      0x00\n        /* \"#utility.yul\":12634:12636   */\n      0x20\n        /* \"#utility.yul\":12623:12632   */\n      dup3\n        /* \"#utility.yul\":12619:12637   */\n      add\n        /* \"#utility.yul\":12611:12637   */\n      swap1\n      pop\n        /* \"#utility.yul\":12683:12692   */\n      dup2\n        /* \"#utility.yul\":12677:12681   */\n      dup2\n        /* \"#utility.yul\":12673:12693   */\n      sub\n        /* \"#utility.yul\":12669:12670   */\n      0x00\n        /* \"#utility.yul\":12658:12667   */\n      dup4\n        /* \"#utility.yul\":12654:12671   */\n      add\n        /* \"#utility.yul\":12647:12694   */\n      mstore\n        /* \"#utility.yul\":12711:12842   */\n      tag_815\n        /* \"#utility.yul\":12837:12841   */\n      dup2\n        /* \"#utility.yul\":12711:12842   */\n      tag_635\n      jump\t// in\n    tag_815:\n        /* \"#utility.yul\":12703:12842   */\n      swap1\n      pop\n        /* \"#utility.yul\":12430:12849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12855:12998   */\n    tag_636:\n        /* \"#utility.yul\":12912:12917   */\n      0x00\n        /* \"#utility.yul\":12943:12949   */\n      dup2\n        /* \"#utility.yul\":12937:12950   */\n      mload\n        /* \"#utility.yul\":12928:12950   */\n      swap1\n      pop\n        /* \"#utility.yul\":12959:12992   */\n      tag_817\n        /* \"#utility.yul\":12986:12991   */\n      dup2\n        /* \"#utility.yul\":12959:12992   */\n      tag_607\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":12855:12998   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13004:13355   */\n    tag_226:\n        /* \"#utility.yul\":13074:13080   */\n      0x00\n        /* \"#utility.yul\":13123:13125   */\n      0x20\n        /* \"#utility.yul\":13111:13120   */\n      dup3\n        /* \"#utility.yul\":13102:13109   */\n      dup5\n        /* \"#utility.yul\":13098:13121   */\n      sub\n        /* \"#utility.yul\":13094:13126   */\n      slt\n        /* \"#utility.yul\":13091:13210   */\n      iszero\n      tag_819\n      jumpi\n        /* \"#utility.yul\":13129:13208   */\n      tag_820\n      tag_601\n      jump\t// in\n    tag_820:\n        /* \"#utility.yul\":13091:13210   */\n    tag_819:\n        /* \"#utility.yul\":13249:13250   */\n      0x00\n        /* \"#utility.yul\":13274:13338   */\n      tag_821\n        /* \"#utility.yul\":13330:13337   */\n      dup5\n        /* \"#utility.yul\":13321:13327   */\n      dup3\n        /* \"#utility.yul\":13310:13319   */\n      dup6\n        /* \"#utility.yul\":13306:13328   */\n      add\n        /* \"#utility.yul\":13274:13338   */\n      tag_636\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":13264:13338   */\n      swap2\n      pop\n        /* \"#utility.yul\":13220:13348   */\n      pop\n        /* \"#utility.yul\":13004:13355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13361:13530   */\n    tag_637:\n        /* \"#utility.yul\":13501:13522   */\n      0x506f776572206973206e6f7420656e6f75676800000000000000000000000000\n        /* \"#utility.yul\":13497:13498   */\n      0x00\n        /* \"#utility.yul\":13489:13495   */\n      dup3\n        /* \"#utility.yul\":13485:13499   */\n      add\n        /* \"#utility.yul\":13478:13523   */\n      mstore\n        /* \"#utility.yul\":13361:13530   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13536:13902   */\n    tag_638:\n        /* \"#utility.yul\":13678:13681   */\n      0x00\n        /* \"#utility.yul\":13699:13766   */\n      tag_824\n        /* \"#utility.yul\":13763:13765   */\n      0x13\n        /* \"#utility.yul\":13758:13761   */\n      dup4\n        /* \"#utility.yul\":13699:13766   */\n      tag_631\n      jump\t// in\n    tag_824:\n        /* \"#utility.yul\":13692:13766   */\n      swap2\n      pop\n        /* \"#utility.yul\":13775:13868   */\n      tag_825\n        /* \"#utility.yul\":13864:13867   */\n      dup3\n        /* \"#utility.yul\":13775:13868   */\n      tag_637\n      jump\t// in\n    tag_825:\n        /* \"#utility.yul\":13893:13895   */\n      0x20\n        /* \"#utility.yul\":13888:13891   */\n      dup3\n        /* \"#utility.yul\":13884:13896   */\n      add\n        /* \"#utility.yul\":13877:13896   */\n      swap1\n      pop\n        /* \"#utility.yul\":13536:13902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13908:14327   */\n    tag_250:\n        /* \"#utility.yul\":14074:14078   */\n      0x00\n        /* \"#utility.yul\":14112:14114   */\n      0x20\n        /* \"#utility.yul\":14101:14110   */\n      dup3\n        /* \"#utility.yul\":14097:14115   */\n      add\n        /* \"#utility.yul\":14089:14115   */\n      swap1\n      pop\n        /* \"#utility.yul\":14161:14170   */\n      dup2\n        /* \"#utility.yul\":14155:14159   */\n      dup2\n        /* \"#utility.yul\":14151:14171   */\n      sub\n        /* \"#utility.yul\":14147:14148   */\n      0x00\n        /* \"#utility.yul\":14136:14145   */\n      dup4\n        /* \"#utility.yul\":14132:14149   */\n      add\n        /* \"#utility.yul\":14125:14172   */\n      mstore\n        /* \"#utility.yul\":14189:14320   */\n      tag_827\n        /* \"#utility.yul\":14315:14319   */\n      dup2\n        /* \"#utility.yul\":14189:14320   */\n      tag_638\n      jump\t// in\n    tag_827:\n        /* \"#utility.yul\":14181:14320   */\n      swap1\n      pop\n        /* \"#utility.yul\":13908:14327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14333:14497   */\n    tag_639:\n        /* \"#utility.yul\":14473:14489   */\n      0x416d6f756e74206973207a65726f000000000000000000000000000000000000\n        /* \"#utility.yul\":14469:14470   */\n      0x00\n        /* \"#utility.yul\":14461:14467   */\n      dup3\n        /* \"#utility.yul\":14457:14471   */\n      add\n        /* \"#utility.yul\":14450:14490   */\n      mstore\n        /* \"#utility.yul\":14333:14497   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14503:14869   */\n    tag_640:\n        /* \"#utility.yul\":14645:14648   */\n      0x00\n        /* \"#utility.yul\":14666:14733   */\n      tag_830\n        /* \"#utility.yul\":14730:14732   */\n      0x0e\n        /* \"#utility.yul\":14725:14728   */\n      dup4\n        /* \"#utility.yul\":14666:14733   */\n      tag_631\n      jump\t// in\n    tag_830:\n        /* \"#utility.yul\":14659:14733   */\n      swap2\n      pop\n        /* \"#utility.yul\":14742:14835   */\n      tag_831\n        /* \"#utility.yul\":14831:14834   */\n      dup3\n        /* \"#utility.yul\":14742:14835   */\n      tag_639\n      jump\t// in\n    tag_831:\n        /* \"#utility.yul\":14860:14862   */\n      0x20\n        /* \"#utility.yul\":14855:14858   */\n      dup3\n        /* \"#utility.yul\":14851:14863   */\n      add\n        /* \"#utility.yul\":14844:14863   */\n      swap1\n      pop\n        /* \"#utility.yul\":14503:14869   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14875:15294   */\n    tag_283:\n        /* \"#utility.yul\":15041:15045   */\n      0x00\n        /* \"#utility.yul\":15079:15081   */\n      0x20\n        /* \"#utility.yul\":15068:15077   */\n      dup3\n        /* \"#utility.yul\":15064:15082   */\n      add\n        /* \"#utility.yul\":15056:15082   */\n      swap1\n      pop\n        /* \"#utility.yul\":15128:15137   */\n      dup2\n        /* \"#utility.yul\":15122:15126   */\n      dup2\n        /* \"#utility.yul\":15118:15138   */\n      sub\n        /* \"#utility.yul\":15114:15115   */\n      0x00\n        /* \"#utility.yul\":15103:15112   */\n      dup4\n        /* \"#utility.yul\":15099:15116   */\n      add\n        /* \"#utility.yul\":15092:15139   */\n      mstore\n        /* \"#utility.yul\":15156:15287   */\n      tag_833\n        /* \"#utility.yul\":15282:15286   */\n      dup2\n        /* \"#utility.yul\":15156:15287   */\n      tag_640\n      jump\t// in\n    tag_833:\n        /* \"#utility.yul\":15148:15287   */\n      swap1\n      pop\n        /* \"#utility.yul\":14875:15294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15300:15477   */\n    tag_641:\n        /* \"#utility.yul\":15440:15469   */\n      0x776974686472617720506f77657220627920756e7374616b696e670000000000\n        /* \"#utility.yul\":15436:15437   */\n      0x00\n        /* \"#utility.yul\":15428:15434   */\n      dup3\n        /* \"#utility.yul\":15424:15438   */\n      add\n        /* \"#utility.yul\":15417:15470   */\n      mstore\n        /* \"#utility.yul\":15300:15477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15483:15849   */\n    tag_642:\n        /* \"#utility.yul\":15625:15628   */\n      0x00\n        /* \"#utility.yul\":15646:15713   */\n      tag_836\n        /* \"#utility.yul\":15710:15712   */\n      0x1b\n        /* \"#utility.yul\":15705:15708   */\n      dup4\n        /* \"#utility.yul\":15646:15713   */\n      tag_631\n      jump\t// in\n    tag_836:\n        /* \"#utility.yul\":15639:15713   */\n      swap2\n      pop\n        /* \"#utility.yul\":15722:15815   */\n      tag_837\n        /* \"#utility.yul\":15811:15814   */\n      dup3\n        /* \"#utility.yul\":15722:15815   */\n      tag_641\n      jump\t// in\n    tag_837:\n        /* \"#utility.yul\":15840:15842   */\n      0x20\n        /* \"#utility.yul\":15835:15838   */\n      dup3\n        /* \"#utility.yul\":15831:15843   */\n      add\n        /* \"#utility.yul\":15824:15843   */\n      swap1\n      pop\n        /* \"#utility.yul\":15483:15849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15855:16274   */\n    tag_304:\n        /* \"#utility.yul\":16021:16025   */\n      0x00\n        /* \"#utility.yul\":16059:16061   */\n      0x20\n        /* \"#utility.yul\":16048:16057   */\n      dup3\n        /* \"#utility.yul\":16044:16062   */\n      add\n        /* \"#utility.yul\":16036:16062   */\n      swap1\n      pop\n        /* \"#utility.yul\":16108:16117   */\n      dup2\n        /* \"#utility.yul\":16102:16106   */\n      dup2\n        /* \"#utility.yul\":16098:16118   */\n      sub\n        /* \"#utility.yul\":16094:16095   */\n      0x00\n        /* \"#utility.yul\":16083:16092   */\n      dup4\n        /* \"#utility.yul\":16079:16096   */\n      add\n        /* \"#utility.yul\":16072:16119   */\n      mstore\n        /* \"#utility.yul\":16136:16267   */\n      tag_839\n        /* \"#utility.yul\":16262:16266   */\n      dup2\n        /* \"#utility.yul\":16136:16267   */\n      tag_642\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":16128:16267   */\n      swap1\n      pop\n        /* \"#utility.yul\":15855:16274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16280:16450   */\n    tag_643:\n        /* \"#utility.yul\":16420:16442   */\n      0x6d6967726174653a206e6f206d69677261746f72000000000000000000000000\n        /* \"#utility.yul\":16416:16417   */\n      0x00\n        /* \"#utility.yul\":16408:16414   */\n      dup3\n        /* \"#utility.yul\":16404:16418   */\n      add\n        /* \"#utility.yul\":16397:16443   */\n      mstore\n        /* \"#utility.yul\":16280:16450   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16456:16822   */\n    tag_644:\n        /* \"#utility.yul\":16598:16601   */\n      0x00\n        /* \"#utility.yul\":16619:16686   */\n      tag_842\n        /* \"#utility.yul\":16683:16685   */\n      0x14\n        /* \"#utility.yul\":16678:16681   */\n      dup4\n        /* \"#utility.yul\":16619:16686   */\n      tag_631\n      jump\t// in\n    tag_842:\n        /* \"#utility.yul\":16612:16686   */\n      swap2\n      pop\n        /* \"#utility.yul\":16695:16788   */\n      tag_843\n        /* \"#utility.yul\":16784:16787   */\n      dup3\n        /* \"#utility.yul\":16695:16788   */\n      tag_643\n      jump\t// in\n    tag_843:\n        /* \"#utility.yul\":16813:16815   */\n      0x20\n        /* \"#utility.yul\":16808:16811   */\n      dup3\n        /* \"#utility.yul\":16804:16816   */\n      add\n        /* \"#utility.yul\":16797:16816   */\n      swap1\n      pop\n        /* \"#utility.yul\":16456:16822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16828:17247   */\n    tag_324:\n        /* \"#utility.yul\":16994:16998   */\n      0x00\n        /* \"#utility.yul\":17032:17034   */\n      0x20\n        /* \"#utility.yul\":17021:17030   */\n      dup3\n        /* \"#utility.yul\":17017:17035   */\n      add\n        /* \"#utility.yul\":17009:17035   */\n      swap1\n      pop\n        /* \"#utility.yul\":17081:17090   */\n      dup2\n        /* \"#utility.yul\":17075:17079   */\n      dup2\n        /* \"#utility.yul\":17071:17091   */\n      sub\n        /* \"#utility.yul\":17067:17068   */\n      0x00\n        /* \"#utility.yul\":17056:17065   */\n      dup4\n        /* \"#utility.yul\":17052:17069   */\n      add\n        /* \"#utility.yul\":17045:17092   */\n      mstore\n        /* \"#utility.yul\":17109:17240   */\n      tag_845\n        /* \"#utility.yul\":17235:17239   */\n      dup2\n        /* \"#utility.yul\":17109:17240   */\n      tag_644\n      jump\t// in\n    tag_845:\n        /* \"#utility.yul\":17101:17240   */\n      swap1\n      pop\n        /* \"#utility.yul\":16828:17247   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17253:17424   */\n    tag_645:\n        /* \"#utility.yul\":17324:17329   */\n      0x00\n        /* \"#utility.yul\":17355:17361   */\n      dup2\n        /* \"#utility.yul\":17349:17362   */\n      mload\n        /* \"#utility.yul\":17340:17362   */\n      swap1\n      pop\n        /* \"#utility.yul\":17371:17418   */\n      tag_847\n        /* \"#utility.yul\":17412:17417   */\n      dup2\n        /* \"#utility.yul\":17371:17418   */\n      tag_615\n      jump\t// in\n    tag_847:\n        /* \"#utility.yul\":17253:17424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17430:17809   */\n    tag_338:\n        /* \"#utility.yul\":17514:17520   */\n      0x00\n        /* \"#utility.yul\":17563:17565   */\n      0x20\n        /* \"#utility.yul\":17551:17560   */\n      dup3\n        /* \"#utility.yul\":17542:17549   */\n      dup5\n        /* \"#utility.yul\":17538:17561   */\n      sub\n        /* \"#utility.yul\":17534:17566   */\n      slt\n        /* \"#utility.yul\":17531:17650   */\n      iszero\n      tag_849\n      jumpi\n        /* \"#utility.yul\":17569:17648   */\n      tag_850\n      tag_601\n      jump\t// in\n    tag_850:\n        /* \"#utility.yul\":17531:17650   */\n    tag_849:\n        /* \"#utility.yul\":17689:17690   */\n      0x00\n        /* \"#utility.yul\":17714:17792   */\n      tag_851\n        /* \"#utility.yul\":17784:17791   */\n      dup5\n        /* \"#utility.yul\":17775:17781   */\n      dup3\n        /* \"#utility.yul\":17764:17773   */\n      dup6\n        /* \"#utility.yul\":17760:17782   */\n      add\n        /* \"#utility.yul\":17714:17792   */\n      tag_645\n      jump\t// in\n    tag_851:\n        /* \"#utility.yul\":17704:17792   */\n      swap2\n      pop\n        /* \"#utility.yul\":17660:17802   */\n      pop\n        /* \"#utility.yul\":17430:17809   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17815:17977   */\n    tag_646:\n        /* \"#utility.yul\":17955:17969   */\n      0x6d6967726174653a206261640000000000000000000000000000000000000000\n        /* \"#utility.yul\":17951:17952   */\n      0x00\n        /* \"#utility.yul\":17943:17949   */\n      dup3\n        /* \"#utility.yul\":17939:17953   */\n      add\n        /* \"#utility.yul\":17932:17970   */\n      mstore\n        /* \"#utility.yul\":17815:17977   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17983:18349   */\n    tag_647:\n        /* \"#utility.yul\":18125:18128   */\n      0x00\n        /* \"#utility.yul\":18146:18213   */\n      tag_854\n        /* \"#utility.yul\":18210:18212   */\n      0x0c\n        /* \"#utility.yul\":18205:18208   */\n      dup4\n        /* \"#utility.yul\":18146:18213   */\n      tag_631\n      jump\t// in\n    tag_854:\n        /* \"#utility.yul\":18139:18213   */\n      swap2\n      pop\n        /* \"#utility.yul\":18222:18315   */\n      tag_855\n        /* \"#utility.yul\":18311:18314   */\n      dup3\n        /* \"#utility.yul\":18222:18315   */\n      tag_646\n      jump\t// in\n    tag_855:\n        /* \"#utility.yul\":18340:18342   */\n      0x20\n        /* \"#utility.yul\":18335:18338   */\n      dup3\n        /* \"#utility.yul\":18331:18343   */\n      add\n        /* \"#utility.yul\":18324:18343   */\n      swap1\n      pop\n        /* \"#utility.yul\":17983:18349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18355:18774   */\n    tag_345:\n        /* \"#utility.yul\":18521:18525   */\n      0x00\n        /* \"#utility.yul\":18559:18561   */\n      0x20\n        /* \"#utility.yul\":18548:18557   */\n      dup3\n        /* \"#utility.yul\":18544:18562   */\n      add\n        /* \"#utility.yul\":18536:18562   */\n      swap1\n      pop\n        /* \"#utility.yul\":18608:18617   */\n      dup2\n        /* \"#utility.yul\":18602:18606   */\n      dup2\n        /* \"#utility.yul\":18598:18618   */\n      sub\n        /* \"#utility.yul\":18594:18595   */\n      0x00\n        /* \"#utility.yul\":18583:18592   */\n      dup4\n        /* \"#utility.yul\":18579:18596   */\n      add\n        /* \"#utility.yul\":18572:18619   */\n      mstore\n        /* \"#utility.yul\":18636:18767   */\n      tag_857\n        /* \"#utility.yul\":18762:18766   */\n      dup2\n        /* \"#utility.yul\":18636:18767   */\n      tag_647\n      jump\t// in\n    tag_857:\n        /* \"#utility.yul\":18628:18767   */\n      swap1\n      pop\n        /* \"#utility.yul\":18355:18774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18780:18960   */\n    tag_648:\n        /* \"#utility.yul\":18828:18905   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18825:18826   */\n      0x00\n        /* \"#utility.yul\":18818:18906   */\n      mstore\n        /* \"#utility.yul\":18925:18929   */\n      0x11\n        /* \"#utility.yul\":18922:18923   */\n      0x04\n        /* \"#utility.yul\":18915:18930   */\n      mstore\n        /* \"#utility.yul\":18949:18953   */\n      0x24\n        /* \"#utility.yul\":18946:18947   */\n      0x00\n        /* \"#utility.yul\":18939:18954   */\n      revert\n        /* \"#utility.yul\":18966:19199   */\n    tag_396:\n        /* \"#utility.yul\":19005:19008   */\n      0x00\n        /* \"#utility.yul\":19028:19052   */\n      tag_860\n        /* \"#utility.yul\":19046:19051   */\n      dup3\n        /* \"#utility.yul\":19028:19052   */\n      tag_598\n      jump\t// in\n    tag_860:\n        /* \"#utility.yul\":19019:19052   */\n      swap2\n      pop\n        /* \"#utility.yul\":19074:19140   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19067:19072   */\n      dup3\n        /* \"#utility.yul\":19064:19141   */\n      sub\n        /* \"#utility.yul\":19061:19164   */\n      tag_861\n      jumpi\n        /* \"#utility.yul\":19144:19162   */\n      tag_862\n      tag_648\n      jump\t// in\n    tag_862:\n        /* \"#utility.yul\":19061:19164   */\n    tag_861:\n        /* \"#utility.yul\":19191:19192   */\n      0x01\n        /* \"#utility.yul\":19184:19189   */\n      dup3\n        /* \"#utility.yul\":19180:19193   */\n      add\n        /* \"#utility.yul\":19173:19193   */\n      swap1\n      pop\n        /* \"#utility.yul\":18966:19199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19205:19375   */\n    tag_649:\n        /* \"#utility.yul\":19345:19367   */\n      0x43616c6c6572206973206e6f742066616d696c79000000000000000000000000\n        /* \"#utility.yul\":19341:19342   */\n      0x00\n        /* \"#utility.yul\":19333:19339   */\n      dup3\n        /* \"#utility.yul\":19329:19343   */\n      add\n        /* \"#utility.yul\":19322:19368   */\n      mstore\n        /* \"#utility.yul\":19205:19375   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19381:19747   */\n    tag_650:\n        /* \"#utility.yul\":19523:19526   */\n      0x00\n        /* \"#utility.yul\":19544:19611   */\n      tag_865\n        /* \"#utility.yul\":19608:19610   */\n      0x14\n        /* \"#utility.yul\":19603:19606   */\n      dup4\n        /* \"#utility.yul\":19544:19611   */\n      tag_631\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":19537:19611   */\n      swap2\n      pop\n        /* \"#utility.yul\":19620:19713   */\n      tag_866\n        /* \"#utility.yul\":19709:19712   */\n      dup3\n        /* \"#utility.yul\":19620:19713   */\n      tag_649\n      jump\t// in\n    tag_866:\n        /* \"#utility.yul\":19738:19740   */\n      0x20\n        /* \"#utility.yul\":19733:19736   */\n      dup3\n        /* \"#utility.yul\":19729:19741   */\n      add\n        /* \"#utility.yul\":19722:19741   */\n      swap1\n      pop\n        /* \"#utility.yul\":19381:19747   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19753:20172   */\n    tag_441:\n        /* \"#utility.yul\":19919:19923   */\n      0x00\n        /* \"#utility.yul\":19957:19959   */\n      0x20\n        /* \"#utility.yul\":19946:19955   */\n      dup3\n        /* \"#utility.yul\":19942:19960   */\n      add\n        /* \"#utility.yul\":19934:19960   */\n      swap1\n      pop\n        /* \"#utility.yul\":20006:20015   */\n      dup2\n        /* \"#utility.yul\":20000:20004   */\n      dup2\n        /* \"#utility.yul\":19996:20016   */\n      sub\n        /* \"#utility.yul\":19992:19993   */\n      0x00\n        /* \"#utility.yul\":19981:19990   */\n      dup4\n        /* \"#utility.yul\":19977:19994   */\n      add\n        /* \"#utility.yul\":19970:20017   */\n      mstore\n        /* \"#utility.yul\":20034:20165   */\n      tag_868\n        /* \"#utility.yul\":20160:20164   */\n      dup2\n        /* \"#utility.yul\":20034:20165   */\n      tag_650\n      jump\t// in\n    tag_868:\n        /* \"#utility.yul\":20026:20165   */\n      swap1\n      pop\n        /* \"#utility.yul\":19753:20172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20178:20352   */\n    tag_651:\n        /* \"#utility.yul\":20318:20344   */\n      0x6465706f73697420506f776572206279207374616b696e670000000000000000\n        /* \"#utility.yul\":20314:20315   */\n      0x00\n        /* \"#utility.yul\":20306:20312   */\n      dup3\n        /* \"#utility.yul\":20302:20316   */\n      add\n        /* \"#utility.yul\":20295:20345   */\n      mstore\n        /* \"#utility.yul\":20178:20352   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20358:20724   */\n    tag_652:\n        /* \"#utility.yul\":20500:20503   */\n      0x00\n        /* \"#utility.yul\":20521:20588   */\n      tag_871\n        /* \"#utility.yul\":20585:20587   */\n      0x18\n        /* \"#utility.yul\":20580:20583   */\n      dup4\n        /* \"#utility.yul\":20521:20588   */\n      tag_631\n      jump\t// in\n    tag_871:\n        /* \"#utility.yul\":20514:20588   */\n      swap2\n      pop\n        /* \"#utility.yul\":20597:20690   */\n      tag_872\n        /* \"#utility.yul\":20686:20689   */\n      dup3\n        /* \"#utility.yul\":20597:20690   */\n      tag_651\n      jump\t// in\n    tag_872:\n        /* \"#utility.yul\":20715:20717   */\n      0x20\n        /* \"#utility.yul\":20710:20713   */\n      dup3\n        /* \"#utility.yul\":20706:20718   */\n      add\n        /* \"#utility.yul\":20699:20718   */\n      swap1\n      pop\n        /* \"#utility.yul\":20358:20724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20730:21149   */\n    tag_461:\n        /* \"#utility.yul\":20896:20900   */\n      0x00\n        /* \"#utility.yul\":20934:20936   */\n      0x20\n        /* \"#utility.yul\":20923:20932   */\n      dup3\n        /* \"#utility.yul\":20919:20937   */\n      add\n        /* \"#utility.yul\":20911:20937   */\n      swap1\n      pop\n        /* \"#utility.yul\":20983:20992   */\n      dup2\n        /* \"#utility.yul\":20977:20981   */\n      dup2\n        /* \"#utility.yul\":20973:20993   */\n      sub\n        /* \"#utility.yul\":20969:20970   */\n      0x00\n        /* \"#utility.yul\":20958:20967   */\n      dup4\n        /* \"#utility.yul\":20954:20971   */\n      add\n        /* \"#utility.yul\":20947:20994   */\n      mstore\n        /* \"#utility.yul\":21011:21142   */\n      tag_874\n        /* \"#utility.yul\":21137:21141   */\n      dup2\n        /* \"#utility.yul\":21011:21142   */\n      tag_652\n      jump\t// in\n    tag_874:\n        /* \"#utility.yul\":21003:21142   */\n      swap1\n      pop\n        /* \"#utility.yul\":20730:21149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21155:21380   */\n    tag_653:\n        /* \"#utility.yul\":21295:21329   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":21291:21292   */\n      0x00\n        /* \"#utility.yul\":21283:21289   */\n      dup3\n        /* \"#utility.yul\":21279:21293   */\n      add\n        /* \"#utility.yul\":21272:21330   */\n      mstore\n        /* \"#utility.yul\":21364:21372   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21359:21361   */\n      0x20\n        /* \"#utility.yul\":21351:21357   */\n      dup3\n        /* \"#utility.yul\":21347:21362   */\n      add\n        /* \"#utility.yul\":21340:21373   */\n      mstore\n        /* \"#utility.yul\":21155:21380   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21386:21752   */\n    tag_654:\n        /* \"#utility.yul\":21528:21531   */\n      0x00\n        /* \"#utility.yul\":21549:21616   */\n      tag_877\n        /* \"#utility.yul\":21613:21615   */\n      0x26\n        /* \"#utility.yul\":21608:21611   */\n      dup4\n        /* \"#utility.yul\":21549:21616   */\n      tag_631\n      jump\t// in\n    tag_877:\n        /* \"#utility.yul\":21542:21616   */\n      swap2\n      pop\n        /* \"#utility.yul\":21625:21718   */\n      tag_878\n        /* \"#utility.yul\":21714:21717   */\n      dup3\n        /* \"#utility.yul\":21625:21718   */\n      tag_653\n      jump\t// in\n    tag_878:\n        /* \"#utility.yul\":21743:21745   */\n      0x40\n        /* \"#utility.yul\":21738:21741   */\n      dup3\n        /* \"#utility.yul\":21734:21746   */\n      add\n        /* \"#utility.yul\":21727:21746   */\n      swap1\n      pop\n        /* \"#utility.yul\":21386:21752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21758:22177   */\n    tag_487:\n        /* \"#utility.yul\":21924:21928   */\n      0x00\n        /* \"#utility.yul\":21962:21964   */\n      0x20\n        /* \"#utility.yul\":21951:21960   */\n      dup3\n        /* \"#utility.yul\":21947:21965   */\n      add\n        /* \"#utility.yul\":21939:21965   */\n      swap1\n      pop\n        /* \"#utility.yul\":22011:22020   */\n      dup2\n        /* \"#utility.yul\":22005:22009   */\n      dup2\n        /* \"#utility.yul\":22001:22021   */\n      sub\n        /* \"#utility.yul\":21997:21998   */\n      0x00\n        /* \"#utility.yul\":21986:21995   */\n      dup4\n        /* \"#utility.yul\":21982:21999   */\n      add\n        /* \"#utility.yul\":21975:22022   */\n      mstore\n        /* \"#utility.yul\":22039:22170   */\n      tag_880\n        /* \"#utility.yul\":22165:22169   */\n      dup2\n        /* \"#utility.yul\":22039:22170   */\n      tag_654\n      jump\t// in\n    tag_880:\n        /* \"#utility.yul\":22031:22170   */\n      swap1\n      pop\n        /* \"#utility.yul\":21758:22177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22183:22531   */\n    tag_513:\n        /* \"#utility.yul\":22223:22230   */\n      0x00\n        /* \"#utility.yul\":22246:22266   */\n      tag_882\n        /* \"#utility.yul\":22264:22265   */\n      dup3\n        /* \"#utility.yul\":22246:22266   */\n      tag_598\n      jump\t// in\n    tag_882:\n        /* \"#utility.yul\":22241:22266   */\n      swap2\n      pop\n        /* \"#utility.yul\":22280:22300   */\n      tag_883\n        /* \"#utility.yul\":22298:22299   */\n      dup4\n        /* \"#utility.yul\":22280:22300   */\n      tag_598\n      jump\t// in\n    tag_883:\n        /* \"#utility.yul\":22275:22300   */\n      swap3\n      pop\n        /* \"#utility.yul\":22468:22469   */\n      dup2\n        /* \"#utility.yul\":22400:22466   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22396:22470   */\n      div\n        /* \"#utility.yul\":22393:22394   */\n      dup4\n        /* \"#utility.yul\":22390:22471   */\n      gt\n        /* \"#utility.yul\":22385:22386   */\n      dup3\n        /* \"#utility.yul\":22378:22387   */\n      iszero\n        /* \"#utility.yul\":22371:22388   */\n      iszero\n        /* \"#utility.yul\":22367:22472   */\n      and\n        /* \"#utility.yul\":22364:22495   */\n      iszero\n      tag_884\n      jumpi\n        /* \"#utility.yul\":22475:22493   */\n      tag_885\n      tag_648\n      jump\t// in\n    tag_885:\n        /* \"#utility.yul\":22364:22495   */\n    tag_884:\n        /* \"#utility.yul\":22523:22524   */\n      dup3\n        /* \"#utility.yul\":22520:22521   */\n      dup3\n        /* \"#utility.yul\":22516:22525   */\n      mul\n        /* \"#utility.yul\":22505:22525   */\n      swap1\n      pop\n        /* \"#utility.yul\":22183:22531   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22537:22717   */\n    tag_655:\n        /* \"#utility.yul\":22585:22662   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22582:22583   */\n      0x00\n        /* \"#utility.yul\":22575:22663   */\n      mstore\n        /* \"#utility.yul\":22682:22686   */\n      0x12\n        /* \"#utility.yul\":22679:22680   */\n      0x04\n        /* \"#utility.yul\":22672:22687   */\n      mstore\n        /* \"#utility.yul\":22706:22710   */\n      0x24\n        /* \"#utility.yul\":22703:22704   */\n      0x00\n        /* \"#utility.yul\":22696:22711   */\n      revert\n        /* \"#utility.yul\":22723:22908   */\n    tag_515:\n        /* \"#utility.yul\":22763:22764   */\n      0x00\n        /* \"#utility.yul\":22780:22800   */\n      tag_888\n        /* \"#utility.yul\":22798:22799   */\n      dup3\n        /* \"#utility.yul\":22780:22800   */\n      tag_598\n      jump\t// in\n    tag_888:\n        /* \"#utility.yul\":22775:22800   */\n      swap2\n      pop\n        /* \"#utility.yul\":22814:22834   */\n      tag_889\n        /* \"#utility.yul\":22832:22833   */\n      dup4\n        /* \"#utility.yul\":22814:22834   */\n      tag_598\n      jump\t// in\n    tag_889:\n        /* \"#utility.yul\":22809:22834   */\n      swap3\n      pop\n        /* \"#utility.yul\":22853:22854   */\n      dup3\n        /* \"#utility.yul\":22843:22878   */\n      tag_890\n      jumpi\n        /* \"#utility.yul\":22858:22876   */\n      tag_891\n      tag_655\n      jump\t// in\n    tag_891:\n        /* \"#utility.yul\":22843:22878   */\n    tag_890:\n        /* \"#utility.yul\":22900:22901   */\n      dup3\n        /* \"#utility.yul\":22897:22898   */\n      dup3\n        /* \"#utility.yul\":22893:22902   */\n      div\n        /* \"#utility.yul\":22888:22902   */\n      swap1\n      pop\n        /* \"#utility.yul\":22723:22908   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22914:23134   */\n    tag_656:\n        /* \"#utility.yul\":23054:23088   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":23050:23051   */\n      0x00\n        /* \"#utility.yul\":23042:23048   */\n      dup3\n        /* \"#utility.yul\":23038:23052   */\n      add\n        /* \"#utility.yul\":23031:23089   */\n      mstore\n        /* \"#utility.yul\":23123:23126   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23118:23120   */\n      0x20\n        /* \"#utility.yul\":23110:23116   */\n      dup3\n        /* \"#utility.yul\":23106:23121   */\n      add\n        /* \"#utility.yul\":23099:23127   */\n      mstore\n        /* \"#utility.yul\":22914:23134   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23140:23506   */\n    tag_657:\n        /* \"#utility.yul\":23282:23285   */\n      0x00\n        /* \"#utility.yul\":23303:23370   */\n      tag_894\n        /* \"#utility.yul\":23367:23369   */\n      0x21\n        /* \"#utility.yul\":23362:23365   */\n      dup4\n        /* \"#utility.yul\":23303:23370   */\n      tag_631\n      jump\t// in\n    tag_894:\n        /* \"#utility.yul\":23296:23370   */\n      swap2\n      pop\n        /* \"#utility.yul\":23379:23472   */\n      tag_895\n        /* \"#utility.yul\":23468:23471   */\n      dup3\n        /* \"#utility.yul\":23379:23472   */\n      tag_656\n      jump\t// in\n    tag_895:\n        /* \"#utility.yul\":23497:23499   */\n      0x40\n        /* \"#utility.yul\":23492:23495   */\n      dup3\n        /* \"#utility.yul\":23488:23500   */\n      add\n        /* \"#utility.yul\":23481:23500   */\n      swap1\n      pop\n        /* \"#utility.yul\":23140:23506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23512:23931   */\n    tag_518:\n        /* \"#utility.yul\":23678:23682   */\n      0x00\n        /* \"#utility.yul\":23716:23718   */\n      0x20\n        /* \"#utility.yul\":23705:23714   */\n      dup3\n        /* \"#utility.yul\":23701:23719   */\n      add\n        /* \"#utility.yul\":23693:23719   */\n      swap1\n      pop\n        /* \"#utility.yul\":23765:23774   */\n      dup2\n        /* \"#utility.yul\":23759:23763   */\n      dup2\n        /* \"#utility.yul\":23755:23775   */\n      sub\n        /* \"#utility.yul\":23751:23752   */\n      0x00\n        /* \"#utility.yul\":23740:23749   */\n      dup4\n        /* \"#utility.yul\":23736:23753   */\n      add\n        /* \"#utility.yul\":23729:23776   */\n      mstore\n        /* \"#utility.yul\":23793:23924   */\n      tag_897\n        /* \"#utility.yul\":23919:23923   */\n      dup2\n        /* \"#utility.yul\":23793:23924   */\n      tag_657\n      jump\t// in\n    tag_897:\n        /* \"#utility.yul\":23785:23924   */\n      swap1\n      pop\n        /* \"#utility.yul\":23512:23931   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23937:24128   */\n    tag_527:\n        /* \"#utility.yul\":23977:23980   */\n      0x00\n        /* \"#utility.yul\":23996:24016   */\n      tag_899\n        /* \"#utility.yul\":24014:24015   */\n      dup3\n        /* \"#utility.yul\":23996:24016   */\n      tag_598\n      jump\t// in\n    tag_899:\n        /* \"#utility.yul\":23991:24016   */\n      swap2\n      pop\n        /* \"#utility.yul\":24030:24050   */\n      tag_900\n        /* \"#utility.yul\":24048:24049   */\n      dup4\n        /* \"#utility.yul\":24030:24050   */\n      tag_598\n      jump\t// in\n    tag_900:\n        /* \"#utility.yul\":24025:24050   */\n      swap3\n      pop\n        /* \"#utility.yul\":24073:24074   */\n      dup3\n        /* \"#utility.yul\":24070:24071   */\n      dup3\n        /* \"#utility.yul\":24066:24075   */\n      add\n        /* \"#utility.yul\":24059:24075   */\n      swap1\n      pop\n        /* \"#utility.yul\":24094:24097   */\n      dup1\n        /* \"#utility.yul\":24091:24092   */\n      dup3\n        /* \"#utility.yul\":24088:24098   */\n      gt\n        /* \"#utility.yul\":24085:24121   */\n      iszero\n      tag_901\n      jumpi\n        /* \"#utility.yul\":24101:24119   */\n      tag_902\n      tag_648\n      jump\t// in\n    tag_902:\n        /* \"#utility.yul\":24085:24121   */\n    tag_901:\n        /* \"#utility.yul\":23937:24128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24134:24311   */\n    tag_658:\n        /* \"#utility.yul\":24274:24303   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":24270:24271   */\n      0x00\n        /* \"#utility.yul\":24262:24268   */\n      dup3\n        /* \"#utility.yul\":24258:24272   */\n      add\n        /* \"#utility.yul\":24251:24304   */\n      mstore\n        /* \"#utility.yul\":24134:24311   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24317:24683   */\n    tag_659:\n        /* \"#utility.yul\":24459:24462   */\n      0x00\n        /* \"#utility.yul\":24480:24547   */\n      tag_905\n        /* \"#utility.yul\":24544:24546   */\n      0x1b\n        /* \"#utility.yul\":24539:24542   */\n      dup4\n        /* \"#utility.yul\":24480:24547   */\n      tag_631\n      jump\t// in\n    tag_905:\n        /* \"#utility.yul\":24473:24547   */\n      swap2\n      pop\n        /* \"#utility.yul\":24556:24649   */\n      tag_906\n        /* \"#utility.yul\":24645:24648   */\n      dup3\n        /* \"#utility.yul\":24556:24649   */\n      tag_658\n      jump\t// in\n    tag_906:\n        /* \"#utility.yul\":24674:24676   */\n      0x20\n        /* \"#utility.yul\":24669:24672   */\n      dup3\n        /* \"#utility.yul\":24665:24677   */\n      add\n        /* \"#utility.yul\":24658:24677   */\n      swap1\n      pop\n        /* \"#utility.yul\":24317:24683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24689:25108   */\n    tag_530:\n        /* \"#utility.yul\":24855:24859   */\n      0x00\n        /* \"#utility.yul\":24893:24895   */\n      0x20\n        /* \"#utility.yul\":24882:24891   */\n      dup3\n        /* \"#utility.yul\":24878:24896   */\n      add\n        /* \"#utility.yul\":24870:24896   */\n      swap1\n      pop\n        /* \"#utility.yul\":24942:24951   */\n      dup2\n        /* \"#utility.yul\":24936:24940   */\n      dup2\n        /* \"#utility.yul\":24932:24952   */\n      sub\n        /* \"#utility.yul\":24928:24929   */\n      0x00\n        /* \"#utility.yul\":24917:24926   */\n      dup4\n        /* \"#utility.yul\":24913:24930   */\n      add\n        /* \"#utility.yul\":24906:24953   */\n      mstore\n        /* \"#utility.yul\":24970:25101   */\n      tag_908\n        /* \"#utility.yul\":25096:25100   */\n      dup2\n        /* \"#utility.yul\":24970:25101   */\n      tag_659\n      jump\t// in\n    tag_908:\n        /* \"#utility.yul\":24962:25101   */\n      swap1\n      pop\n        /* \"#utility.yul\":24689:25108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25114:25446   */\n    tag_534:\n        /* \"#utility.yul\":25235:25239   */\n      0x00\n        /* \"#utility.yul\":25273:25275   */\n      0x40\n        /* \"#utility.yul\":25262:25271   */\n      dup3\n        /* \"#utility.yul\":25258:25276   */\n      add\n        /* \"#utility.yul\":25250:25276   */\n      swap1\n      pop\n        /* \"#utility.yul\":25286:25357   */\n      tag_910\n        /* \"#utility.yul\":25354:25355   */\n      0x00\n        /* \"#utility.yul\":25343:25352   */\n      dup4\n        /* \"#utility.yul\":25339:25356   */\n      add\n        /* \"#utility.yul\":25330:25336   */\n      dup6\n        /* \"#utility.yul\":25286:25357   */\n      tag_620\n      jump\t// in\n    tag_910:\n        /* \"#utility.yul\":25367:25439   */\n      tag_911\n        /* \"#utility.yul\":25435:25437   */\n      0x20\n        /* \"#utility.yul\":25424:25433   */\n      dup4\n        /* \"#utility.yul\":25420:25438   */\n      add\n        /* \"#utility.yul\":25411:25417   */\n      dup5\n        /* \"#utility.yul\":25367:25439   */\n      tag_599\n      jump\t// in\n    tag_911:\n        /* \"#utility.yul\":25114:25446   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25452:25894   */\n    tag_539:\n        /* \"#utility.yul\":25601:25605   */\n      0x00\n        /* \"#utility.yul\":25639:25641   */\n      0x60\n        /* \"#utility.yul\":25628:25637   */\n      dup3\n        /* \"#utility.yul\":25624:25642   */\n      add\n        /* \"#utility.yul\":25616:25642   */\n      swap1\n      pop\n        /* \"#utility.yul\":25652:25723   */\n      tag_913\n        /* \"#utility.yul\":25720:25721   */\n      0x00\n        /* \"#utility.yul\":25709:25718   */\n      dup4\n        /* \"#utility.yul\":25705:25722   */\n      add\n        /* \"#utility.yul\":25696:25702   */\n      dup7\n        /* \"#utility.yul\":25652:25723   */\n      tag_620\n      jump\t// in\n    tag_913:\n        /* \"#utility.yul\":25733:25805   */\n      tag_914\n        /* \"#utility.yul\":25801:25803   */\n      0x20\n        /* \"#utility.yul\":25790:25799   */\n      dup4\n        /* \"#utility.yul\":25786:25804   */\n      add\n        /* \"#utility.yul\":25777:25783   */\n      dup6\n        /* \"#utility.yul\":25733:25805   */\n      tag_620\n      jump\t// in\n    tag_914:\n        /* \"#utility.yul\":25815:25887   */\n      tag_915\n        /* \"#utility.yul\":25883:25885   */\n      0x40\n        /* \"#utility.yul\":25872:25881   */\n      dup4\n        /* \"#utility.yul\":25868:25886   */\n      add\n        /* \"#utility.yul\":25859:25865   */\n      dup5\n        /* \"#utility.yul\":25815:25887   */\n      tag_599\n      jump\t// in\n    tag_915:\n        /* \"#utility.yul\":25452:25894   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25900:26232   */\n    tag_543:\n        /* \"#utility.yul\":26021:26025   */\n      0x00\n        /* \"#utility.yul\":26059:26061   */\n      0x40\n        /* \"#utility.yul\":26048:26057   */\n      dup3\n        /* \"#utility.yul\":26044:26062   */\n      add\n        /* \"#utility.yul\":26036:26062   */\n      swap1\n      pop\n        /* \"#utility.yul\":26072:26143   */\n      tag_917\n        /* \"#utility.yul\":26140:26141   */\n      0x00\n        /* \"#utility.yul\":26129:26138   */\n      dup4\n        /* \"#utility.yul\":26125:26142   */\n      add\n        /* \"#utility.yul\":26116:26122   */\n      dup6\n        /* \"#utility.yul\":26072:26143   */\n      tag_620\n      jump\t// in\n    tag_917:\n        /* \"#utility.yul\":26153:26225   */\n      tag_918\n        /* \"#utility.yul\":26221:26223   */\n      0x20\n        /* \"#utility.yul\":26210:26219   */\n      dup4\n        /* \"#utility.yul\":26206:26224   */\n      add\n        /* \"#utility.yul\":26197:26203   */\n      dup5\n        /* \"#utility.yul\":26153:26225   */\n      tag_620\n      jump\t// in\n    tag_918:\n        /* \"#utility.yul\":25900:26232   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26238:26479   */\n    tag_660:\n        /* \"#utility.yul\":26378:26412   */\n      0x5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f\n        /* \"#utility.yul\":26374:26375   */\n      0x00\n        /* \"#utility.yul\":26366:26372   */\n      dup3\n        /* \"#utility.yul\":26362:26376   */\n      add\n        /* \"#utility.yul\":26355:26413   */\n      mstore\n        /* \"#utility.yul\":26447:26471   */\n      0x20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":26442:26444   */\n      0x20\n        /* \"#utility.yul\":26434:26440   */\n      dup3\n        /* \"#utility.yul\":26430:26445   */\n      add\n        /* \"#utility.yul\":26423:26472   */\n      mstore\n        /* \"#utility.yul\":26238:26479   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26485:26851   */\n    tag_661:\n        /* \"#utility.yul\":26627:26630   */\n      0x00\n        /* \"#utility.yul\":26648:26715   */\n      tag_921\n        /* \"#utility.yul\":26712:26714   */\n      0x36\n        /* \"#utility.yul\":26707:26710   */\n      dup4\n        /* \"#utility.yul\":26648:26715   */\n      tag_631\n      jump\t// in\n    tag_921:\n        /* \"#utility.yul\":26641:26715   */\n      swap2\n      pop\n        /* \"#utility.yul\":26724:26817   */\n      tag_922\n        /* \"#utility.yul\":26813:26816   */\n      dup3\n        /* \"#utility.yul\":26724:26817   */\n      tag_660\n      jump\t// in\n    tag_922:\n        /* \"#utility.yul\":26842:26844   */\n      0x40\n        /* \"#utility.yul\":26837:26840   */\n      dup3\n        /* \"#utility.yul\":26833:26845   */\n      add\n        /* \"#utility.yul\":26826:26845   */\n      swap1\n      pop\n        /* \"#utility.yul\":26485:26851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26857:27276   */\n    tag_549:\n        /* \"#utility.yul\":27023:27027   */\n      0x00\n        /* \"#utility.yul\":27061:27063   */\n      0x20\n        /* \"#utility.yul\":27050:27059   */\n      dup3\n        /* \"#utility.yul\":27046:27064   */\n      add\n        /* \"#utility.yul\":27038:27064   */\n      swap1\n      pop\n        /* \"#utility.yul\":27110:27119   */\n      dup2\n        /* \"#utility.yul\":27104:27108   */\n      dup2\n        /* \"#utility.yul\":27100:27120   */\n      sub\n        /* \"#utility.yul\":27096:27097   */\n      0x00\n        /* \"#utility.yul\":27085:27094   */\n      dup4\n        /* \"#utility.yul\":27081:27098   */\n      add\n        /* \"#utility.yul\":27074:27121   */\n      mstore\n        /* \"#utility.yul\":27138:27269   */\n      tag_924\n        /* \"#utility.yul\":27264:27268   */\n      dup2\n        /* \"#utility.yul\":27138:27269   */\n      tag_661\n      jump\t// in\n    tag_924:\n        /* \"#utility.yul\":27130:27269   */\n      swap1\n      pop\n        /* \"#utility.yul\":26857:27276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27282:27381   */\n    tag_662:\n        /* \"#utility.yul\":27334:27340   */\n      0x00\n        /* \"#utility.yul\":27368:27373   */\n      dup2\n        /* \"#utility.yul\":27362:27374   */\n      mload\n        /* \"#utility.yul\":27352:27374   */\n      swap1\n      pop\n        /* \"#utility.yul\":27282:27381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27387:27633   */\n    tag_663:\n        /* \"#utility.yul\":27468:27469   */\n      0x00\n        /* \"#utility.yul\":27478:27591   */\n    tag_927:\n        /* \"#utility.yul\":27492:27498   */\n      dup4\n        /* \"#utility.yul\":27489:27490   */\n      dup2\n        /* \"#utility.yul\":27486:27499   */\n      lt\n        /* \"#utility.yul\":27478:27591   */\n      iszero\n      tag_929\n      jumpi\n        /* \"#utility.yul\":27577:27578   */\n      dup1\n        /* \"#utility.yul\":27572:27575   */\n      dup3\n        /* \"#utility.yul\":27568:27579   */\n      add\n        /* \"#utility.yul\":27562:27580   */\n      mload\n        /* \"#utility.yul\":27558:27559   */\n      dup2\n        /* \"#utility.yul\":27553:27556   */\n      dup5\n        /* \"#utility.yul\":27549:27560   */\n      add\n        /* \"#utility.yul\":27542:27581   */\n      mstore\n        /* \"#utility.yul\":27514:27516   */\n      0x20\n        /* \"#utility.yul\":27511:27512   */\n      dup2\n        /* \"#utility.yul\":27507:27517   */\n      add\n        /* \"#utility.yul\":27502:27517   */\n      swap1\n      pop\n        /* \"#utility.yul\":27478:27591   */\n      jump(tag_927)\n    tag_929:\n        /* \"#utility.yul\":27625:27626   */\n      0x00\n        /* \"#utility.yul\":27616:27622   */\n      dup5\n        /* \"#utility.yul\":27611:27614   */\n      dup5\n        /* \"#utility.yul\":27607:27623   */\n      add\n        /* \"#utility.yul\":27600:27627   */\n      mstore\n        /* \"#utility.yul\":27449:27633   */\n      pop\n        /* \"#utility.yul\":27387:27633   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27639:27741   */\n    tag_664:\n        /* \"#utility.yul\":27680:27686   */\n      0x00\n        /* \"#utility.yul\":27731:27733   */\n      0x1f\n        /* \"#utility.yul\":27727:27734   */\n      not\n        /* \"#utility.yul\":27722:27724   */\n      0x1f\n        /* \"#utility.yul\":27715:27720   */\n      dup4\n        /* \"#utility.yul\":27711:27725   */\n      add\n        /* \"#utility.yul\":27707:27735   */\n      and\n        /* \"#utility.yul\":27697:27735   */\n      swap1\n      pop\n        /* \"#utility.yul\":27639:27741   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27747:28124   */\n    tag_665:\n        /* \"#utility.yul\":27835:27838   */\n      0x00\n        /* \"#utility.yul\":27863:27902   */\n      tag_932\n        /* \"#utility.yul\":27896:27901   */\n      dup3\n        /* \"#utility.yul\":27863:27902   */\n      tag_662\n      jump\t// in\n    tag_932:\n        /* \"#utility.yul\":27918:27989   */\n      tag_933\n        /* \"#utility.yul\":27982:27988   */\n      dup2\n        /* \"#utility.yul\":27977:27980   */\n      dup6\n        /* \"#utility.yul\":27918:27989   */\n      tag_631\n      jump\t// in\n    tag_933:\n        /* \"#utility.yul\":27911:27989   */\n      swap4\n      pop\n        /* \"#utility.yul\":27998:28063   */\n      tag_934\n        /* \"#utility.yul\":28056:28062   */\n      dup2\n        /* \"#utility.yul\":28051:28054   */\n      dup6\n        /* \"#utility.yul\":28044:28048   */\n      0x20\n        /* \"#utility.yul\":28037:28042   */\n      dup7\n        /* \"#utility.yul\":28033:28049   */\n      add\n        /* \"#utility.yul\":27998:28063   */\n      tag_663\n      jump\t// in\n    tag_934:\n        /* \"#utility.yul\":28088:28117   */\n      tag_935\n        /* \"#utility.yul\":28110:28116   */\n      dup2\n        /* \"#utility.yul\":28088:28117   */\n      tag_664\n      jump\t// in\n    tag_935:\n        /* \"#utility.yul\":28083:28086   */\n      dup5\n        /* \"#utility.yul\":28079:28118   */\n      add\n        /* \"#utility.yul\":28072:28118   */\n      swap2\n      pop\n        /* \"#utility.yul\":27839:28124   */\n      pop\n        /* \"#utility.yul\":27747:28124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28130:28443   */\n    tag_556:\n        /* \"#utility.yul\":28243:28247   */\n      0x00\n        /* \"#utility.yul\":28281:28283   */\n      0x20\n        /* \"#utility.yul\":28270:28279   */\n      dup3\n        /* \"#utility.yul\":28266:28284   */\n      add\n        /* \"#utility.yul\":28258:28284   */\n      swap1\n      pop\n        /* \"#utility.yul\":28330:28339   */\n      dup2\n        /* \"#utility.yul\":28324:28328   */\n      dup2\n        /* \"#utility.yul\":28320:28340   */\n      sub\n        /* \"#utility.yul\":28316:28317   */\n      0x00\n        /* \"#utility.yul\":28305:28314   */\n      dup4\n        /* \"#utility.yul\":28301:28318   */\n      add\n        /* \"#utility.yul\":28294:28341   */\n      mstore\n        /* \"#utility.yul\":28358:28436   */\n      tag_937\n        /* \"#utility.yul\":28431:28435   */\n      dup2\n        /* \"#utility.yul\":28422:28428   */\n      dup5\n        /* \"#utility.yul\":28358:28436   */\n      tag_665\n      jump\t// in\n    tag_937:\n        /* \"#utility.yul\":28350:28436   */\n      swap1\n      pop\n        /* \"#utility.yul\":28130:28443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28449:28643   */\n    tag_562:\n        /* \"#utility.yul\":28489:28493   */\n      0x00\n        /* \"#utility.yul\":28509:28529   */\n      tag_939\n        /* \"#utility.yul\":28527:28528   */\n      dup3\n        /* \"#utility.yul\":28509:28529   */\n      tag_598\n      jump\t// in\n    tag_939:\n        /* \"#utility.yul\":28504:28529   */\n      swap2\n      pop\n        /* \"#utility.yul\":28543:28563   */\n      tag_940\n        /* \"#utility.yul\":28561:28562   */\n      dup4\n        /* \"#utility.yul\":28543:28563   */\n      tag_598\n      jump\t// in\n    tag_940:\n        /* \"#utility.yul\":28538:28563   */\n      swap3\n      pop\n        /* \"#utility.yul\":28587:28588   */\n      dup3\n        /* \"#utility.yul\":28584:28585   */\n      dup3\n        /* \"#utility.yul\":28580:28589   */\n      sub\n        /* \"#utility.yul\":28572:28589   */\n      swap1\n      pop\n        /* \"#utility.yul\":28611:28612   */\n      dup2\n        /* \"#utility.yul\":28605:28609   */\n      dup2\n        /* \"#utility.yul\":28602:28613   */\n      gt\n        /* \"#utility.yul\":28599:28636   */\n      iszero\n      tag_941\n      jumpi\n        /* \"#utility.yul\":28616:28634   */\n      tag_942\n      tag_648\n      jump\t// in\n    tag_942:\n        /* \"#utility.yul\":28599:28636   */\n    tag_941:\n        /* \"#utility.yul\":28449:28643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28649:28786   */\n    tag_666:\n        /* \"#utility.yul\":28703:28708   */\n      0x00\n        /* \"#utility.yul\":28734:28740   */\n      dup2\n        /* \"#utility.yul\":28728:28741   */\n      mload\n        /* \"#utility.yul\":28719:28741   */\n      swap1\n      pop\n        /* \"#utility.yul\":28750:28780   */\n      tag_944\n        /* \"#utility.yul\":28774:28779   */\n      dup2\n        /* \"#utility.yul\":28750:28780   */\n      tag_618\n      jump\t// in\n    tag_944:\n        /* \"#utility.yul\":28649:28786   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28792:29137   */\n    tag_568:\n        /* \"#utility.yul\":28859:28865   */\n      0x00\n        /* \"#utility.yul\":28908:28910   */\n      0x20\n        /* \"#utility.yul\":28896:28905   */\n      dup3\n        /* \"#utility.yul\":28887:28894   */\n      dup5\n        /* \"#utility.yul\":28883:28906   */\n      sub\n        /* \"#utility.yul\":28879:28911   */\n      slt\n        /* \"#utility.yul\":28876:28995   */\n      iszero\n      tag_946\n      jumpi\n        /* \"#utility.yul\":28914:28993   */\n      tag_947\n      tag_601\n      jump\t// in\n    tag_947:\n        /* \"#utility.yul\":28876:28995   */\n    tag_946:\n        /* \"#utility.yul\":29034:29035   */\n      0x00\n        /* \"#utility.yul\":29059:29120   */\n      tag_948\n        /* \"#utility.yul\":29112:29119   */\n      dup5\n        /* \"#utility.yul\":29103:29109   */\n      dup3\n        /* \"#utility.yul\":29092:29101   */\n      dup6\n        /* \"#utility.yul\":29088:29110   */\n      add\n        /* \"#utility.yul\":29059:29120   */\n      tag_666\n      jump\t// in\n    tag_948:\n        /* \"#utility.yul\":29049:29120   */\n      swap2\n      pop\n        /* \"#utility.yul\":29005:29130   */\n      pop\n        /* \"#utility.yul\":28792:29137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29143:29372   */\n    tag_667:\n        /* \"#utility.yul\":29283:29317   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":29279:29280   */\n      0x00\n        /* \"#utility.yul\":29271:29277   */\n      dup3\n        /* \"#utility.yul\":29267:29281   */\n      add\n        /* \"#utility.yul\":29260:29318   */\n      mstore\n        /* \"#utility.yul\":29352:29364   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29347:29349   */\n      0x20\n        /* \"#utility.yul\":29339:29345   */\n      dup3\n        /* \"#utility.yul\":29335:29350   */\n      add\n        /* \"#utility.yul\":29328:29365   */\n      mstore\n        /* \"#utility.yul\":29143:29372   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29378:29744   */\n    tag_668:\n        /* \"#utility.yul\":29520:29523   */\n      0x00\n        /* \"#utility.yul\":29541:29608   */\n      tag_951\n        /* \"#utility.yul\":29605:29607   */\n      0x2a\n        /* \"#utility.yul\":29600:29603   */\n      dup4\n        /* \"#utility.yul\":29541:29608   */\n      tag_631\n      jump\t// in\n    tag_951:\n        /* \"#utility.yul\":29534:29608   */\n      swap2\n      pop\n        /* \"#utility.yul\":29617:29710   */\n      tag_952\n        /* \"#utility.yul\":29706:29709   */\n      dup3\n        /* \"#utility.yul\":29617:29710   */\n      tag_667\n      jump\t// in\n    tag_952:\n        /* \"#utility.yul\":29735:29737   */\n      0x40\n        /* \"#utility.yul\":29730:29733   */\n      dup3\n        /* \"#utility.yul\":29726:29738   */\n      add\n        /* \"#utility.yul\":29719:29738   */\n      swap1\n      pop\n        /* \"#utility.yul\":29378:29744   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29750:30169   */\n    tag_571:\n        /* \"#utility.yul\":29916:29920   */\n      0x00\n        /* \"#utility.yul\":29954:29956   */\n      0x20\n        /* \"#utility.yul\":29943:29952   */\n      dup3\n        /* \"#utility.yul\":29939:29957   */\n      add\n        /* \"#utility.yul\":29931:29957   */\n      swap1\n      pop\n        /* \"#utility.yul\":30003:30012   */\n      dup2\n        /* \"#utility.yul\":29997:30001   */\n      dup2\n        /* \"#utility.yul\":29993:30013   */\n      sub\n        /* \"#utility.yul\":29989:29990   */\n      0x00\n        /* \"#utility.yul\":29978:29987   */\n      dup4\n        /* \"#utility.yul\":29974:29991   */\n      add\n        /* \"#utility.yul\":29967:30014   */\n      mstore\n        /* \"#utility.yul\":30031:30162   */\n      tag_954\n        /* \"#utility.yul\":30157:30161   */\n      dup2\n        /* \"#utility.yul\":30031:30162   */\n      tag_668\n      jump\t// in\n    tag_954:\n        /* \"#utility.yul\":30023:30162   */\n      swap1\n      pop\n        /* \"#utility.yul\":29750:30169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30175:30400   */\n    tag_669:\n        /* \"#utility.yul\":30315:30349   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":30311:30312   */\n      0x00\n        /* \"#utility.yul\":30303:30309   */\n      dup3\n        /* \"#utility.yul\":30299:30313   */\n      add\n        /* \"#utility.yul\":30292:30350   */\n      mstore\n        /* \"#utility.yul\":30384:30392   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30379:30381   */\n      0x20\n        /* \"#utility.yul\":30371:30377   */\n      dup3\n        /* \"#utility.yul\":30367:30382   */\n      add\n        /* \"#utility.yul\":30360:30393   */\n      mstore\n        /* \"#utility.yul\":30175:30400   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30406:30772   */\n    tag_670:\n        /* \"#utility.yul\":30548:30551   */\n      0x00\n        /* \"#utility.yul\":30569:30636   */\n      tag_957\n        /* \"#utility.yul\":30633:30635   */\n      0x26\n        /* \"#utility.yul\":30628:30631   */\n      dup4\n        /* \"#utility.yul\":30569:30636   */\n      tag_631\n      jump\t// in\n    tag_957:\n        /* \"#utility.yul\":30562:30636   */\n      swap2\n      pop\n        /* \"#utility.yul\":30645:30738   */\n      tag_958\n        /* \"#utility.yul\":30734:30737   */\n      dup3\n        /* \"#utility.yul\":30645:30738   */\n      tag_669\n      jump\t// in\n    tag_958:\n        /* \"#utility.yul\":30763:30765   */\n      0x40\n        /* \"#utility.yul\":30758:30761   */\n      dup3\n        /* \"#utility.yul\":30754:30766   */\n      add\n        /* \"#utility.yul\":30747:30766   */\n      swap1\n      pop\n        /* \"#utility.yul\":30406:30772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30778:31197   */\n    tag_578:\n        /* \"#utility.yul\":30944:30948   */\n      0x00\n        /* \"#utility.yul\":30982:30984   */\n      0x20\n        /* \"#utility.yul\":30971:30980   */\n      dup3\n        /* \"#utility.yul\":30967:30985   */\n      add\n        /* \"#utility.yul\":30959:30985   */\n      swap1\n      pop\n        /* \"#utility.yul\":31031:31040   */\n      dup2\n        /* \"#utility.yul\":31025:31029   */\n      dup2\n        /* \"#utility.yul\":31021:31041   */\n      sub\n        /* \"#utility.yul\":31017:31018   */\n      0x00\n        /* \"#utility.yul\":31006:31015   */\n      dup4\n        /* \"#utility.yul\":31002:31019   */\n      add\n        /* \"#utility.yul\":30995:31042   */\n      mstore\n        /* \"#utility.yul\":31059:31190   */\n      tag_960\n        /* \"#utility.yul\":31185:31189   */\n      dup2\n        /* \"#utility.yul\":31059:31190   */\n      tag_670\n      jump\t// in\n    tag_960:\n        /* \"#utility.yul\":31051:31190   */\n      swap1\n      pop\n        /* \"#utility.yul\":30778:31197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31203:31382   */\n    tag_671:\n        /* \"#utility.yul\":31343:31374   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":31339:31340   */\n      0x00\n        /* \"#utility.yul\":31331:31337   */\n      dup3\n        /* \"#utility.yul\":31327:31341   */\n      add\n        /* \"#utility.yul\":31320:31375   */\n      mstore\n        /* \"#utility.yul\":31203:31382   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31388:31754   */\n    tag_672:\n        /* \"#utility.yul\":31530:31533   */\n      0x00\n        /* \"#utility.yul\":31551:31618   */\n      tag_963\n        /* \"#utility.yul\":31615:31617   */\n      0x1d\n        /* \"#utility.yul\":31610:31613   */\n      dup4\n        /* \"#utility.yul\":31551:31618   */\n      tag_631\n      jump\t// in\n    tag_963:\n        /* \"#utility.yul\":31544:31618   */\n      swap2\n      pop\n        /* \"#utility.yul\":31627:31720   */\n      tag_964\n        /* \"#utility.yul\":31716:31719   */\n      dup3\n        /* \"#utility.yul\":31627:31720   */\n      tag_671\n      jump\t// in\n    tag_964:\n        /* \"#utility.yul\":31745:31747   */\n      0x20\n        /* \"#utility.yul\":31740:31743   */\n      dup3\n        /* \"#utility.yul\":31736:31748   */\n      add\n        /* \"#utility.yul\":31729:31748   */\n      swap1\n      pop\n        /* \"#utility.yul\":31388:31754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31760:32179   */\n    tag_583:\n        /* \"#utility.yul\":31926:31930   */\n      0x00\n        /* \"#utility.yul\":31964:31966   */\n      0x20\n        /* \"#utility.yul\":31953:31962   */\n      dup3\n        /* \"#utility.yul\":31949:31967   */\n      add\n        /* \"#utility.yul\":31941:31967   */\n      swap1\n      pop\n        /* \"#utility.yul\":32013:32022   */\n      dup2\n        /* \"#utility.yul\":32007:32011   */\n      dup2\n        /* \"#utility.yul\":32003:32023   */\n      sub\n        /* \"#utility.yul\":31999:32000   */\n      0x00\n        /* \"#utility.yul\":31988:31997   */\n      dup4\n        /* \"#utility.yul\":31984:32001   */\n      add\n        /* \"#utility.yul\":31977:32024   */\n      mstore\n        /* \"#utility.yul\":32041:32172   */\n      tag_966\n        /* \"#utility.yul\":32167:32171   */\n      dup2\n        /* \"#utility.yul\":32041:32172   */\n      tag_672\n      jump\t// in\n    tag_966:\n        /* \"#utility.yul\":32033:32172   */\n      swap1\n      pop\n        /* \"#utility.yul\":31760:32179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32185:32283   */\n    tag_673:\n        /* \"#utility.yul\":32236:32242   */\n      0x00\n        /* \"#utility.yul\":32270:32275   */\n      dup2\n        /* \"#utility.yul\":32264:32276   */\n      mload\n        /* \"#utility.yul\":32254:32276   */\n      swap1\n      pop\n        /* \"#utility.yul\":32185:32283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32289:32436   */\n    tag_674:\n        /* \"#utility.yul\":32390:32401   */\n      0x00\n        /* \"#utility.yul\":32427:32430   */\n      dup2\n        /* \"#utility.yul\":32412:32430   */\n      swap1\n      pop\n        /* \"#utility.yul\":32289:32436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32442:32828   */\n    tag_675:\n        /* \"#utility.yul\":32546:32549   */\n      0x00\n        /* \"#utility.yul\":32574:32612   */\n      tag_970\n        /* \"#utility.yul\":32606:32611   */\n      dup3\n        /* \"#utility.yul\":32574:32612   */\n      tag_673\n      jump\t// in\n    tag_970:\n        /* \"#utility.yul\":32628:32716   */\n      tag_971\n        /* \"#utility.yul\":32709:32715   */\n      dup2\n        /* \"#utility.yul\":32704:32707   */\n      dup6\n        /* \"#utility.yul\":32628:32716   */\n      tag_674\n      jump\t// in\n    tag_971:\n        /* \"#utility.yul\":32621:32716   */\n      swap4\n      pop\n        /* \"#utility.yul\":32725:32790   */\n      tag_972\n        /* \"#utility.yul\":32783:32789   */\n      dup2\n        /* \"#utility.yul\":32778:32781   */\n      dup6\n        /* \"#utility.yul\":32771:32775   */\n      0x20\n        /* \"#utility.yul\":32764:32769   */\n      dup7\n        /* \"#utility.yul\":32760:32776   */\n      add\n        /* \"#utility.yul\":32725:32790   */\n      tag_663\n      jump\t// in\n    tag_972:\n        /* \"#utility.yul\":32815:32821   */\n      dup1\n        /* \"#utility.yul\":32810:32813   */\n      dup5\n        /* \"#utility.yul\":32806:32822   */\n      add\n        /* \"#utility.yul\":32799:32822   */\n      swap2\n      pop\n        /* \"#utility.yul\":32550:32828   */\n      pop\n        /* \"#utility.yul\":32442:32828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32834:33105   */\n    tag_585:\n        /* \"#utility.yul\":32964:32967   */\n      0x00\n        /* \"#utility.yul\":32986:33079   */\n      tag_974\n        /* \"#utility.yul\":33075:33078   */\n      dup3\n        /* \"#utility.yul\":33066:33072   */\n      dup5\n        /* \"#utility.yul\":32986:33079   */\n      tag_675\n      jump\t// in\n    tag_974:\n        /* \"#utility.yul\":32979:33079   */\n      swap2\n      pop\n        /* \"#utility.yul\":33096:33099   */\n      dup2\n        /* \"#utility.yul\":33089:33099   */\n      swap1\n      pop\n        /* \"#utility.yul\":32834:33105   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122060788b95bd3741226b6210d001709cdafdab6ac0a8524387fffb2f40a7d3a9cb64736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1064": {
									"entryPoint": null,
									"id": 1064,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 434,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 442,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$286t_uint256t_uint256_fromMemory": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$286": {
									"entryPoint": 695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$286": {
									"entryPoint": 715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2071:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "637:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "609:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "619:7:1",
														"type": ""
													}
												],
												"src": "568:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "812:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "821:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "824:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$286",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "754:57:1"
															},
															"nodeType": "YulIf",
															"src": "751:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "734:5:1",
														"type": ""
													}
												],
												"src": "684:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "927:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "958:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "895:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "903:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "911:5:1",
														"type": ""
													}
												],
												"src": "840:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1062:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1072:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1083:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1072:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1044:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1054:7:1",
														"type": ""
													}
												],
												"src": "1017:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1143:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1166:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1191:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1173:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1173:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1163:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1163:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1156:43:1"
															},
															"nodeType": "YulIf",
															"src": "1153:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1136:5:1",
														"type": ""
													}
												],
												"src": "1100:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1291:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1301:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1316:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1310:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1301:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1359:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1332:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1332:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1269:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1277:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1285:5:1",
														"type": ""
													}
												],
												"src": "1228:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1502:566:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1548:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1550:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1550:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1550:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1523:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1532:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1519:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1519:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1544:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1515:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1515:32:1"
															},
															"nodeType": "YulIf",
															"src": "1512:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1641:142:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1656:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1670:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1660:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1685:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1745:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1756:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1741:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1741:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1765:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1695:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1695:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1685:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1793:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1808:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1822:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1812:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1838:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1884:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1895:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1880:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1880:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1904:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1848:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1838:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1932:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1947:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1961:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1951:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1977:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2023:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2034:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2019:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2019:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2043:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1987:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1977:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$286t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1456:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1467:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1479:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1487:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1495:6:1",
														"type": ""
													}
												],
												"src": "1377:691:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$286(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$286(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$286(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$286_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$286t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$286_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600160045560006008553480156200001b57600080fd5b5060405162004b4238038062004b42833981810160405281019062000041919062000337565b6200006162000055620001b260201b60201c565b620001ba60201b60201c565b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816003819055508060098190555060066040518060800160405280600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016103e8815260200160095481526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015550506103e860088190555050505062000393565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002b08262000283565b9050919050565b6000620002c482620002a3565b9050919050565b620002d681620002b7565b8114620002e257600080fd5b50565b600081519050620002f681620002cb565b92915050565b6000819050919050565b6200031181620002fc565b81146200031d57600080fd5b50565b600081519050620003318162000306565b92915050565b6000806000606084860312156200035357620003526200027e565b5b60006200036386828701620002e5565b9350506020620003768682870162000320565b9250506040620003898682870162000320565b9150509250925092565b61479f80620003a36000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80635ffe6146116101305780638da5cb5b116100b8578063cf35fddf1161007c578063cf35fddf1461062c578063d209db8c14610648578063e2bbb15814610678578063f2fde38b14610694578063f3239ab5146106b057610232565b80638da5cb5b146105735780638dbb1e3a1461059157806393f1a40b146105c1578063c11490cc146105f2578063cb3cba551461060e57610232565b8063715018a6116100ff578063715018a6146104df5780637cd07e47146104e957806383e32135146105075780638aa28550146105255780638c51793b1461054357610232565b80635ffe61461461046c57806361c1b72414610488578063630b5ba1146104b957806364482f79146104c357610232565b80633df7aff3116101be5780634ea2813c116101825780634ea2813c146103de57806351eb05a6146103fa5780635312ea8e1461041657806356b4685f146104325780635990c5691461044e57610232565b80633df7aff31461035057806341441d3b1461036c578063441a3e7014610388578063454b0608146103a457806348cd4cb1146103c057610232565b806317caf6f11161020557806317caf6f1146102c05780631d5fbd87146102de5780631eaaa045146102fa57806322f585411461031657806323cf31181461033457610232565b8063081e3eda146102375780630ba33a58146102555780631058d281146102715780631526fe271461028d575b600080fd5b61023f6106e0565b60405161024c91906136a3565b60405180910390f35b61026f600480360381019061026a9190613721565b6106ed565b005b61028b6004803603810190610286919061377a565b6107ad565b005b6102a760048036038101906102a2919061377a565b610a6c565b6040516102b79493929190613806565b60405180910390f35b6102c8610acc565b6040516102d591906136a3565b60405180910390f35b6102f860048036038101906102f3919061384b565b610ad2565b005b610314600480360381019061030f9190613901565b610f56565b005b61031e6110e3565b60405161032b9190613963565b60405180910390f35b61034e600480360381019061034991906139bc565b611109565b005b61036a6004803603810190610365919061377a565b6111c9565b005b6103866004803603810190610381919061377a565b61124f565b005b6103a2600480360381019061039d919061384b565b61151a565b005b6103be60048036038101906103b9919061377a565b611810565b005b6103c8611b62565b6040516103d591906136a3565b60405180910390f35b6103f860048036038101906103f39190613a27565b611b68565b005b610414600480360381019061040f919061377a565b611c91565b005b610430600480360381019061042b919061377a565b611e30565b005b61044c60048036038101906104479190613721565b611f69565b005b610456612029565b60405161046391906136a3565b60405180910390f35b6104866004803603810190610481919061377a565b61202f565b005b6104a2600480360381019061049d919061377a565b6120b5565b6040516104b0929190613a88565b60405180910390f35b6104c1612109565b005b6104dd60048036038101906104d89190613ab1565b61213c565b005b6104e7612248565b005b6104f16122d0565b6040516104fe9190613b25565b60405180910390f35b61050f6122f6565b60405161051c9190613963565b60405180910390f35b61052d61231c565b60405161053a91906136a3565b60405180910390f35b61055d60048036038101906105589190613721565b612322565b60405161056a91906136a3565b60405180910390f35b61057b61236b565b6040516105889190613963565b60405180910390f35b6105ab60048036038101906105a6919061384b565b612394565b6040516105b891906136a3565b60405180910390f35b6105db60048036038101906105d69190613b40565b6123c5565b6040516105e9929190613b80565b60405180910390f35b61060c6004803603810190610607919061384b565b6123f6565b005b6106166124a0565b6040516106239190613ba9565b60405180910390f35b61064660048036038101906106419190613b40565b6124c6565b005b610662600480360381019061065d9190613721565b61287a565b60405161066f91906136a3565b60405180910390f35b610692600480360381019061068d919061384b565b612892565b005b6106ae60048036038101906106a99190613721565b612b94565b005b6106ca60048036038101906106c59190613b40565b612c8b565b6040516106d791906136a3565b60405180910390f35b6000600680549050905090565b6106f5612eb0565b73ffffffffffffffffffffffffffffffffffffffff1661071361236b565b73ffffffffffffffffffffffffffffffffffffffff1614610769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076090613c21565b60405180910390fd5b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060066000815481106107c4576107c3613c41565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160000154101561086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690613cbc565b60405180910390fd5b6108796000611c91565b60006108c382600101546108b564e8d4a510006108a787600301548760000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b612f7c90919063ffffffff16565b905060008111156109645761092081600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612fc690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008411156109dc57610984848360000154612f7c90919063ffffffff16565b82600001819055506109db33858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130249092919063ffffffff16565b5b610a0e64e8d4a51000610a0085600301548560000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b826001018190555060003373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56886604051610a5e91906136a3565b60405180910390a350505050565b60068181548110610a7c57600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60085481565b600060068281548110610ae857610ae7613c41565b5b9060005260206000209060040201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610bb49190613963565b602060405180830381865afa158015610bd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf59190613cf1565b9050836002015443118015610c0b575060008114155b15610ca6576000610c20856002015443612394565b90506000610c63600854610c558860010154610c4760035487612eb890919063ffffffff16565b612eb890919063ffffffff16565b612f3290919063ffffffff16565b9050610ca1610c9284610c8464e8d4a5100085612eb890919063ffffffff16565b612f3290919063ffffffff16565b85612fc690919063ffffffff16565b935050505b6000610cec8460010154610cde64e8d4a51000610cd0878960000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b612f7c90919063ffffffff16565b9050600060018881548110610d0457610d03613c41565b5b906000526020600020906002020190506000610d68600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484612fc690919063ffffffff16565b90508160010154811115610d9e5760008803610d8957610d8860006107ad565b5b60008814610d9d57610d9c88600061151a565b5b5b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826001015410610e23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1a90613d6a565b60405180910390fd5b610e798260010154600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612f7c90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166317e5883c336040518263ffffffff1660e01b8152600401610f199190613963565b600060405180830381600087803b158015610f3357600080fd5b505af1158015610f47573d6000803e3d6000fd5b50505050505050505050505050565b610f5e612eb0565b73ffffffffffffffffffffffffffffffffffffffff16610f7c61236b565b73ffffffffffffffffffffffffffffffffffffffff1614610fd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc990613c21565b60405180910390fd5b8015610fe157610fe0612109565b5b60006009544311610ff457600954610ff6565b435b905061100d84600854612fc690919063ffffffff16565b600881905550600660405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505050505050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611111612eb0565b73ffffffffffffffffffffffffffffffffffffffff1661112f61236b565b73ffffffffffffffffffffffffffffffffffffffff1614611185576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117c90613c21565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6111d1612eb0565b73ffffffffffffffffffffffffffffffffffffffff166111ef61236b565b73ffffffffffffffffffffffffffffffffffffffff1614611245576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123c90613c21565b60405180910390fd5b8060038190555050565b60008111611292576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128990613dd6565b60405180910390fd5b600060066000815481106112a9576112a8613c41565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506113176000611c91565b60008160000154111561141157600061136e826001015461136064e8d4a5100061135287600301548760000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b612f7c90919063ffffffff16565b9050600081111561140f576113cb81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612fc690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b600083111561148b5761146b3330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130aa909392919063ffffffff16565b611482838260000154612fc690919063ffffffff16565b81600001819055505b6114bd64e8d4a510006114af84600301548460000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b816001018190555060003373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158560405161150d91906136a3565b60405180910390a3505050565b6000820361155d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155490613e42565b60405180910390fd5b60006006838154811061157357611572613c41565b5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160000154101561161e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161590613cbc565b60405180910390fd5b61162784611c91565b6000611671826001015461166364e8d4a5100061165587600301548760000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b612f7c90919063ffffffff16565b90506000811115611712576116ce81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612fc690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b611729848360000154612f7c90919063ffffffff16565b826000018190555061176364e8d4a5100061175585600301548560000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b82600101819055506117ba33858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130249092919063ffffffff16565b843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688660405161180191906136a3565b60405180910390a35050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036118a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189890613eae565b60405180910390fd5b6000600682815481106118b7576118b6613c41565b5b9060005260206000209060040201905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161192b9190613963565b602060405180830381865afa158015611948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196c9190613cf1565b90506119bb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166131339092919063ffffffff16565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5494bb846040518263ffffffff1660e01b8152600401611a189190613ba9565b6020604051808303816000875af1158015611a37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5b9190613ee3565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611a969190613963565b602060405180830381865afa158015611ab3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad79190613cf1565b8214611b18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0f90613f5c565b60405180910390fd5b808460000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60095481565b611b70612eb0565b73ffffffffffffffffffffffffffffffffffffffff16611b8e61236b565b73ffffffffffffffffffffffffffffffffffffffff1614611be4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bdb90613c21565b60405180910390fd5b600160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b600060068281548110611ca757611ca6613c41565b5b9060005260206000209060040201905080600201544311611cc85750611e2d565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611d279190613963565b602060405180830381865afa158015611d44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d689190613cf1565b905060008111611d82574382600201819055505050611e2d565b6000611d92836002015443612394565b90506000611dd5600854611dc78660010154611db960035487612eb890919063ffffffff16565b612eb890919063ffffffff16565b612f3290919063ffffffff16565b9050611e17611e0484611df664e8d4a5100085612eb890919063ffffffff16565b612f3290919063ffffffff16565b8560030154612fc690919063ffffffff16565b8460030181905550438460020181905550505050505b50565b600060068281548110611e4657611e45613c41565b5b9060005260206000209060040201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611efd3382600001548460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130249092919063ffffffff16565b823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360000154604051611f4891906136a3565b60405180910390a36000816000018190555060008160010181905550505050565b611f71612eb0565b73ffffffffffffffffffffffffffffffffffffffff16611f8f61236b565b73ffffffffffffffffffffffffffffffffffffffff1614611fe5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fdc90613c21565b60405180910390fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60035481565b612037612eb0565b73ffffffffffffffffffffffffffffffffffffffff1661205561236b565b73ffffffffffffffffffffffffffffffffffffffff16146120ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120a290613c21565b60405180910390fd5b8060048190555050565b600181815481106120c557600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6000600680549050905060005b818110156121385761212781611c91565b8061213190613fab565b9050612116565b5050565b612144612eb0565b73ffffffffffffffffffffffffffffffffffffffff1661216261236b565b73ffffffffffffffffffffffffffffffffffffffff16146121b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121af90613c21565b60405180910390fd5b80156121c7576121c6612109565b5b61221382612205600686815481106121e2576121e1613c41565b5b906000526020600020906004020160010154600854612f7c90919063ffffffff16565b612fc690919063ffffffff16565b600881905550816006848154811061222e5761222d613c41565b5b906000526020600020906004020160010181905550505050565b612250612eb0565b73ffffffffffffffffffffffffffffffffffffffff1661226e61236b565b73ffffffffffffffffffffffffffffffffffffffff16146122c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122bb90613c21565b60405180910390fd5b6122ce6000613282565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006123bd6004546123af8585612f7c90919063ffffffff16565b612eb890919063ffffffff16565b905092915050565b6007602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b6123fe612eb0565b73ffffffffffffffffffffffffffffffffffffffff1661241c61236b565b73ffffffffffffffffffffffffffffffffffffffff1614612472576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161246990613c21565b60405180910390fd5b806001838154811061248757612486613c41565b5b9060005260206000209060020201600101819055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008211612509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161250090613dd6565b60405180910390fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806125b25750600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6125f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125e89061403f565b60405180910390fd5b6000600660008154811061260857612607613c41565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506126766000611c91565b6000816000015411156127705760006126cd82600101546126bf64e8d4a510006126b187600301548760000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b612f7c90919063ffffffff16565b9050600081111561276e5761272a81600c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612fc690919063ffffffff16565b600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b60008411156127ea576127ca3330868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130aa909392919063ffffffff16565b6127e1848260000154612fc690919063ffffffff16565b81600001819055505b61281c64e8d4a5100061280e84600301548460000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b816001018190555060008373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158660405161286c91906136a3565b60405180910390a350505050565b600c6020528060005260406000206000915090505481565b600082036128d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128cc906140ab565b60405180910390fd5b60008111612918576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161290f90613dd6565b60405180910390fd5b60006006838154811061292e5761292d613c41565b5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061299b84611c91565b600081600001541115612a955760006129f282600101546129e464e8d4a510006129d687600301548760000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b612f7c90919063ffffffff16565b90506000811115612a9357612a4f81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612fc690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b612ae63330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130aa909392919063ffffffff16565b612afd838260000154612fc690919063ffffffff16565b8160000181905550612b3764e8d4a51000612b2984600301548460000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051612b8691906136a3565b60405180910390a350505050565b612b9c612eb0565b73ffffffffffffffffffffffffffffffffffffffff16612bba61236b565b73ffffffffffffffffffffffffffffffffffffffff1614612c10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c0790613c21565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612c7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c769061413d565b60405180910390fd5b612c8881613282565b50565b60008060068481548110612ca257612ca1613c41565b5b9060005260206000209060040201905060006007600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401612d6e9190613963565b602060405180830381865afa158015612d8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612daf9190613cf1565b9050836002015443118015612dc5575060008114155b15612e60576000612dda856002015443612394565b90506000612e1d600854612e0f8860010154612e0160035487612eb890919063ffffffff16565b612eb890919063ffffffff16565b612f3290919063ffffffff16565b9050612e5b612e4c84612e3e64e8d4a5100085612eb890919063ffffffff16565b612f3290919063ffffffff16565b85612fc690919063ffffffff16565b935050505b612ea48360010154612e9664e8d4a51000612e88868860000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b612f7c90919063ffffffff16565b94505050505092915050565b600033905090565b6000808303612eca5760009050612f2c565b60008284612ed8919061415d565b9050828482612ee791906141e6565b14612f27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f1e90614289565b60405180910390fd5b809150505b92915050565b6000612f7483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613346565b905092915050565b6000612fbe83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506133a9565b905092915050565b6000808284612fd591906142a9565b90508381101561301a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161301190614329565b60405180910390fd5b8091505092915050565b6130a58363a9059cbb60e01b8484604051602401613043929190614349565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061340d565b505050565b61312d846323b872dd60e01b8585856040516024016130cb93929190614372565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061340d565b50505050565b60008114806131bd575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b815260040161317a9291906143a9565b602060405180830381865afa158015613197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131bb9190613cf1565b145b6131fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016131f390614444565b60405180910390fd5b61327d8363095ea7b360e01b848460405160240161321b929190614349565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061340d565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808311829061338d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161338491906144e3565b60405180910390fd5b506000838561339c91906141e6565b9050809150509392505050565b60008383111582906133f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133e891906144e3565b60405180910390fd5b50600083856134009190614505565b9050809150509392505050565b600061346f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166134d49092919063ffffffff16565b90506000815111156134cf578080602001905181019061348f919061454e565b6134ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016134c5906145ed565b60405180910390fd5b5b505050565b60606134e384846000856134ec565b90509392505050565b606082471015613531576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135289061467f565b60405180910390fd5b61353a85613600565b613579576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613570906146eb565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516135a29190614752565b60006040518083038185875af1925050503d80600081146135df576040519150601f19603f3d011682016040523d82523d6000602084013e6135e4565b606091505b50915091506135f4828286613623565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561363357829050613683565b6000835111156136465782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161367a91906144e3565b60405180910390fd5b9392505050565b6000819050919050565b61369d8161368a565b82525050565b60006020820190506136b86000830184613694565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006136ee826136c3565b9050919050565b6136fe816136e3565b811461370957600080fd5b50565b60008135905061371b816136f5565b92915050565b600060208284031215613737576137366136be565b5b60006137458482850161370c565b91505092915050565b6137578161368a565b811461376257600080fd5b50565b6000813590506137748161374e565b92915050565b6000602082840312156137905761378f6136be565b5b600061379e84828501613765565b91505092915050565b6000819050919050565b60006137cc6137c76137c2846136c3565b6137a7565b6136c3565b9050919050565b60006137de826137b1565b9050919050565b60006137f0826137d3565b9050919050565b613800816137e5565b82525050565b600060808201905061381b60008301876137f7565b6138286020830186613694565b6138356040830185613694565b6138426060830184613694565b95945050505050565b60008060408385031215613862576138616136be565b5b600061387085828601613765565b925050602061388185828601613765565b9150509250929050565b6000613896826136e3565b9050919050565b6138a68161388b565b81146138b157600080fd5b50565b6000813590506138c38161389d565b92915050565b60008115159050919050565b6138de816138c9565b81146138e957600080fd5b50565b6000813590506138fb816138d5565b92915050565b60008060006060848603121561391a576139196136be565b5b600061392886828701613765565b9350506020613939868287016138b4565b925050604061394a868287016138ec565b9150509250925092565b61395d816136e3565b82525050565b60006020820190506139786000830184613954565b92915050565b6000613989826136e3565b9050919050565b6139998161397e565b81146139a457600080fd5b50565b6000813590506139b681613990565b92915050565b6000602082840312156139d2576139d16136be565b5b60006139e0848285016139a7565b91505092915050565b60006139f4826136e3565b9050919050565b613a04816139e9565b8114613a0f57600080fd5b50565b600081359050613a21816139fb565b92915050565b60008060408385031215613a3e57613a3d6136be565b5b6000613a4c85828601613a12565b9250506020613a5d85828601613765565b9150509250929050565b6000613a72826137d3565b9050919050565b613a8281613a67565b82525050565b6000604082019050613a9d6000830185613a79565b613aaa6020830184613694565b9392505050565b600080600060608486031215613aca57613ac96136be565b5b6000613ad886828701613765565b9350506020613ae986828701613765565b9250506040613afa868287016138ec565b9150509250925092565b6000613b0f826137d3565b9050919050565b613b1f81613b04565b82525050565b6000602082019050613b3a6000830184613b16565b92915050565b60008060408385031215613b5757613b566136be565b5b6000613b6585828601613765565b9250506020613b768582860161370c565b9150509250929050565b6000604082019050613b956000830185613694565b613ba26020830184613694565b9392505050565b6000602082019050613bbe60008301846137f7565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613c0b602083613bc4565b9150613c1682613bd5565b602082019050919050565b60006020820190508181036000830152613c3a81613bfe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f77697468647261773a206e6f7420676f6f640000000000000000000000000000600082015250565b6000613ca6601283613bc4565b9150613cb182613c70565b602082019050919050565b60006020820190508181036000830152613cd581613c99565b9050919050565b600081519050613ceb8161374e565b92915050565b600060208284031215613d0757613d066136be565b5b6000613d1584828501613cdc565b91505092915050565b7f506f776572206973206e6f7420656e6f75676800000000000000000000000000600082015250565b6000613d54601383613bc4565b9150613d5f82613d1e565b602082019050919050565b60006020820190508181036000830152613d8381613d47565b9050919050565b7f416d6f756e74206973207a65726f000000000000000000000000000000000000600082015250565b6000613dc0600e83613bc4565b9150613dcb82613d8a565b602082019050919050565b60006020820190508181036000830152613def81613db3565b9050919050565b7f776974686472617720506f77657220627920756e7374616b696e670000000000600082015250565b6000613e2c601b83613bc4565b9150613e3782613df6565b602082019050919050565b60006020820190508181036000830152613e5b81613e1f565b9050919050565b7f6d6967726174653a206e6f206d69677261746f72000000000000000000000000600082015250565b6000613e98601483613bc4565b9150613ea382613e62565b602082019050919050565b60006020820190508181036000830152613ec781613e8b565b9050919050565b600081519050613edd8161389d565b92915050565b600060208284031215613ef957613ef86136be565b5b6000613f0784828501613ece565b91505092915050565b7f6d6967726174653a206261640000000000000000000000000000000000000000600082015250565b6000613f46600c83613bc4565b9150613f5182613f10565b602082019050919050565b60006020820190508181036000830152613f7581613f39565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613fb68261368a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613fe857613fe7613f7c565b5b600182019050919050565b7f43616c6c6572206973206e6f742066616d696c79000000000000000000000000600082015250565b6000614029601483613bc4565b915061403482613ff3565b602082019050919050565b600060208201905081810360008301526140588161401c565b9050919050565b7f6465706f73697420506f776572206279207374616b696e670000000000000000600082015250565b6000614095601883613bc4565b91506140a08261405f565b602082019050919050565b600060208201905081810360008301526140c481614088565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000614127602683613bc4565b9150614132826140cb565b604082019050919050565b600060208201905081810360008301526141568161411a565b9050919050565b60006141688261368a565b91506141738361368a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156141ac576141ab613f7c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006141f18261368a565b91506141fc8361368a565b92508261420c5761420b6141b7565b5b828204905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6000614273602183613bc4565b915061427e82614217565b604082019050919050565b600060208201905081810360008301526142a281614266565b9050919050565b60006142b48261368a565b91506142bf8361368a565b92508282019050808211156142d7576142d6613f7c565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000614313601b83613bc4565b915061431e826142dd565b602082019050919050565b6000602082019050818103600083015261434281614306565b9050919050565b600060408201905061435e6000830185613954565b61436b6020830184613694565b9392505050565b60006060820190506143876000830186613954565b6143946020830185613954565b6143a16040830184613694565b949350505050565b60006040820190506143be6000830185613954565b6143cb6020830184613954565b9392505050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b600061442e603683613bc4565b9150614439826143d2565b604082019050919050565b6000602082019050818103600083015261445d81614421565b9050919050565b600081519050919050565b60005b8381101561448d578082015181840152602081019050614472565b60008484015250505050565b6000601f19601f8301169050919050565b60006144b582614464565b6144bf8185613bc4565b93506144cf81856020860161446f565b6144d881614499565b840191505092915050565b600060208201905081810360008301526144fd81846144aa565b905092915050565b60006145108261368a565b915061451b8361368a565b925082820390508181111561453357614532613f7c565b5b92915050565b600081519050614548816138d5565b92915050565b600060208284031215614564576145636136be565b5b600061457284828501614539565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006145d7602a83613bc4565b91506145e28261457b565b604082019050919050565b60006020820190508181036000830152614606816145ca565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000614669602683613bc4565b91506146748261460d565b604082019050919050565b600060208201905081810360008301526146988161465c565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006146d5601d83613bc4565b91506146e08261469f565b602082019050919050565b60006020820190508181036000830152614704816146c8565b9050919050565b600081519050919050565b600081905092915050565b600061472c8261470b565b6147368185614716565b935061474681856020860161446f565b80840191505092915050565b600061475e8284614721565b91508190509291505056fea264697066735822122060788b95bd3741226b6210d001709cdafdab6ac0a8524387fffb2f40a7d3a9cb64736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4B42 CODESIZE SUB DUP1 PUSH3 0x4B42 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x41 SWAP2 SWAP1 PUSH3 0x337 JUMP JUMPDEST PUSH3 0x61 PUSH3 0x55 PUSH3 0x1B2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3E8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP PUSH2 0x3E8 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x393 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2B0 DUP3 PUSH3 0x283 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C4 DUP3 PUSH3 0x2A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2D6 DUP2 PUSH3 0x2B7 JUMP JUMPDEST DUP2 EQ PUSH3 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F6 DUP2 PUSH3 0x2CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x311 DUP2 PUSH3 0x2FC JUMP JUMPDEST DUP2 EQ PUSH3 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x331 DUP2 PUSH3 0x306 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x353 JUMPI PUSH3 0x352 PUSH3 0x27E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x363 DUP7 DUP3 DUP8 ADD PUSH3 0x2E5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x376 DUP7 DUP3 DUP8 ADD PUSH3 0x320 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x389 DUP7 DUP3 DUP8 ADD PUSH3 0x320 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x479F DUP1 PUSH3 0x3A3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FFE6146 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCF35FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCF35FDDF EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0xD209DB8C EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xF3239AB5 EQ PUSH2 0x6B0 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xC11490CC EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0xCB3CBA55 EQ PUSH2 0x60E JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x83E32135 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0x8C51793B EQ PUSH2 0x543 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x61C1B724 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x4C3 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3DF7AFF3 GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x4EA2813C GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4EA2813C EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x56B4685F EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x5990C569 EQ PUSH2 0x44E JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3DF7AFF3 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x41441D3B EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x454B0608 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x3C0 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x17CAF6F1 GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x1D5FBD87 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x22F58541 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x334 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xBA33A58 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x1058D281 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x28D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23F PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x3721 JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x7AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0xACC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x384B JUMP JUMPDEST PUSH2 0xAD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH2 0xF56 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31E PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x39BC JUMP JUMPDEST PUSH2 0x1109 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x11C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x124F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x151A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x1810 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C8 PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x3A27 JUMP JUMPDEST PUSH2 0x1B68 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x1C91 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x1E30 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x3721 JUMP JUMPDEST PUSH2 0x1F69 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x456 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x486 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x202F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP3 SWAP2 SWAP1 PUSH2 0x3A88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH2 0x2109 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x3AB1 JUMP JUMPDEST PUSH2 0x213C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E7 PUSH2 0x2248 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F1 PUSH2 0x22D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x3B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50F PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52D PUSH2 0x231C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x3721 JUMP JUMPDEST PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57B PUSH2 0x236B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x588 SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x2394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x3B40 JUMP JUMPDEST PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E9 SWAP3 SWAP2 SWAP1 PUSH2 0x3B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x23F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x616 PUSH2 0x24A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x623 SWAP2 SWAP1 PUSH2 0x3BA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x646 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x3B40 JUMP JUMPDEST PUSH2 0x24C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x662 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x3721 JUMP JUMPDEST PUSH2 0x287A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x692 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x2892 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x3721 JUMP JUMPDEST PUSH2 0x2B94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x3B40 JUMP JUMPDEST PUSH2 0x2C8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F5 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x713 PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x760 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x7C4 JUMPI PUSH2 0x7C3 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0x3CBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x879 PUSH1 0x0 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x8B5 PUSH5 0xE8D4A51000 PUSH2 0x8A7 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x964 JUMPI PUSH2 0x920 DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x9DC JUMPI PUSH2 0x984 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x9DB CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3024 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xA0E PUSH5 0xE8D4A51000 PUSH2 0xA00 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA5E SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAE8 JUMPI PUSH2 0xAE7 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB4 SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x3CF1 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xC0B JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xCA6 JUMPI PUSH1 0x0 PUSH2 0xC20 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x2394 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC63 PUSH1 0x8 SLOAD PUSH2 0xC55 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xC47 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xCA1 PUSH2 0xC92 DUP5 PUSH2 0xC84 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0xCEC DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xCDE PUSH5 0xE8D4A51000 PUSH2 0xCD0 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xD04 JUMPI PUSH2 0xD03 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0xD68 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0xD9E JUMPI PUSH1 0x0 DUP9 SUB PUSH2 0xD89 JUMPI PUSH2 0xD88 PUSH1 0x0 PUSH2 0x7AD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 EQ PUSH2 0xD9D JUMPI PUSH2 0xD9C DUP9 PUSH1 0x0 PUSH2 0x151A JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x1 ADD SLOAD LT PUSH2 0xE23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1A SWAP1 PUSH2 0x3D6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE79 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17E5883C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF19 SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF5E PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF7C PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC9 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xFE1 JUMPI PUSH2 0xFE0 PUSH2 0x2109 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD NUMBER GT PUSH2 0xFF4 JUMPI PUSH1 0x9 SLOAD PUSH2 0xFF6 JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0x100D DUP5 PUSH1 0x8 SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1111 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x112F PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1185 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117C SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x11D1 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11EF PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123C SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1292 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1289 SWAP1 PUSH2 0x3DD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x12A9 JUMPI PUSH2 0x12A8 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1317 PUSH1 0x0 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1411 JUMPI PUSH1 0x0 PUSH2 0x136E DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1360 PUSH5 0xE8D4A51000 PUSH2 0x1352 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x140F JUMPI PUSH2 0x13CB DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x148B JUMPI PUSH2 0x146B CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x30AA SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1482 DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x14BD PUSH5 0xE8D4A51000 PUSH2 0x14AF DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x150D SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x155D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1554 SWAP1 PUSH2 0x3E42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1573 JUMPI PUSH2 0x1572 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x161E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1615 SWAP1 PUSH2 0x3CBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1627 DUP5 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1671 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1663 PUSH5 0xE8D4A51000 PUSH2 0x1655 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1712 JUMPI PUSH2 0x16CE DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1729 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1763 PUSH5 0xE8D4A51000 PUSH2 0x1755 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x17BA CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3024 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1801 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1898 SWAP1 PUSH2 0x3EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18B7 JUMPI PUSH2 0x18B6 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192B SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1948 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x196C SWAP2 SWAP1 PUSH2 0x3CF1 JUMP JUMPDEST SWAP1 POP PUSH2 0x19BB PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3133 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCE5494BB DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A18 SWAP2 SWAP1 PUSH2 0x3BA9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A5B SWAP2 SWAP1 PUSH2 0x3EE3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A96 SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD7 SWAP2 SWAP1 PUSH2 0x3CF1 JUMP JUMPDEST DUP3 EQ PUSH2 0x1B18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0F SWAP1 PUSH2 0x3F5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B70 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B8E PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDB SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CA7 JUMPI PUSH2 0x1CA6 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1CC8 JUMPI POP PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D27 SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D68 SWAP2 SWAP1 PUSH2 0x3CF1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1D82 JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D92 DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x2394 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DD5 PUSH1 0x8 SLOAD PUSH2 0x1DC7 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1DB9 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1E17 PUSH2 0x1E04 DUP5 PUSH2 0x1DF6 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E46 JUMPI PUSH2 0x1E45 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1EFD CALLER DUP3 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3024 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1F48 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1F71 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F8F PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FDC SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2037 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2055 PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20A2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x20C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2138 JUMPI PUSH2 0x2127 DUP2 PUSH2 0x1C91 JUMP JUMPDEST DUP1 PUSH2 0x2131 SWAP1 PUSH2 0x3FAB JUMP JUMPDEST SWAP1 POP PUSH2 0x2116 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2144 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2162 PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x21B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21AF SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x21C7 JUMPI PUSH2 0x21C6 PUSH2 0x2109 JUMP JUMPDEST JUMPDEST PUSH2 0x2213 DUP3 PUSH2 0x2205 PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x21E2 JUMPI PUSH2 0x21E1 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x222E JUMPI PUSH2 0x222D PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x2250 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x226E PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22BB SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22CE PUSH1 0x0 PUSH2 0x3282 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23BD PUSH1 0x4 SLOAD PUSH2 0x23AF DUP6 DUP6 PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x23FE PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x241C PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2472 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2469 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2487 JUMPI PUSH2 0x2486 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x2509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2500 SWAP1 PUSH2 0x3DD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x25B2 JUMPI POP PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x25F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25E8 SWAP1 PUSH2 0x403F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x2608 JUMPI PUSH2 0x2607 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x2676 PUSH1 0x0 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2770 JUMPI PUSH1 0x0 PUSH2 0x26CD DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x26BF PUSH5 0xE8D4A51000 PUSH2 0x26B1 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x276E JUMPI PUSH2 0x272A DUP2 PUSH1 0xC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x27EA JUMPI PUSH2 0x27CA CALLER ADDRESS DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x30AA SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27E1 DUP5 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x281C PUSH5 0xE8D4A51000 PUSH2 0x280E DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD PUSH2 0x286C SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x28D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28CC SWAP1 PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2918 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x290F SWAP1 PUSH2 0x3DD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x292E JUMPI PUSH2 0x292D PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x299B DUP5 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2A95 JUMPI PUSH1 0x0 PUSH2 0x29F2 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x29E4 PUSH5 0xE8D4A51000 PUSH2 0x29D6 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2A93 JUMPI PUSH2 0x2A4F DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH2 0x2AE6 CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x30AA SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AFD DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2B37 PUSH5 0xE8D4A51000 PUSH2 0x2B29 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2B86 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x2B9C PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2BBA PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C07 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C76 SWAP1 PUSH2 0x413D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C88 DUP2 PUSH2 0x3282 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2CA2 JUMPI PUSH2 0x2CA1 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D6E SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DAF SWAP2 SWAP1 PUSH2 0x3CF1 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x2DC5 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x2E60 JUMPI PUSH1 0x0 PUSH2 0x2DDA DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x2394 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2E1D PUSH1 0x8 SLOAD PUSH2 0x2E0F DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x2E01 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2E5B PUSH2 0x2E4C DUP5 PUSH2 0x2E3E PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x2EA4 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x2E96 PUSH5 0xE8D4A51000 PUSH2 0x2E88 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SUB PUSH2 0x2ECA JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2F2C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x2ED8 SWAP2 SWAP1 PUSH2 0x415D JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x2EE7 SWAP2 SWAP1 PUSH2 0x41E6 JUMP JUMPDEST EQ PUSH2 0x2F27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F1E SWAP1 PUSH2 0x4289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F74 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x3346 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FBE DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x33A9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x2FD5 SWAP2 SWAP1 PUSH2 0x42A9 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x301A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3011 SWAP1 PUSH2 0x4329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x30A5 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3043 SWAP3 SWAP2 SWAP1 PUSH2 0x4349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x340D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x312D DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x30CB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x340D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x31BD JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x317A SWAP3 SWAP2 SWAP1 PUSH2 0x43A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3197 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31BB SWAP2 SWAP1 PUSH2 0x3CF1 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x31FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31F3 SWAP1 PUSH2 0x4444 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x327D DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x321B SWAP3 SWAP2 SWAP1 PUSH2 0x4349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x340D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x338D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3384 SWAP2 SWAP1 PUSH2 0x44E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x339C SWAP2 SWAP1 PUSH2 0x41E6 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x33F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E8 SWAP2 SWAP1 PUSH2 0x44E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x3400 SWAP2 SWAP1 PUSH2 0x4505 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x34D4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x34CF JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x348F SWAP2 SWAP1 PUSH2 0x454E JUMP JUMPDEST PUSH2 0x34CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C5 SWAP1 PUSH2 0x45ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x34E3 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x34EC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3528 SWAP1 PUSH2 0x467F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x353A DUP6 PUSH2 0x3600 JUMP JUMPDEST PUSH2 0x3579 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3570 SWAP1 PUSH2 0x46EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x35A2 SWAP2 SWAP1 PUSH2 0x4752 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x35DF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x35E4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x35F4 DUP3 DUP3 DUP7 PUSH2 0x3623 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3633 JUMPI DUP3 SWAP1 POP PUSH2 0x3683 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x3646 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x367A SWAP2 SWAP1 PUSH2 0x44E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x369D DUP2 PUSH2 0x368A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3694 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36EE DUP3 PUSH2 0x36C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36FE DUP2 PUSH2 0x36E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x371B DUP2 PUSH2 0x36F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3737 JUMPI PUSH2 0x3736 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3745 DUP5 DUP3 DUP6 ADD PUSH2 0x370C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3757 DUP2 PUSH2 0x368A JUMP JUMPDEST DUP2 EQ PUSH2 0x3762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3774 DUP2 PUSH2 0x374E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3790 JUMPI PUSH2 0x378F PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x379E DUP5 DUP3 DUP6 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37CC PUSH2 0x37C7 PUSH2 0x37C2 DUP5 PUSH2 0x36C3 JUMP JUMPDEST PUSH2 0x37A7 JUMP JUMPDEST PUSH2 0x36C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37DE DUP3 PUSH2 0x37B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F0 DUP3 PUSH2 0x37D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3800 DUP2 PUSH2 0x37E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x381B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x37F7 JUMP JUMPDEST PUSH2 0x3828 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3694 JUMP JUMPDEST PUSH2 0x3835 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3694 JUMP JUMPDEST PUSH2 0x3842 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3694 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3862 JUMPI PUSH2 0x3861 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3870 DUP6 DUP3 DUP7 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3881 DUP6 DUP3 DUP7 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3896 DUP3 PUSH2 0x36E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38A6 DUP2 PUSH2 0x388B JUMP JUMPDEST DUP2 EQ PUSH2 0x38B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38C3 DUP2 PUSH2 0x389D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38DE DUP2 PUSH2 0x38C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x38E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38FB DUP2 PUSH2 0x38D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x391A JUMPI PUSH2 0x3919 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3928 DUP7 DUP3 DUP8 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3939 DUP7 DUP3 DUP8 ADD PUSH2 0x38B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x394A DUP7 DUP3 DUP8 ADD PUSH2 0x38EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x395D DUP2 PUSH2 0x36E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3978 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3954 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3989 DUP3 PUSH2 0x36E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3999 DUP2 PUSH2 0x397E JUMP JUMPDEST DUP2 EQ PUSH2 0x39A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39B6 DUP2 PUSH2 0x3990 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39D2 JUMPI PUSH2 0x39D1 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39E0 DUP5 DUP3 DUP6 ADD PUSH2 0x39A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F4 DUP3 PUSH2 0x36E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A04 DUP2 PUSH2 0x39E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x3A0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A21 DUP2 PUSH2 0x39FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A3E JUMPI PUSH2 0x3A3D PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A4C DUP6 DUP3 DUP7 ADD PUSH2 0x3A12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3A5D DUP6 DUP3 DUP7 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A72 DUP3 PUSH2 0x37D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A82 DUP2 PUSH2 0x3A67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A9D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A79 JUMP JUMPDEST PUSH2 0x3AAA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3694 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3ACA JUMPI PUSH2 0x3AC9 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AD8 DUP7 DUP3 DUP8 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3AE9 DUP7 DUP3 DUP8 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3AFA DUP7 DUP3 DUP8 ADD PUSH2 0x38EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B0F DUP3 PUSH2 0x37D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B1F DUP2 PUSH2 0x3B04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B3A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B57 JUMPI PUSH2 0x3B56 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B65 DUP6 DUP3 DUP7 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3B76 DUP6 DUP3 DUP7 ADD PUSH2 0x370C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B95 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3694 JUMP JUMPDEST PUSH2 0x3BA2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3694 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BBE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C0B PUSH1 0x20 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C16 DUP3 PUSH2 0x3BD5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C3A DUP2 PUSH2 0x3BFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA6 PUSH1 0x12 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CB1 DUP3 PUSH2 0x3C70 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CD5 DUP2 PUSH2 0x3C99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3CEB DUP2 PUSH2 0x374E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D07 JUMPI PUSH2 0x3D06 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D15 DUP5 DUP3 DUP6 ADD PUSH2 0x3CDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506F776572206973206E6F7420656E6F75676800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D54 PUSH1 0x13 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D5F DUP3 PUSH2 0x3D1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D83 DUP2 PUSH2 0x3D47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206973207A65726F000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DC0 PUSH1 0xE DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DCB DUP3 PUSH2 0x3D8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DEF DUP2 PUSH2 0x3DB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x776974686472617720506F77657220627920756E7374616B696E670000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E2C PUSH1 0x1B DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E37 DUP3 PUSH2 0x3DF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E5B DUP2 PUSH2 0x3E1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206E6F206D69677261746F72000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E98 PUSH1 0x14 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EA3 DUP3 PUSH2 0x3E62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EC7 DUP2 PUSH2 0x3E8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3EDD DUP2 PUSH2 0x389D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EF9 JUMPI PUSH2 0x3EF8 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F07 DUP5 DUP3 DUP6 ADD PUSH2 0x3ECE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206261640000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F46 PUSH1 0xC DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F51 DUP3 PUSH2 0x3F10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F75 DUP2 PUSH2 0x3F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FB6 DUP3 PUSH2 0x368A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3FE8 JUMPI PUSH2 0x3FE7 PUSH2 0x3F7C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742066616D696C79000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4029 PUSH1 0x14 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4034 DUP3 PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4058 DUP2 PUSH2 0x401C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6465706F73697420506F776572206279207374616B696E670000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4095 PUSH1 0x18 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x40A0 DUP3 PUSH2 0x405F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40C4 DUP2 PUSH2 0x4088 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4127 PUSH1 0x26 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4132 DUP3 PUSH2 0x40CB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4156 DUP2 PUSH2 0x411A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4168 DUP3 PUSH2 0x368A JUMP JUMPDEST SWAP2 POP PUSH2 0x4173 DUP4 PUSH2 0x368A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x41AC JUMPI PUSH2 0x41AB PUSH2 0x3F7C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x41F1 DUP3 PUSH2 0x368A JUMP JUMPDEST SWAP2 POP PUSH2 0x41FC DUP4 PUSH2 0x368A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x420C JUMPI PUSH2 0x420B PUSH2 0x41B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4273 PUSH1 0x21 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x427E DUP3 PUSH2 0x4217 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42A2 DUP2 PUSH2 0x4266 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B4 DUP3 PUSH2 0x368A JUMP JUMPDEST SWAP2 POP PUSH2 0x42BF DUP4 PUSH2 0x368A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x42D7 JUMPI PUSH2 0x42D6 PUSH2 0x3F7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4313 PUSH1 0x1B DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x431E DUP3 PUSH2 0x42DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4342 DUP2 PUSH2 0x4306 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x435E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3954 JUMP JUMPDEST PUSH2 0x436B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3694 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4387 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3954 JUMP JUMPDEST PUSH2 0x4394 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3954 JUMP JUMPDEST PUSH2 0x43A1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3694 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x43BE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3954 JUMP JUMPDEST PUSH2 0x43CB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3954 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x442E PUSH1 0x36 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4439 DUP3 PUSH2 0x43D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x445D DUP2 PUSH2 0x4421 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x448D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4472 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44B5 DUP3 PUSH2 0x4464 JUMP JUMPDEST PUSH2 0x44BF DUP2 DUP6 PUSH2 0x3BC4 JUMP JUMPDEST SWAP4 POP PUSH2 0x44CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x446F JUMP JUMPDEST PUSH2 0x44D8 DUP2 PUSH2 0x4499 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44FD DUP2 DUP5 PUSH2 0x44AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4510 DUP3 PUSH2 0x368A JUMP JUMPDEST SWAP2 POP PUSH2 0x451B DUP4 PUSH2 0x368A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4533 JUMPI PUSH2 0x4532 PUSH2 0x3F7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4548 DUP2 PUSH2 0x38D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4564 JUMPI PUSH2 0x4563 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4572 DUP5 DUP3 DUP6 ADD PUSH2 0x4539 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D7 PUSH1 0x2A DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x45E2 DUP3 PUSH2 0x457B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4606 DUP2 PUSH2 0x45CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4669 PUSH1 0x26 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4674 DUP3 PUSH2 0x460D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4698 DUP2 PUSH2 0x465C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46D5 PUSH1 0x1D DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x46E0 DUP3 PUSH2 0x469F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4704 DUP2 PUSH2 0x46C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x472C DUP3 PUSH2 0x470B JUMP JUMPDEST PUSH2 0x4736 DUP2 DUP6 PUSH2 0x4716 JUMP JUMPDEST SWAP4 POP PUSH2 0x4746 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x446F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x475E DUP3 DUP5 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x78 DUP12 SWAP6 0xBD CALLDATACOPY COINBASE 0x22 PUSH12 0x6210D001709CDAFDAB6AC0A8 MSTORE NUMBER DUP8 SELFDESTRUCT 0xFB 0x2F BLOCKHASH 0xA7 0xD3 0xA9 0xCB PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "22111:14343:0:-:0;;;23774:1;23740:35;;24217:1;24184:34;;24731:462;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19984:32;20003:12;:10;;;:12;;:::i;:::-;19984:18;;;:32;;:::i;:::-;24852:4;24846:3;;:10;;;;;;;;;;;;;;;;;;24883:14;24867:13;:30;;;;24921:11;24908:10;:24;;;;24978:8;24992:155;;;;;;;;25025:3;;;;;;;;;;;24992:155;;;;;;25055:4;24992:155;;;;25091:10;;24992:155;;;;25134:1;24992:155;;;24978:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25179:4;25161:15;:22;;;;24731:462;;;22111:14343;;19479:98;19532:7;19559:10;19552:17;;19479:98;:::o;21375:191::-;21449:16;21468:6;;;;;;;;;;;21449:25;;21494:8;21485:6;;:17;;;;;;;;;;;;;;;;;;21549:8;21518:40;;21539:8;21518:40;;;;;;;;;;;;21438:128;21375:191;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:77::-;1054:7;1083:5;1072:16;;1017:77;;;:::o;1100:122::-;1173:24;1191:5;1173:24;:::i;:::-;1166:5;1163:35;1153:63;;1212:1;1209;1202:12;1153:63;1100:122;:::o;1228:143::-;1285:5;1316:6;1310:13;1301:22;;1332:33;1359:5;1332:33;:::i;:::-;1228:143;;;;:::o;1377:691::-;1479:6;1487;1495;1544:2;1532:9;1523:7;1519:23;1515:32;1512:119;;;1550:79;;:::i;:::-;1512:119;1670:1;1695:78;1765:7;1756:6;1745:9;1741:22;1695:78;:::i;:::-;1685:88;;1641:142;1822:2;1848:64;1904:7;1895:6;1884:9;1880:22;1848:64;:::i;:::-;1838:74;;1793:129;1961:2;1987:64;2043:7;2034:6;2023:9;2019:22;1987:64;:::i;:::-;1977:74;;1932:129;1377:691;;;;;:::o;22111:14343:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BONUS_MULTIPLIER_975": {
									"entryPoint": 8988,
									"id": 975,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DDTMasterchefAddress_998": {
									"entryPoint": 4323,
									"id": 998,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DDT_970": {
									"entryPoint": 9376,
									"id": 970,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NFTStakeAddress_996": {
									"entryPoint": 8950,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PowerPerBlock_972": {
									"entryPoint": 8233,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_796": {
									"entryPoint": 13325,
									"id": 796,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 11952,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 12930,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addNFT_1120": {
									"entryPoint": 7016,
									"id": 1120,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_1385": {
									"entryPoint": 3926,
									"id": 1385,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_27": {
									"entryPoint": 12230,
									"id": 27,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimNFTReward_1316": {
									"entryPoint": 2770,
									"id": 1316,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposit_1882": {
									"entryPoint": 10386,
									"id": 1882,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@div_124": {
									"entryPoint": 12082,
									"id": 124,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_152": {
									"entryPoint": 13126,
									"id": 152,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@emergencyWithdraw_2462": {
									"entryPoint": 7728,
									"id": 2462,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@enterStakingCompund_2287": {
									"entryPoint": 9414,
									"id": 2287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@enterStaking_2140": {
									"entryPoint": 4687,
									"id": 2140,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_442": {
									"entryPoint": 13548,
									"id": 442,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_372": {
									"entryPoint": 13524,
									"id": 372,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getMultiplier_1533": {
									"entryPoint": 9108,
									"id": 1533,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPowerBalance_1100": {
									"entryPoint": 8994,
									"id": 1100,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_301": {
									"entryPoint": 13824,
									"id": 301,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@leaveStaking_2405": {
									"entryPoint": 1965,
									"id": 2405,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@massUpdatePools_1660": {
									"entryPoint": 8457,
									"id": 1660,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@migrate_1515": {
									"entryPoint": 6160,
									"id": 1515,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@migrator_978": {
									"entryPoint": 8912,
									"id": 978,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_107": {
									"entryPoint": 11960,
									"id": 107,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nftsInfo_967": {
									"entryPoint": 8373,
									"id": 967,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_845": {
									"entryPoint": 9067,
									"id": 845,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingPower_1635": {
									"entryPoint": 11403,
									"id": 1635,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolInfo_982": {
									"entryPoint": 2668,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_1337": {
									"entryPoint": 1760,
									"id": 1337,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@powerBalance_1002": {
									"entryPoint": 10362,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_873": {
									"entryPoint": 8776,
									"id": 873,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_674": {
									"entryPoint": 12595,
									"id": 674,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_630": {
									"entryPoint": 12458,
									"id": 630,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_604": {
									"entryPoint": 12324,
									"id": 604,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setMigrator_1436": {
									"entryPoint": 4361,
									"id": 1436,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@set_1423": {
									"entryPoint": 8508,
									"id": 1423,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startBlock_994": {
									"entryPoint": 7010,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_44": {
									"entryPoint": 12156,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_72": {
									"entryPoint": 13225,
									"id": 72,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@totalAllocPoint_992": {
									"entryPoint": 2764,
									"id": 992,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_896": {
									"entryPoint": 11156,
									"id": 896,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateDDTMasterchefAddress_1088": {
									"entryPoint": 8041,
									"id": 1088,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMultiplier_1328": {
									"entryPoint": 8239,
									"id": 1328,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateNFTStakeAddress_1076": {
									"entryPoint": 1773,
									"id": 1076,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateNFT_1137": {
									"entryPoint": 9206,
									"id": 1137,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updatePool_1751": {
									"entryPoint": 7313,
									"id": 1751,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePowerPerBlock_2474": {
									"entryPoint": 4553,
									"id": 2474,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_989": {
									"entryPoint": 9157,
									"id": 989,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_577": {
									"entryPoint": 13859,
									"id": 577,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_2004": {
									"entryPoint": 5402,
									"id": 2004,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 14092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 14572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 17721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$286": {
									"entryPoint": 14516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 16078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$933": {
									"entryPoint": 14866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IMigratorChef_$927": {
									"entryPoint": 14759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 14181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 15580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 14113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 17742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 16099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC721_$933t_uint256": {
									"entryPoint": 14887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IMigratorChef_$927": {
									"entryPoint": 14780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 14202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 15601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 15168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$286t_bool": {
									"entryPoint": 14593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 14411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 15025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 14676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 18209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack": {
									"entryPoint": 14327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack": {
									"entryPoint": 14969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack": {
									"entryPoint": 15126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 17578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 16666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 17158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 18012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 16520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 16998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 16412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 18120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 17866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 16185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 17441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 16011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 13972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 18258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 14691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 17321,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 17266,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 17225,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed": {
									"entryPoint": 15273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$286_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 14342,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$933_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 14984,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed": {
									"entryPoint": 15141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 17635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 17193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 18047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 17033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 18155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 17901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 17476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 13987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 15232,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 18187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 17508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 18198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 15300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 17065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 16870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 16733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 17669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 14051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 14537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$286": {
									"entryPoint": 14475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$933": {
									"entryPoint": 14825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IMigratorChef_$927": {
									"entryPoint": 14718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 14019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 13962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$286_to_t_address": {
									"entryPoint": 14309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$933_to_t_address": {
									"entryPoint": 14951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IMigratorChef_$927_to_t_address": {
									"entryPoint": 15108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 14291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 14257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 17519,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 14247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 16299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 16252,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 16823,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 15425,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 14014,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 17561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 16587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406": {
									"entryPoint": 15646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f": {
									"entryPoint": 15862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 17117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 17933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c": {
									"entryPoint": 15754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108": {
									"entryPoint": 16479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3": {
									"entryPoint": 16919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 15317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64": {
									"entryPoint": 16371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 18079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df": {
									"entryPoint": 15472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 17787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8": {
									"entryPoint": 16144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25": {
									"entryPoint": 17362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445": {
									"entryPoint": 15970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 14069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 14549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$286": {
									"entryPoint": 14493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$933": {
									"entryPoint": 14843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IMigratorChef_$927": {
									"entryPoint": 14736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 14158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:33108:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"src": "442:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "814:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "824:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "846:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "796:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "806:7:1",
														"type": ""
													}
												],
												"src": "769:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "956:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "928:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "938:7:1",
														"type": ""
													}
												],
												"src": "901:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1103:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:43:1"
															},
															"nodeType": "YulIf",
															"src": "1056:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1039:5:1",
														"type": ""
													}
												],
												"src": "1003:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1193:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1161:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1169:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:1",
														"type": ""
													}
												],
												"src": "1131:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1342:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1388:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:32:1"
															},
															"nodeType": "YulIf",
															"src": "1352:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1481:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1525:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1312:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1323:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1335:6:1",
														"type": ""
													}
												],
												"src": "1276:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:1"
															},
															"nodeType": "YulIf",
															"src": "1664:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:1",
														"type": ""
													}
												],
												"src": "1611:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:1",
														"type": ""
													}
												],
												"src": "1739:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:1"
															},
															"nodeType": "YulIf",
															"src": "1960:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2089:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:1",
														"type": ""
													}
												],
												"src": "1884:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2251:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2261:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2268:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2237:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2247:3:1",
														"type": ""
													}
												],
												"src": "2219:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2345:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2355:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2413:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2395:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2395:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2386:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2386:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2368:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2368:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2355:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2325:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2335:9:1",
														"type": ""
													}
												],
												"src": "2285:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2493:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2503:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2516:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2516:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2503:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2473:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2483:9:1",
														"type": ""
													}
												],
												"src": "2433:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2639:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2649:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2693:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2662:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2649:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$286_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2619:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2629:9:1",
														"type": ""
													}
												],
												"src": "2565:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2790:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2807:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2857:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$286_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2812:44:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2800:64:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2800:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2778:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2785:3:1",
														"type": ""
													}
												],
												"src": "2711:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3072:385:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3082:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3094:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3105:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3090:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3082:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3177:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3190:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3201:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3186:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3186:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3119:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3119:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3119:85:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3258:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3271:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3282:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3267:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3267:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3214:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3214:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3214:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3340:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3353:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3364:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3349:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3296:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3296:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3296:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3422:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3435:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3446:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3431:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3431:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3378:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3378:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3378:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$286_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3020:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3032:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3040:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3048:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3056:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3067:4:1",
														"type": ""
													}
												],
												"src": "2876:581:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3546:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3592:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3594:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3594:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3594:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3567:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3576:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3563:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3563:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3588:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3559:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3559:32:1"
															},
															"nodeType": "YulIf",
															"src": "3556:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3685:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3700:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3714:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3704:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3729:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3764:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3775:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3760:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3760:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3784:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3739:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3739:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3729:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3812:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3827:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3841:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3831:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3857:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3892:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3903:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3888:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3888:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3912:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3867:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3867:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3857:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3508:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3519:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3531:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3539:6:1",
														"type": ""
													}
												],
												"src": "3463:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4002:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4012:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4041:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4023:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4023:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4012:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3994:7:1",
														"type": ""
													}
												],
												"src": "3943:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4116:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4187:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4199:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4189:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4189:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4139:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4178:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$286",
																					"nodeType": "YulIdentifier",
																					"src": "4146:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4146:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4136:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4136:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4129:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4129:57:1"
															},
															"nodeType": "YulIf",
															"src": "4126:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4109:5:1",
														"type": ""
													}
												],
												"src": "4059:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4281:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4291:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4313:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4300:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4300:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4291:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4370:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "4329:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4329:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4329:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4259:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4267:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4275:5:1",
														"type": ""
													}
												],
												"src": "4215:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4430:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4440:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4465:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4458:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4458:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4451:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4440:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4412:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4422:7:1",
														"type": ""
													}
												],
												"src": "4388:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4524:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4578:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4587:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4590:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4580:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4580:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4580:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4547:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4569:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4554:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4554:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4544:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4544:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4537:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4537:40:1"
															},
															"nodeType": "YulIf",
															"src": "4534:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4517:5:1",
														"type": ""
													}
												],
												"src": "4484:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4655:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4665:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4687:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4674:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4665:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4727:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4703:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4703:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4703:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4633:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4641:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4649:5:1",
														"type": ""
													}
												],
												"src": "4606:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4856:530:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4902:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4904:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4904:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4904:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4877:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4886:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4873:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4873:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4898:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4869:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:32:1"
															},
															"nodeType": "YulIf",
															"src": "4866:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4995:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5010:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5024:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5014:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5039:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5074:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5085:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5070:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5070:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5094:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5049:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5049:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5039:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5122:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5137:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5151:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5141:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5167:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5216:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5227:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5212:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5212:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5236:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286",
																			"nodeType": "YulIdentifier",
																			"src": "5177:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5177:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5167:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5264:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5279:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5293:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5283:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5309:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5341:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5352:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5337:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5337:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5361:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5319:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5319:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5309:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$286t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4810:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4821:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4833:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4841:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4849:6:1",
														"type": ""
													}
												],
												"src": "4745:641:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5457:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5474:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5497:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5479:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5479:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5467:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5467:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5467:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5445:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5452:3:1",
														"type": ""
													}
												],
												"src": "5392:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5614:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5624:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5636:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5647:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5632:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5624:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5717:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5728:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5713:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5713:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5660:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5660:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5586:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5598:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5609:4:1",
														"type": ""
													}
												],
												"src": "5516:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5810:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5820:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5849:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5831:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5831:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5820:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5792:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5802:7:1",
														"type": ""
													}
												],
												"src": "5744:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5931:100:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6009:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6018:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6021:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6011:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6011:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6011:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5954:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6000:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IMigratorChef_$927",
																					"nodeType": "YulIdentifier",
																					"src": "5961:38:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5961:45:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5951:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5951:56:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5944:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5944:64:1"
															},
															"nodeType": "YulIf",
															"src": "5941:84:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5924:5:1",
														"type": ""
													}
												],
												"src": "5867:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6110:108:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6120:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6142:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6129:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6129:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6120:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6206:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IMigratorChef_$927",
																	"nodeType": "YulIdentifier",
																	"src": "6158:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6158:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6158:54:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6088:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6096:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6104:5:1",
														"type": ""
													}
												],
												"src": "6037:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6311:284:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6357:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6359:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6359:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6359:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6332:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6341:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6328:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6353:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6324:32:1"
															},
															"nodeType": "YulIf",
															"src": "6321:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6450:138:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6465:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6479:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6469:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6494:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6550:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6561:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6546:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6546:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6570:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IMigratorChef_$927",
																			"nodeType": "YulIdentifier",
																			"src": "6504:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6504:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6494:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6281:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6292:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6304:6:1",
														"type": ""
													}
												],
												"src": "6224:371:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6661:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6671:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6700:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6682:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6682:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6671:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$933",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6643:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6653:7:1",
														"type": ""
													}
												],
												"src": "6601:111:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6776:94:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6848:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6857:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6860:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6850:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6850:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6850:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6799:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6839:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$933",
																					"nodeType": "YulIdentifier",
																					"src": "6806:32:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6806:39:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6796:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6796:50:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6789:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:58:1"
															},
															"nodeType": "YulIf",
															"src": "6786:78:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$933",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6769:5:1",
														"type": ""
													}
												],
												"src": "6718:152:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6943:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6953:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6975:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6962:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6962:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6953:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7033:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$933",
																	"nodeType": "YulIdentifier",
																	"src": "6991:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6991:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6991:48:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$933",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6921:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6929:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6937:5:1",
														"type": ""
													}
												],
												"src": "6876:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:406:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7195:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7197:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7197:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7197:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7170:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7179:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7166:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7166:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7191:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7162:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7162:32:1"
															},
															"nodeType": "YulIf",
															"src": "7159:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "7288:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7303:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7307:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7332:78:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7382:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7393:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7378:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7378:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7402:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$933",
																			"nodeType": "YulIdentifier",
																			"src": "7342:35:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7342:68:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7332:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7430:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7445:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7459:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7449:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7475:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7510:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7521:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7506:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7506:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7530:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7485:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7485:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7475:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721_$933t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7111:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7122:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7134:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7142:6:1",
														"type": ""
													}
												],
												"src": "7051:504:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7636:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7646:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7690:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7659:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7659:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7646:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$933_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7616:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7626:9:1",
														"type": ""
													}
												],
												"src": "7561:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7788:81:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7805:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7856:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$933_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7810:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7810:52:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7798:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7798:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7798:65:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7776:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7783:3:1",
														"type": ""
													}
												],
												"src": "7708:161:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8016:221:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8026:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8038:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8049:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8034:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8034:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8026:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8121:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8134:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8145:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8130:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8130:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8062:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8062:86:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8062:86:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8202:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8215:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8226:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8211:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8211:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8158:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8158:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8158:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$933_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7980:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7992:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8000:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8011:4:1",
														"type": ""
													}
												],
												"src": "7875:362:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8340:516:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8386:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8388:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8388:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8388:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8361:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8370:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8357:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8357:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8382:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8353:32:1"
															},
															"nodeType": "YulIf",
															"src": "8350:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "8479:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8494:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8508:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8498:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8523:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8558:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8569:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8554:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8554:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8578:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8533:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8533:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8523:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8606:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8621:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8635:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8625:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8651:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8686:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8697:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8682:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8682:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8706:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8661:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8661:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8651:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8734:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8749:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8763:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8753:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8779:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8811:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8822:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8807:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8807:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8831:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "8789:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8789:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8779:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8294:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8305:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8317:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8325:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8333:6:1",
														"type": ""
													}
												],
												"src": "8243:613:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8943:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8953:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8997:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8966:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8966:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8953:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8923:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8933:9:1",
														"type": ""
													}
												],
												"src": "8862:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9101:87:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9118:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9175:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9123:51:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9123:58:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9111:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9111:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9111:71:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9089:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9096:3:1",
														"type": ""
													}
												],
												"src": "9015:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9313:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9323:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9335:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9346:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9331:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9331:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9323:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9424:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9437:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9448:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9433:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9433:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9359:64:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9359:92:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9359:92:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9285:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9297:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9308:4:1",
														"type": ""
													}
												],
												"src": "9194:264:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9547:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9593:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9595:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9595:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9595:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9568:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9577:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9564:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9564:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9589:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9560:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9560:32:1"
															},
															"nodeType": "YulIf",
															"src": "9557:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9686:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9701:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9715:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9705:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9730:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9765:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9776:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9761:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9761:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9785:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9740:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9740:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9730:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9813:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9828:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9842:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9832:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9858:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9893:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9904:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9889:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9889:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9913:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9868:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9868:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9858:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9509:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9520:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9532:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9540:6:1",
														"type": ""
													}
												],
												"src": "9464:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10070:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10080:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10092:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10103:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10088:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10088:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10080:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10160:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10173:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10184:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10169:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10169:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10116:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10116:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10116:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10241:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10254:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10265:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10250:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10197:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10197:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10197:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10034:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10046:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10054:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10065:4:1",
														"type": ""
													}
												],
												"src": "9944:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10394:138:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10416:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10412:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10498:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10511:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10522:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10507:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10440:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10440:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10440:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10389:4:1",
														"type": ""
													}
												],
												"src": "10282:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10634:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10651:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10656:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10644:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10644:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10644:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10672:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10691:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10696:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10687:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10687:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10672:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10606:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10611:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10622:11:1",
														"type": ""
													}
												],
												"src": "10538:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10819:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10841:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10849:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10837:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10837:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10853:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10830:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10830:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10830:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10811:6:1",
														"type": ""
													}
												],
												"src": "10713:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11047:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11057:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11123:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11128:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11064:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11064:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11057:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11229:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "11140:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11140:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11140:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11242:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11253:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11258:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11249:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11249:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11242:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11035:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11043:3:1",
														"type": ""
													}
												],
												"src": "10901:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11444:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11454:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11466:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11477:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11462:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11462:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11454:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11501:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11512:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11497:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11520:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11526:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11516:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11516:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11490:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11490:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11490:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11546:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11680:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11554:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11554:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11546:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11424:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11439:4:1",
														"type": ""
													}
												],
												"src": "11273:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11726:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11743:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11746:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11736:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11736:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11736:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11840:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11843:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11833:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11833:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11833:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11864:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11867:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11857:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11857:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11857:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11698:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11990:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12012:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12020:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12008:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12008:14:1"
																	},
																	{
																		"hexValue": "77697468647261773a206e6f7420676f6f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12024:20:1",
																		"type": "",
																		"value": "withdraw: not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12001:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12001:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12001:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11982:6:1",
														"type": ""
													}
												],
												"src": "11884:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12204:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12214:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12280:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12285:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12221:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12221:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12214:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12386:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																	"nodeType": "YulIdentifier",
																	"src": "12297:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12297:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12297:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12399:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12410:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12415:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12406:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12406:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12399:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12200:3:1",
														"type": ""
													}
												],
												"src": "12058:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12601:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12611:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12623:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12634:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12619:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12619:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12611:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12658:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12669:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12654:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12677:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12683:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12673:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12673:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12647:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12647:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12703:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12837:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12711:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12711:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12703:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12581:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12596:4:1",
														"type": ""
													}
												],
												"src": "12430:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12918:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12928:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12943:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12937:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12937:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12928:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12986:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12959:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12959:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12959:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12896:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12904:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12912:5:1",
														"type": ""
													}
												],
												"src": "12855:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13081:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13127:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13129:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13129:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13129:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13102:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13111:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13098:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13098:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13123:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13094:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13094:32:1"
															},
															"nodeType": "YulIf",
															"src": "13091:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "13220:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13235:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13249:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13239:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13264:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13310:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13321:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13306:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13306:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13330:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13274:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13274:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13264:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13051:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13062:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13074:6:1",
														"type": ""
													}
												],
												"src": "13004:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13467:63:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13489:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13497:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13485:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13485:14:1"
																	},
																	{
																		"hexValue": "506f776572206973206e6f7420656e6f756768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13501:21:1",
																		"type": "",
																		"value": "Power is not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13478:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13478:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13478:45:1"
														}
													]
												},
												"name": "store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13459:6:1",
														"type": ""
													}
												],
												"src": "13361:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13682:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13692:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13758:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13763:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13699:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13699:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13692:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13864:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
																	"nodeType": "YulIdentifier",
																	"src": "13775:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13775:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13775:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13877:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13888:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13893:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13884:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13884:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13877:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13670:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13678:3:1",
														"type": ""
													}
												],
												"src": "13536:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14079:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14089:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14101:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14112:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14097:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14097:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14089:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14136:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14147:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14132:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14132:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14155:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14161:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14151:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14125:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14125:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14125:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14181:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14315:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14189:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14189:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14181:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14059:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14074:4:1",
														"type": ""
													}
												],
												"src": "13908:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14439:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14461:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14469:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14457:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14457:14:1"
																	},
																	{
																		"hexValue": "416d6f756e74206973207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14473:16:1",
																		"type": "",
																		"value": "Amount is zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14450:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14450:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14450:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14431:6:1",
														"type": ""
													}
												],
												"src": "14333:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14649:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14659:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14725:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14730:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14666:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14666:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14659:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14831:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																	"nodeType": "YulIdentifier",
																	"src": "14742:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14742:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14742:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14844:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14855:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14860:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14851:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14851:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14844:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14637:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14645:3:1",
														"type": ""
													}
												],
												"src": "14503:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15046:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15056:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15068:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15079:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15064:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15064:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15056:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15103:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15114:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15099:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15099:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15122:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15128:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15118:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15118:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15092:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15092:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15092:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15148:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15282:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15156:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15156:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15148:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15026:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15041:4:1",
														"type": ""
													}
												],
												"src": "14875:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15406:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15428:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15436:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15424:14:1"
																	},
																	{
																		"hexValue": "776974686472617720506f77657220627920756e7374616b696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15440:29:1",
																		"type": "",
																		"value": "withdraw Power by unstaking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15417:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15417:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15398:6:1",
														"type": ""
													}
												],
												"src": "15300:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15629:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15639:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15705:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15710:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15646:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15646:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15639:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15811:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
																	"nodeType": "YulIdentifier",
																	"src": "15722:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15722:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15722:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15824:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15835:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15840:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15831:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15831:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15824:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15617:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15625:3:1",
														"type": ""
													}
												],
												"src": "15483:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16026:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16036:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16048:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16059:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16044:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16044:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16036:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16083:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16094:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16079:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16079:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16102:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16108:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16098:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16098:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16072:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16072:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16072:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16128:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16262:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16136:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16136:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16128:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16006:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16021:4:1",
														"type": ""
													}
												],
												"src": "15855:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16386:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16408:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16416:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16404:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16404:14:1"
																	},
																	{
																		"hexValue": "6d6967726174653a206e6f206d69677261746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16420:22:1",
																		"type": "",
																		"value": "migrate: no migrator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16397:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16397:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16397:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16378:6:1",
														"type": ""
													}
												],
												"src": "16280:170:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16602:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16612:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16678:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16683:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16619:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16619:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16612:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16784:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
																	"nodeType": "YulIdentifier",
																	"src": "16695:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16695:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16695:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16797:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16808:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16813:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16804:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16804:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16797:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16590:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16598:3:1",
														"type": ""
													}
												],
												"src": "16456:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16999:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17009:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17021:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17032:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17017:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17017:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17009:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17056:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17067:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17052:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17052:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17075:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17081:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17071:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17071:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17045:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17045:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17045:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17101:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17235:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17109:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17109:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17101:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16979:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16994:4:1",
														"type": ""
													}
												],
												"src": "16828:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17330:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17340:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17355:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17349:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17349:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17340:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17412:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "17371:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17371:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17371:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17308:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17316:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17324:5:1",
														"type": ""
													}
												],
												"src": "17253:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17521:288:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17567:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17569:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17569:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17569:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17542:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17551:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17538:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17538:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17563:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17534:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17534:32:1"
															},
															"nodeType": "YulIf",
															"src": "17531:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "17660:142:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17675:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17689:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17679:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17704:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17764:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17775:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17760:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17760:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17784:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "17714:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17714:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17704:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17491:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17502:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17514:6:1",
														"type": ""
													}
												],
												"src": "17430:379:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17921:56:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17943:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17951:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17939:14:1"
																	},
																	{
																		"hexValue": "6d6967726174653a20626164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17955:14:1",
																		"type": "",
																		"value": "migrate: bad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17932:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17932:38:1"
														}
													]
												},
												"name": "store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17913:6:1",
														"type": ""
													}
												],
												"src": "17815:162:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18129:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18139:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18205:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18210:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18146:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18146:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18139:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18311:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
																	"nodeType": "YulIdentifier",
																	"src": "18222:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18222:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18222:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18324:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18335:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18340:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18331:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18331:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18324:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18117:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18125:3:1",
														"type": ""
													}
												],
												"src": "17983:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18526:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18536:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18548:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18559:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18544:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18536:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18583:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18594:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18579:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18579:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18602:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18608:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18598:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18598:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18572:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18572:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18572:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18628:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18762:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18636:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18636:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18628:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18506:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18521:4:1",
														"type": ""
													}
												],
												"src": "18355:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18808:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18825:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18828:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18818:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18818:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18818:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18922:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18925:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18915:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18915:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18915:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18946:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18949:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18939:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18939:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18939:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "18780:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19009:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19019:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19046:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19028:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19028:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19019:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19142:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19144:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19144:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19144:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19067:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19074:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "19064:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19064:77:1"
															},
															"nodeType": "YulIf",
															"src": "19061:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19173:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19184:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19191:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19180:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19180:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "19173:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18995:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "19005:3:1",
														"type": ""
													}
												],
												"src": "18966:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19311:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19333:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19341:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19329:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19329:14:1"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742066616d696c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19345:22:1",
																		"type": "",
																		"value": "Caller is not family"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19322:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19322:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19303:6:1",
														"type": ""
													}
												],
												"src": "19205:170:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19527:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19537:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19603:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19608:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19544:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19544:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19537:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19709:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64",
																	"nodeType": "YulIdentifier",
																	"src": "19620:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19620:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19620:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19722:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19733:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19738:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19729:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19729:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19722:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19515:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19523:3:1",
														"type": ""
													}
												],
												"src": "19381:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19924:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19934:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19946:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19957:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19942:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19942:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19934:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19981:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19992:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19977:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19977:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20000:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20006:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19996:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19996:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19970:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19970:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20026:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20160:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20034:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20034:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20026:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19904:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19919:4:1",
														"type": ""
													}
												],
												"src": "19753:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20284:68:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20306:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20314:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20302:14:1"
																	},
																	{
																		"hexValue": "6465706f73697420506f776572206279207374616b696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20318:26:1",
																		"type": "",
																		"value": "deposit Power by staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20295:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20295:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20295:50:1"
														}
													]
												},
												"name": "store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20276:6:1",
														"type": ""
													}
												],
												"src": "20178:174:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20504:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20514:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20580:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20585:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20521:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20521:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20514:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20686:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
																	"nodeType": "YulIdentifier",
																	"src": "20597:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20597:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20597:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20699:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20710:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20715:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20706:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20706:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20699:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20492:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20500:3:1",
														"type": ""
													}
												],
												"src": "20358:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20901:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20911:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20923:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20934:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20919:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20919:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20911:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20958:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20969:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20954:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20954:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20977:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20983:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20973:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20973:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20947:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20947:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20947:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21003:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21137:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21011:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21011:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21003:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20881:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20896:4:1",
														"type": ""
													}
												],
												"src": "20730:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21261:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21283:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21291:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21279:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21295:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21272:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21272:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21351:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21359:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21347:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21347:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21364:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21340:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21340:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21340:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21253:6:1",
														"type": ""
													}
												],
												"src": "21155:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21532:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21542:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21608:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21613:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21549:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21549:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21542:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21714:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "21625:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21625:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21625:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21727:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21738:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21743:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21734:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21734:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21727:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21520:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21528:3:1",
														"type": ""
													}
												],
												"src": "21386:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21929:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21939:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21951:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21962:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21947:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21947:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21939:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21986:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21997:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21982:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21982:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22005:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22011:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22001:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21975:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21975:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21975:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22031:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22165:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22039:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22039:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22031:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21909:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21924:4:1",
														"type": ""
													}
												],
												"src": "21758:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22231:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22241:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22264:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22246:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22246:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22241:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22275:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22298:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22280:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22280:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22275:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22473:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22475:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22475:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22475:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "22385:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "22378:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22378:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "22371:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22371:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "22393:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "22400:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "22468:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "22396:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22396:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "22390:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22390:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "22367:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22367:105:1"
															},
															"nodeType": "YulIf",
															"src": "22364:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22505:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22520:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22523:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "22516:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22516:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "22505:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22214:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22217:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "22223:7:1",
														"type": ""
													}
												],
												"src": "22183:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22565:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22582:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22585:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22575:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22575:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22575:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22679:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22682:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22672:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22672:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22672:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22703:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22706:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22696:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22696:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22696:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "22537:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22765:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22775:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22798:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22780:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22780:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22775:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22809:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22832:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22814:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22814:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22809:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22856:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "22858:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22858:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22858:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22853:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22846:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22846:9:1"
															},
															"nodeType": "YulIf",
															"src": "22843:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22888:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22897:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22900:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "22893:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22893:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "22888:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22754:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22757:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "22763:1:1",
														"type": ""
													}
												],
												"src": "22723:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23020:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23042:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23050:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23038:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23038:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23054:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23031:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23031:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23031:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23110:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23118:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23106:15:1"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23123:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23099:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23099:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23099:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23012:6:1",
														"type": ""
													}
												],
												"src": "22914:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23286:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23296:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23362:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23367:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23303:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23303:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23296:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23468:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																	"nodeType": "YulIdentifier",
																	"src": "23379:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23379:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23379:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23481:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23492:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23497:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23488:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23488:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23481:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23274:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23282:3:1",
														"type": ""
													}
												],
												"src": "23140:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23683:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23693:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23705:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23716:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23701:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23701:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23693:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23740:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23751:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23736:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23736:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23759:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23765:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23755:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23755:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23729:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23729:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23785:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23919:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23793:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23793:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23785:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23663:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23678:4:1",
														"type": ""
													}
												],
												"src": "23512:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23981:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23991:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24014:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23996:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23996:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "23991:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24025:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24048:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24030:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24030:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24025:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24059:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24070:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24073:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24066:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24066:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "24059:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24099:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24101:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24101:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24101:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24091:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "24094:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24088:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24088:10:1"
															},
															"nodeType": "YulIf",
															"src": "24085:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "23968:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "23971:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "23977:3:1",
														"type": ""
													}
												],
												"src": "23937:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24240:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24262:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24270:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24258:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24274:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24251:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24251:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24232:6:1",
														"type": ""
													}
												],
												"src": "24134:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24463:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24473:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24539:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24544:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24480:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24480:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24473:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24645:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "24556:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24556:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24556:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24658:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24669:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24674:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24665:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24665:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24658:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24451:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24459:3:1",
														"type": ""
													}
												],
												"src": "24317:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24860:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24870:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24882:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24893:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24878:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24878:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24870:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24917:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24928:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24913:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24936:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24942:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24932:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24932:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24906:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24906:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24962:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25096:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24970:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24970:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24962:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24840:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24855:4:1",
														"type": ""
													}
												],
												"src": "24689:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25240:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25250:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25262:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25273:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25258:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25258:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25250:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25330:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25343:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25354:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25339:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25339:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25286:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25286:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25286:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25411:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25424:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25435:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25420:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25420:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25367:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25367:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25367:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25204:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25216:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25224:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25235:4:1",
														"type": ""
													}
												],
												"src": "25114:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25606:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25616:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25628:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25639:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25624:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25624:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25616:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25696:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25709:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25720:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25705:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25652:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25652:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25652:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25777:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25790:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25801:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25786:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25786:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25733:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25733:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25733:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "25859:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25872:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25883:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25868:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25868:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25815:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25815:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25815:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25562:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "25574:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25582:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25590:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25601:4:1",
														"type": ""
													}
												],
												"src": "25452:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26026:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26036:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26048:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26059:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26044:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26044:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26036:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26116:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26129:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26140:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26125:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26072:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26072:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26072:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26197:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26210:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26221:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26206:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26153:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26153:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26153:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25990:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26002:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26010:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26021:4:1",
														"type": ""
													}
												],
												"src": "25900:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26344:135:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26366:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26374:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26362:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26362:14:1"
																	},
																	{
																		"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26378:34:1",
																		"type": "",
																		"value": "SafeERC20: approve from non-zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26355:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26355:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26355:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26434:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26442:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26430:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26430:15:1"
																	},
																	{
																		"hexValue": "20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26447:24:1",
																		"type": "",
																		"value": " to non-zero allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26423:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26423:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26423:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26336:6:1",
														"type": ""
													}
												],
												"src": "26238:241:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26631:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26641:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26707:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26712:2:1",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26648:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26648:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26641:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26813:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																	"nodeType": "YulIdentifier",
																	"src": "26724:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26724:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26724:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26826:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26837:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26842:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26833:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26833:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26826:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26619:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26627:3:1",
														"type": ""
													}
												],
												"src": "26485:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27028:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27038:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27050:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27046:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27046:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27038:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27085:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27096:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27081:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27081:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27104:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27110:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27100:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27100:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27074:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27074:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27074:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27130:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27264:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27138:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27138:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27130:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27008:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27023:4:1",
														"type": ""
													}
												],
												"src": "26857:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27341:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27352:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27368:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27362:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27362:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27352:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27324:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27334:6:1",
														"type": ""
													}
												],
												"src": "27282:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27449:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27459:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "27468:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "27463:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27528:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "27553:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "27558:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "27549:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27549:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "27572:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "27577:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "27568:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27568:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "27562:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27562:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "27542:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27542:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27542:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "27489:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27492:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "27486:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27486:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "27500:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "27502:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "27511:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27514:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "27507:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27507:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "27502:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "27482:3:1",
																"statements": []
															},
															"src": "27478:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "27611:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27616:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27607:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27607:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27625:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27600:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27600:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27600:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "27431:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "27436:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27441:6:1",
														"type": ""
													}
												],
												"src": "27387:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27687:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27697:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27715:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27722:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27711:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27731:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "27727:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27727:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "27707:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27707:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "27697:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27670:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "27680:6:1",
														"type": ""
													}
												],
												"src": "27639:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27839:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27849:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27896:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "27863:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27863:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "27853:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27911:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27977:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27982:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27918:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27918:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27911:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28037:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28044:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28033:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28033:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28051:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28056:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "27998:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27998:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27998:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28072:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28083:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "28110:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "28088:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28088:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28079:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28079:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28072:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27820:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27827:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27835:3:1",
														"type": ""
													}
												],
												"src": "27747:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28248:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28258:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28270:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28281:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28266:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28266:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28258:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28305:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28316:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28301:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28301:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28324:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28330:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28320:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28320:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28294:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28294:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28294:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28350:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28422:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28431:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28358:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28358:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28350:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28220:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28232:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28243:4:1",
														"type": ""
													}
												],
												"src": "28130:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28494:149:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28504:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28527:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28509:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28509:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "28504:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28538:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28561:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28543:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28543:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "28538:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28572:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28584:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28587:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "28580:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28580:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "28572:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28614:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "28616:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28616:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28616:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "28605:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28611:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "28602:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28602:11:1"
															},
															"nodeType": "YulIf",
															"src": "28599:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "28480:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "28483:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "28489:4:1",
														"type": ""
													}
												],
												"src": "28449:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28709:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28719:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "28734:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "28728:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28728:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "28719:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28774:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "28750:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28750:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28750:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "28687:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28695:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28703:5:1",
														"type": ""
													}
												],
												"src": "28649:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28866:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28912:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "28914:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28914:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28914:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "28887:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28896:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28883:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28883:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28908:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "28879:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28879:32:1"
															},
															"nodeType": "YulIf",
															"src": "28876:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "29005:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "29020:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29034:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "29024:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "29049:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "29092:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "29103:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29088:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29088:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "29112:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "29059:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29059:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "29049:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28836:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "28847:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28859:6:1",
														"type": ""
													}
												],
												"src": "28792:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29249:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29271:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29279:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29267:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29267:14:1"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29283:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29260:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29260:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29260:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29339:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29347:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29335:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29335:15:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29352:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29328:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29328:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29328:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29241:6:1",
														"type": ""
													}
												],
												"src": "29143:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29524:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29534:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29600:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29605:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29541:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29541:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "29534:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29706:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "29617:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29617:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29617:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29719:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29730:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29735:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29726:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29726:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "29719:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29512:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29520:3:1",
														"type": ""
													}
												],
												"src": "29378:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29921:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29931:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29943:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29954:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29939:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29939:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29931:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29989:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29974:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29997:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30003:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29993:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29993:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29967:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29967:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29967:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30023:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30157:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30031:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30031:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30023:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29901:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29916:4:1",
														"type": ""
													}
												],
												"src": "29750:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30281:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30303:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30311:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30299:14:1"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30315:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30292:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30292:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30371:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30379:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30367:15:1"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30384:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30360:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30360:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30360:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30273:6:1",
														"type": ""
													}
												],
												"src": "30175:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30552:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30562:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30628:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30633:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30569:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30569:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "30562:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30734:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "30645:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30645:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30645:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30747:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30758:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30763:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30754:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30754:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30747:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30540:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30548:3:1",
														"type": ""
													}
												],
												"src": "30406:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30949:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30959:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30971:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30982:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30967:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30967:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30959:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31006:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31017:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31002:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31002:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31025:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31031:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31021:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31021:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30995:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30995:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31051:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31185:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31059:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31059:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31051:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30929:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30944:4:1",
														"type": ""
													}
												],
												"src": "30778:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31309:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31331:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31339:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31327:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31327:14:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31343:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31320:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31320:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31320:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31301:6:1",
														"type": ""
													}
												],
												"src": "31203:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31534:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31544:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31610:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31615:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31551:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31551:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31544:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31716:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "31627:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31627:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31627:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31729:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31740:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31745:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31736:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31736:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31729:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31522:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31530:3:1",
														"type": ""
													}
												],
												"src": "31388:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31931:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31941:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31953:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31949:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31949:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31941:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31988:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31999:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31984:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31984:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "32007:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32013:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32003:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32003:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31977:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31977:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31977:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32033:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "32167:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32041:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32041:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32033:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31911:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31926:4:1",
														"type": ""
													}
												],
												"src": "31760:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32243:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32254:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "32270:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "32264:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32264:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "32254:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32226:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "32236:6:1",
														"type": ""
													}
												],
												"src": "32185:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32402:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32412:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "32427:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "32412:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "32374:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "32379:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "32390:11:1",
														"type": ""
													}
												],
												"src": "32289:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32550:278:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "32560:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "32606:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "32574:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32574:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "32564:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "32621:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32704:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "32709:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32628:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32628:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "32621:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32764:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32771:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32760:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32760:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32778:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "32783:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "32725:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32725:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32725:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32799:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32810:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "32815:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32806:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32806:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32799:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32531:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "32538:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "32546:3:1",
														"type": ""
													}
												],
												"src": "32442:386:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32968:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32979:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "33066:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "33075:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32986:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32986:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "32979:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "33089:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "33096:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "33089:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "32947:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "32953:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "32964:3:1",
														"type": ""
													}
												],
												"src": "32834:271:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$286_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$286_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$286_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC20_$286(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$286(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$286(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$286(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$286t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$286(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IMigratorChef_$927(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IMigratorChef_$927(value) {\n        if iszero(eq(value, cleanup_t_contract$_IMigratorChef_$927(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IMigratorChef_$927(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IMigratorChef_$927(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IMigratorChef_$927(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IMigratorChef_$927(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC721_$933(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC721_$933(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$933(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC721_$933(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC721_$933(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$933t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$933(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IERC721_$933_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$933_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$933_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IMigratorChef_$927_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IMigratorChef_$927_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw: not good\")\n\n    }\n\n    function abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406(memPtr) {\n\n        mstore(add(memPtr, 0), \"Power is not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount is zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw Power by unstaking\")\n\n    }\n\n    function abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445(memPtr) {\n\n        mstore(add(memPtr, 0), \"migrate: no migrator\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_contract$_IERC20_$286_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$286_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$286_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8(memPtr) {\n\n        mstore(add(memPtr, 0), \"migrate: bad\")\n\n    }\n\n    function abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not family\")\n\n    }\n\n    function abi_encode_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108(memPtr) {\n\n        mstore(add(memPtr, 0), \"deposit Power by staking\")\n\n    }\n\n    function abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: approve from non-zero\")\n\n        mstore(add(memPtr, 32), \" to non-zero allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102325760003560e01c80635ffe6146116101305780638da5cb5b116100b8578063cf35fddf1161007c578063cf35fddf1461062c578063d209db8c14610648578063e2bbb15814610678578063f2fde38b14610694578063f3239ab5146106b057610232565b80638da5cb5b146105735780638dbb1e3a1461059157806393f1a40b146105c1578063c11490cc146105f2578063cb3cba551461060e57610232565b8063715018a6116100ff578063715018a6146104df5780637cd07e47146104e957806383e32135146105075780638aa28550146105255780638c51793b1461054357610232565b80635ffe61461461046c57806361c1b72414610488578063630b5ba1146104b957806364482f79146104c357610232565b80633df7aff3116101be5780634ea2813c116101825780634ea2813c146103de57806351eb05a6146103fa5780635312ea8e1461041657806356b4685f146104325780635990c5691461044e57610232565b80633df7aff31461035057806341441d3b1461036c578063441a3e7014610388578063454b0608146103a457806348cd4cb1146103c057610232565b806317caf6f11161020557806317caf6f1146102c05780631d5fbd87146102de5780631eaaa045146102fa57806322f585411461031657806323cf31181461033457610232565b8063081e3eda146102375780630ba33a58146102555780631058d281146102715780631526fe271461028d575b600080fd5b61023f6106e0565b60405161024c91906136a3565b60405180910390f35b61026f600480360381019061026a9190613721565b6106ed565b005b61028b6004803603810190610286919061377a565b6107ad565b005b6102a760048036038101906102a2919061377a565b610a6c565b6040516102b79493929190613806565b60405180910390f35b6102c8610acc565b6040516102d591906136a3565b60405180910390f35b6102f860048036038101906102f3919061384b565b610ad2565b005b610314600480360381019061030f9190613901565b610f56565b005b61031e6110e3565b60405161032b9190613963565b60405180910390f35b61034e600480360381019061034991906139bc565b611109565b005b61036a6004803603810190610365919061377a565b6111c9565b005b6103866004803603810190610381919061377a565b61124f565b005b6103a2600480360381019061039d919061384b565b61151a565b005b6103be60048036038101906103b9919061377a565b611810565b005b6103c8611b62565b6040516103d591906136a3565b60405180910390f35b6103f860048036038101906103f39190613a27565b611b68565b005b610414600480360381019061040f919061377a565b611c91565b005b610430600480360381019061042b919061377a565b611e30565b005b61044c60048036038101906104479190613721565b611f69565b005b610456612029565b60405161046391906136a3565b60405180910390f35b6104866004803603810190610481919061377a565b61202f565b005b6104a2600480360381019061049d919061377a565b6120b5565b6040516104b0929190613a88565b60405180910390f35b6104c1612109565b005b6104dd60048036038101906104d89190613ab1565b61213c565b005b6104e7612248565b005b6104f16122d0565b6040516104fe9190613b25565b60405180910390f35b61050f6122f6565b60405161051c9190613963565b60405180910390f35b61052d61231c565b60405161053a91906136a3565b60405180910390f35b61055d60048036038101906105589190613721565b612322565b60405161056a91906136a3565b60405180910390f35b61057b61236b565b6040516105889190613963565b60405180910390f35b6105ab60048036038101906105a6919061384b565b612394565b6040516105b891906136a3565b60405180910390f35b6105db60048036038101906105d69190613b40565b6123c5565b6040516105e9929190613b80565b60405180910390f35b61060c6004803603810190610607919061384b565b6123f6565b005b6106166124a0565b6040516106239190613ba9565b60405180910390f35b61064660048036038101906106419190613b40565b6124c6565b005b610662600480360381019061065d9190613721565b61287a565b60405161066f91906136a3565b60405180910390f35b610692600480360381019061068d919061384b565b612892565b005b6106ae60048036038101906106a99190613721565b612b94565b005b6106ca60048036038101906106c59190613b40565b612c8b565b6040516106d791906136a3565b60405180910390f35b6000600680549050905090565b6106f5612eb0565b73ffffffffffffffffffffffffffffffffffffffff1661071361236b565b73ffffffffffffffffffffffffffffffffffffffff1614610769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076090613c21565b60405180910390fd5b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060066000815481106107c4576107c3613c41565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160000154101561086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690613cbc565b60405180910390fd5b6108796000611c91565b60006108c382600101546108b564e8d4a510006108a787600301548760000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b612f7c90919063ffffffff16565b905060008111156109645761092081600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612fc690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008411156109dc57610984848360000154612f7c90919063ffffffff16565b82600001819055506109db33858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130249092919063ffffffff16565b5b610a0e64e8d4a51000610a0085600301548560000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b826001018190555060003373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56886604051610a5e91906136a3565b60405180910390a350505050565b60068181548110610a7c57600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60085481565b600060068281548110610ae857610ae7613c41565b5b9060005260206000209060040201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610bb49190613963565b602060405180830381865afa158015610bd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf59190613cf1565b9050836002015443118015610c0b575060008114155b15610ca6576000610c20856002015443612394565b90506000610c63600854610c558860010154610c4760035487612eb890919063ffffffff16565b612eb890919063ffffffff16565b612f3290919063ffffffff16565b9050610ca1610c9284610c8464e8d4a5100085612eb890919063ffffffff16565b612f3290919063ffffffff16565b85612fc690919063ffffffff16565b935050505b6000610cec8460010154610cde64e8d4a51000610cd0878960000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b612f7c90919063ffffffff16565b9050600060018881548110610d0457610d03613c41565b5b906000526020600020906002020190506000610d68600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484612fc690919063ffffffff16565b90508160010154811115610d9e5760008803610d8957610d8860006107ad565b5b60008814610d9d57610d9c88600061151a565b5b5b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826001015410610e23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1a90613d6a565b60405180910390fd5b610e798260010154600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612f7c90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166317e5883c336040518263ffffffff1660e01b8152600401610f199190613963565b600060405180830381600087803b158015610f3357600080fd5b505af1158015610f47573d6000803e3d6000fd5b50505050505050505050505050565b610f5e612eb0565b73ffffffffffffffffffffffffffffffffffffffff16610f7c61236b565b73ffffffffffffffffffffffffffffffffffffffff1614610fd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc990613c21565b60405180910390fd5b8015610fe157610fe0612109565b5b60006009544311610ff457600954610ff6565b435b905061100d84600854612fc690919063ffffffff16565b600881905550600660405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505050505050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611111612eb0565b73ffffffffffffffffffffffffffffffffffffffff1661112f61236b565b73ffffffffffffffffffffffffffffffffffffffff1614611185576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117c90613c21565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6111d1612eb0565b73ffffffffffffffffffffffffffffffffffffffff166111ef61236b565b73ffffffffffffffffffffffffffffffffffffffff1614611245576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123c90613c21565b60405180910390fd5b8060038190555050565b60008111611292576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128990613dd6565b60405180910390fd5b600060066000815481106112a9576112a8613c41565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506113176000611c91565b60008160000154111561141157600061136e826001015461136064e8d4a5100061135287600301548760000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b612f7c90919063ffffffff16565b9050600081111561140f576113cb81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612fc690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b600083111561148b5761146b3330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130aa909392919063ffffffff16565b611482838260000154612fc690919063ffffffff16565b81600001819055505b6114bd64e8d4a510006114af84600301548460000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b816001018190555060003373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158560405161150d91906136a3565b60405180910390a3505050565b6000820361155d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155490613e42565b60405180910390fd5b60006006838154811061157357611572613c41565b5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160000154101561161e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161590613cbc565b60405180910390fd5b61162784611c91565b6000611671826001015461166364e8d4a5100061165587600301548760000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b612f7c90919063ffffffff16565b90506000811115611712576116ce81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612fc690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b611729848360000154612f7c90919063ffffffff16565b826000018190555061176364e8d4a5100061175585600301548560000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b82600101819055506117ba33858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130249092919063ffffffff16565b843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688660405161180191906136a3565b60405180910390a35050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036118a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189890613eae565b60405180910390fd5b6000600682815481106118b7576118b6613c41565b5b9060005260206000209060040201905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161192b9190613963565b602060405180830381865afa158015611948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196c9190613cf1565b90506119bb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166131339092919063ffffffff16565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5494bb846040518263ffffffff1660e01b8152600401611a189190613ba9565b6020604051808303816000875af1158015611a37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5b9190613ee3565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611a969190613963565b602060405180830381865afa158015611ab3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad79190613cf1565b8214611b18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0f90613f5c565b60405180910390fd5b808460000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60095481565b611b70612eb0565b73ffffffffffffffffffffffffffffffffffffffff16611b8e61236b565b73ffffffffffffffffffffffffffffffffffffffff1614611be4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bdb90613c21565b60405180910390fd5b600160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b600060068281548110611ca757611ca6613c41565b5b9060005260206000209060040201905080600201544311611cc85750611e2d565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611d279190613963565b602060405180830381865afa158015611d44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d689190613cf1565b905060008111611d82574382600201819055505050611e2d565b6000611d92836002015443612394565b90506000611dd5600854611dc78660010154611db960035487612eb890919063ffffffff16565b612eb890919063ffffffff16565b612f3290919063ffffffff16565b9050611e17611e0484611df664e8d4a5100085612eb890919063ffffffff16565b612f3290919063ffffffff16565b8560030154612fc690919063ffffffff16565b8460030181905550438460020181905550505050505b50565b600060068281548110611e4657611e45613c41565b5b9060005260206000209060040201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611efd3382600001548460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130249092919063ffffffff16565b823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360000154604051611f4891906136a3565b60405180910390a36000816000018190555060008160010181905550505050565b611f71612eb0565b73ffffffffffffffffffffffffffffffffffffffff16611f8f61236b565b73ffffffffffffffffffffffffffffffffffffffff1614611fe5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fdc90613c21565b60405180910390fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60035481565b612037612eb0565b73ffffffffffffffffffffffffffffffffffffffff1661205561236b565b73ffffffffffffffffffffffffffffffffffffffff16146120ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120a290613c21565b60405180910390fd5b8060048190555050565b600181815481106120c557600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6000600680549050905060005b818110156121385761212781611c91565b8061213190613fab565b9050612116565b5050565b612144612eb0565b73ffffffffffffffffffffffffffffffffffffffff1661216261236b565b73ffffffffffffffffffffffffffffffffffffffff16146121b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121af90613c21565b60405180910390fd5b80156121c7576121c6612109565b5b61221382612205600686815481106121e2576121e1613c41565b5b906000526020600020906004020160010154600854612f7c90919063ffffffff16565b612fc690919063ffffffff16565b600881905550816006848154811061222e5761222d613c41565b5b906000526020600020906004020160010181905550505050565b612250612eb0565b73ffffffffffffffffffffffffffffffffffffffff1661226e61236b565b73ffffffffffffffffffffffffffffffffffffffff16146122c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122bb90613c21565b60405180910390fd5b6122ce6000613282565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006123bd6004546123af8585612f7c90919063ffffffff16565b612eb890919063ffffffff16565b905092915050565b6007602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b6123fe612eb0565b73ffffffffffffffffffffffffffffffffffffffff1661241c61236b565b73ffffffffffffffffffffffffffffffffffffffff1614612472576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161246990613c21565b60405180910390fd5b806001838154811061248757612486613c41565b5b9060005260206000209060020201600101819055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008211612509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161250090613dd6565b60405180910390fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806125b25750600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6125f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125e89061403f565b60405180910390fd5b6000600660008154811061260857612607613c41565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506126766000611c91565b6000816000015411156127705760006126cd82600101546126bf64e8d4a510006126b187600301548760000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b612f7c90919063ffffffff16565b9050600081111561276e5761272a81600c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612fc690919063ffffffff16565b600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b60008411156127ea576127ca3330868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130aa909392919063ffffffff16565b6127e1848260000154612fc690919063ffffffff16565b81600001819055505b61281c64e8d4a5100061280e84600301548460000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b816001018190555060008373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158660405161286c91906136a3565b60405180910390a350505050565b600c6020528060005260406000206000915090505481565b600082036128d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128cc906140ab565b60405180910390fd5b60008111612918576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161290f90613dd6565b60405180910390fd5b60006006838154811061292e5761292d613c41565b5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061299b84611c91565b600081600001541115612a955760006129f282600101546129e464e8d4a510006129d687600301548760000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b612f7c90919063ffffffff16565b90506000811115612a9357612a4f81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612fc690919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b612ae63330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166130aa909392919063ffffffff16565b612afd838260000154612fc690919063ffffffff16565b8160000181905550612b3764e8d4a51000612b2984600301548460000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051612b8691906136a3565b60405180910390a350505050565b612b9c612eb0565b73ffffffffffffffffffffffffffffffffffffffff16612bba61236b565b73ffffffffffffffffffffffffffffffffffffffff1614612c10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c0790613c21565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612c7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c769061413d565b60405180910390fd5b612c8881613282565b50565b60008060068481548110612ca257612ca1613c41565b5b9060005260206000209060040201905060006007600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401612d6e9190613963565b602060405180830381865afa158015612d8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612daf9190613cf1565b9050836002015443118015612dc5575060008114155b15612e60576000612dda856002015443612394565b90506000612e1d600854612e0f8860010154612e0160035487612eb890919063ffffffff16565b612eb890919063ffffffff16565b612f3290919063ffffffff16565b9050612e5b612e4c84612e3e64e8d4a5100085612eb890919063ffffffff16565b612f3290919063ffffffff16565b85612fc690919063ffffffff16565b935050505b612ea48360010154612e9664e8d4a51000612e88868860000154612eb890919063ffffffff16565b612f3290919063ffffffff16565b612f7c90919063ffffffff16565b94505050505092915050565b600033905090565b6000808303612eca5760009050612f2c565b60008284612ed8919061415d565b9050828482612ee791906141e6565b14612f27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f1e90614289565b60405180910390fd5b809150505b92915050565b6000612f7483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613346565b905092915050565b6000612fbe83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506133a9565b905092915050565b6000808284612fd591906142a9565b90508381101561301a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161301190614329565b60405180910390fd5b8091505092915050565b6130a58363a9059cbb60e01b8484604051602401613043929190614349565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061340d565b505050565b61312d846323b872dd60e01b8585856040516024016130cb93929190614372565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061340d565b50505050565b60008114806131bd575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b815260040161317a9291906143a9565b602060405180830381865afa158015613197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131bb9190613cf1565b145b6131fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016131f390614444565b60405180910390fd5b61327d8363095ea7b360e01b848460405160240161321b929190614349565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061340d565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808311829061338d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161338491906144e3565b60405180910390fd5b506000838561339c91906141e6565b9050809150509392505050565b60008383111582906133f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133e891906144e3565b60405180910390fd5b50600083856134009190614505565b9050809150509392505050565b600061346f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166134d49092919063ffffffff16565b90506000815111156134cf578080602001905181019061348f919061454e565b6134ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016134c5906145ed565b60405180910390fd5b5b505050565b60606134e384846000856134ec565b90509392505050565b606082471015613531576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135289061467f565b60405180910390fd5b61353a85613600565b613579576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613570906146eb565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516135a29190614752565b60006040518083038185875af1925050503d80600081146135df576040519150601f19603f3d011682016040523d82523d6000602084013e6135e4565b606091505b50915091506135f4828286613623565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561363357829050613683565b6000835111156136465782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161367a91906144e3565b60405180910390fd5b9392505050565b6000819050919050565b61369d8161368a565b82525050565b60006020820190506136b86000830184613694565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006136ee826136c3565b9050919050565b6136fe816136e3565b811461370957600080fd5b50565b60008135905061371b816136f5565b92915050565b600060208284031215613737576137366136be565b5b60006137458482850161370c565b91505092915050565b6137578161368a565b811461376257600080fd5b50565b6000813590506137748161374e565b92915050565b6000602082840312156137905761378f6136be565b5b600061379e84828501613765565b91505092915050565b6000819050919050565b60006137cc6137c76137c2846136c3565b6137a7565b6136c3565b9050919050565b60006137de826137b1565b9050919050565b60006137f0826137d3565b9050919050565b613800816137e5565b82525050565b600060808201905061381b60008301876137f7565b6138286020830186613694565b6138356040830185613694565b6138426060830184613694565b95945050505050565b60008060408385031215613862576138616136be565b5b600061387085828601613765565b925050602061388185828601613765565b9150509250929050565b6000613896826136e3565b9050919050565b6138a68161388b565b81146138b157600080fd5b50565b6000813590506138c38161389d565b92915050565b60008115159050919050565b6138de816138c9565b81146138e957600080fd5b50565b6000813590506138fb816138d5565b92915050565b60008060006060848603121561391a576139196136be565b5b600061392886828701613765565b9350506020613939868287016138b4565b925050604061394a868287016138ec565b9150509250925092565b61395d816136e3565b82525050565b60006020820190506139786000830184613954565b92915050565b6000613989826136e3565b9050919050565b6139998161397e565b81146139a457600080fd5b50565b6000813590506139b681613990565b92915050565b6000602082840312156139d2576139d16136be565b5b60006139e0848285016139a7565b91505092915050565b60006139f4826136e3565b9050919050565b613a04816139e9565b8114613a0f57600080fd5b50565b600081359050613a21816139fb565b92915050565b60008060408385031215613a3e57613a3d6136be565b5b6000613a4c85828601613a12565b9250506020613a5d85828601613765565b9150509250929050565b6000613a72826137d3565b9050919050565b613a8281613a67565b82525050565b6000604082019050613a9d6000830185613a79565b613aaa6020830184613694565b9392505050565b600080600060608486031215613aca57613ac96136be565b5b6000613ad886828701613765565b9350506020613ae986828701613765565b9250506040613afa868287016138ec565b9150509250925092565b6000613b0f826137d3565b9050919050565b613b1f81613b04565b82525050565b6000602082019050613b3a6000830184613b16565b92915050565b60008060408385031215613b5757613b566136be565b5b6000613b6585828601613765565b9250506020613b768582860161370c565b9150509250929050565b6000604082019050613b956000830185613694565b613ba26020830184613694565b9392505050565b6000602082019050613bbe60008301846137f7565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613c0b602083613bc4565b9150613c1682613bd5565b602082019050919050565b60006020820190508181036000830152613c3a81613bfe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f77697468647261773a206e6f7420676f6f640000000000000000000000000000600082015250565b6000613ca6601283613bc4565b9150613cb182613c70565b602082019050919050565b60006020820190508181036000830152613cd581613c99565b9050919050565b600081519050613ceb8161374e565b92915050565b600060208284031215613d0757613d066136be565b5b6000613d1584828501613cdc565b91505092915050565b7f506f776572206973206e6f7420656e6f75676800000000000000000000000000600082015250565b6000613d54601383613bc4565b9150613d5f82613d1e565b602082019050919050565b60006020820190508181036000830152613d8381613d47565b9050919050565b7f416d6f756e74206973207a65726f000000000000000000000000000000000000600082015250565b6000613dc0600e83613bc4565b9150613dcb82613d8a565b602082019050919050565b60006020820190508181036000830152613def81613db3565b9050919050565b7f776974686472617720506f77657220627920756e7374616b696e670000000000600082015250565b6000613e2c601b83613bc4565b9150613e3782613df6565b602082019050919050565b60006020820190508181036000830152613e5b81613e1f565b9050919050565b7f6d6967726174653a206e6f206d69677261746f72000000000000000000000000600082015250565b6000613e98601483613bc4565b9150613ea382613e62565b602082019050919050565b60006020820190508181036000830152613ec781613e8b565b9050919050565b600081519050613edd8161389d565b92915050565b600060208284031215613ef957613ef86136be565b5b6000613f0784828501613ece565b91505092915050565b7f6d6967726174653a206261640000000000000000000000000000000000000000600082015250565b6000613f46600c83613bc4565b9150613f5182613f10565b602082019050919050565b60006020820190508181036000830152613f7581613f39565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613fb68261368a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613fe857613fe7613f7c565b5b600182019050919050565b7f43616c6c6572206973206e6f742066616d696c79000000000000000000000000600082015250565b6000614029601483613bc4565b915061403482613ff3565b602082019050919050565b600060208201905081810360008301526140588161401c565b9050919050565b7f6465706f73697420506f776572206279207374616b696e670000000000000000600082015250565b6000614095601883613bc4565b91506140a08261405f565b602082019050919050565b600060208201905081810360008301526140c481614088565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000614127602683613bc4565b9150614132826140cb565b604082019050919050565b600060208201905081810360008301526141568161411a565b9050919050565b60006141688261368a565b91506141738361368a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156141ac576141ab613f7c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006141f18261368a565b91506141fc8361368a565b92508261420c5761420b6141b7565b5b828204905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6000614273602183613bc4565b915061427e82614217565b604082019050919050565b600060208201905081810360008301526142a281614266565b9050919050565b60006142b48261368a565b91506142bf8361368a565b92508282019050808211156142d7576142d6613f7c565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000614313601b83613bc4565b915061431e826142dd565b602082019050919050565b6000602082019050818103600083015261434281614306565b9050919050565b600060408201905061435e6000830185613954565b61436b6020830184613694565b9392505050565b60006060820190506143876000830186613954565b6143946020830185613954565b6143a16040830184613694565b949350505050565b60006040820190506143be6000830185613954565b6143cb6020830184613954565b9392505050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b600061442e603683613bc4565b9150614439826143d2565b604082019050919050565b6000602082019050818103600083015261445d81614421565b9050919050565b600081519050919050565b60005b8381101561448d578082015181840152602081019050614472565b60008484015250505050565b6000601f19601f8301169050919050565b60006144b582614464565b6144bf8185613bc4565b93506144cf81856020860161446f565b6144d881614499565b840191505092915050565b600060208201905081810360008301526144fd81846144aa565b905092915050565b60006145108261368a565b915061451b8361368a565b925082820390508181111561453357614532613f7c565b5b92915050565b600081519050614548816138d5565b92915050565b600060208284031215614564576145636136be565b5b600061457284828501614539565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006145d7602a83613bc4565b91506145e28261457b565b604082019050919050565b60006020820190508181036000830152614606816145ca565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000614669602683613bc4565b91506146748261460d565b604082019050919050565b600060208201905081810360008301526146988161465c565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006146d5601d83613bc4565b91506146e08261469f565b602082019050919050565b60006020820190508181036000830152614704816146c8565b9050919050565b600081519050919050565b600081905092915050565b600061472c8261470b565b6147368185614716565b935061474681856020860161446f565b80840191505092915050565b600061475e8284614721565b91508190509291505056fea264697066735822122060788b95bd3741226b6210d001709cdafdab6ac0a8524387fffb2f40a7d3a9cb64736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FFE6146 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCF35FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCF35FDDF EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0xD209DB8C EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xF3239AB5 EQ PUSH2 0x6B0 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xC11490CC EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0xCB3CBA55 EQ PUSH2 0x60E JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x83E32135 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0x8C51793B EQ PUSH2 0x543 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x61C1B724 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x4C3 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3DF7AFF3 GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x4EA2813C GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4EA2813C EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x56B4685F EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x5990C569 EQ PUSH2 0x44E JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3DF7AFF3 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x41441D3B EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x454B0608 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x3C0 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x17CAF6F1 GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x1D5FBD87 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x22F58541 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x334 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xBA33A58 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x1058D281 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x28D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23F PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x3721 JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x7AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0xACC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x384B JUMP JUMPDEST PUSH2 0xAD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH2 0xF56 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31E PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x39BC JUMP JUMPDEST PUSH2 0x1109 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x11C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x124F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x151A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x1810 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C8 PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x3A27 JUMP JUMPDEST PUSH2 0x1B68 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x1C91 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x1E30 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x3721 JUMP JUMPDEST PUSH2 0x1F69 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x456 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x486 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x202F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x377A JUMP JUMPDEST PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP3 SWAP2 SWAP1 PUSH2 0x3A88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH2 0x2109 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x3AB1 JUMP JUMPDEST PUSH2 0x213C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E7 PUSH2 0x2248 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F1 PUSH2 0x22D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x3B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50F PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52D PUSH2 0x231C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x3721 JUMP JUMPDEST PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57B PUSH2 0x236B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x588 SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x2394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x3B40 JUMP JUMPDEST PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E9 SWAP3 SWAP2 SWAP1 PUSH2 0x3B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x23F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x616 PUSH2 0x24A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x623 SWAP2 SWAP1 PUSH2 0x3BA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x646 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x3B40 JUMP JUMPDEST PUSH2 0x24C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x662 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x3721 JUMP JUMPDEST PUSH2 0x287A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x692 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x384B JUMP JUMPDEST PUSH2 0x2892 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x3721 JUMP JUMPDEST PUSH2 0x2B94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x3B40 JUMP JUMPDEST PUSH2 0x2C8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F5 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x713 PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x760 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x7C4 JUMPI PUSH2 0x7C3 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0x3CBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x879 PUSH1 0x0 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x8B5 PUSH5 0xE8D4A51000 PUSH2 0x8A7 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x964 JUMPI PUSH2 0x920 DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x9DC JUMPI PUSH2 0x984 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x9DB CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3024 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xA0E PUSH5 0xE8D4A51000 PUSH2 0xA00 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA5E SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAE8 JUMPI PUSH2 0xAE7 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB4 SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x3CF1 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xC0B JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xCA6 JUMPI PUSH1 0x0 PUSH2 0xC20 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x2394 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC63 PUSH1 0x8 SLOAD PUSH2 0xC55 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xC47 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xCA1 PUSH2 0xC92 DUP5 PUSH2 0xC84 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0xCEC DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xCDE PUSH5 0xE8D4A51000 PUSH2 0xCD0 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xD04 JUMPI PUSH2 0xD03 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0xD68 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0xD9E JUMPI PUSH1 0x0 DUP9 SUB PUSH2 0xD89 JUMPI PUSH2 0xD88 PUSH1 0x0 PUSH2 0x7AD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 EQ PUSH2 0xD9D JUMPI PUSH2 0xD9C DUP9 PUSH1 0x0 PUSH2 0x151A JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x1 ADD SLOAD LT PUSH2 0xE23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1A SWAP1 PUSH2 0x3D6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE79 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17E5883C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF19 SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF5E PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF7C PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC9 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xFE1 JUMPI PUSH2 0xFE0 PUSH2 0x2109 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD NUMBER GT PUSH2 0xFF4 JUMPI PUSH1 0x9 SLOAD PUSH2 0xFF6 JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0x100D DUP5 PUSH1 0x8 SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1111 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x112F PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1185 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117C SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x11D1 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11EF PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123C SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1292 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1289 SWAP1 PUSH2 0x3DD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x12A9 JUMPI PUSH2 0x12A8 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1317 PUSH1 0x0 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1411 JUMPI PUSH1 0x0 PUSH2 0x136E DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1360 PUSH5 0xE8D4A51000 PUSH2 0x1352 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x140F JUMPI PUSH2 0x13CB DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x148B JUMPI PUSH2 0x146B CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x30AA SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1482 DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x14BD PUSH5 0xE8D4A51000 PUSH2 0x14AF DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x150D SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x155D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1554 SWAP1 PUSH2 0x3E42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1573 JUMPI PUSH2 0x1572 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x161E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1615 SWAP1 PUSH2 0x3CBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1627 DUP5 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1671 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1663 PUSH5 0xE8D4A51000 PUSH2 0x1655 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1712 JUMPI PUSH2 0x16CE DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1729 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1763 PUSH5 0xE8D4A51000 PUSH2 0x1755 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x17BA CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3024 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1801 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1898 SWAP1 PUSH2 0x3EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18B7 JUMPI PUSH2 0x18B6 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192B SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1948 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x196C SWAP2 SWAP1 PUSH2 0x3CF1 JUMP JUMPDEST SWAP1 POP PUSH2 0x19BB PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3133 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCE5494BB DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A18 SWAP2 SWAP1 PUSH2 0x3BA9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A5B SWAP2 SWAP1 PUSH2 0x3EE3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A96 SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD7 SWAP2 SWAP1 PUSH2 0x3CF1 JUMP JUMPDEST DUP3 EQ PUSH2 0x1B18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0F SWAP1 PUSH2 0x3F5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B70 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B8E PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDB SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CA7 JUMPI PUSH2 0x1CA6 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1CC8 JUMPI POP PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D27 SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D68 SWAP2 SWAP1 PUSH2 0x3CF1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1D82 JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D92 DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x2394 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DD5 PUSH1 0x8 SLOAD PUSH2 0x1DC7 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1DB9 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1E17 PUSH2 0x1E04 DUP5 PUSH2 0x1DF6 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E46 JUMPI PUSH2 0x1E45 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1EFD CALLER DUP3 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3024 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1F48 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1F71 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F8F PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FDC SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2037 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2055 PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20A2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x20C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2138 JUMPI PUSH2 0x2127 DUP2 PUSH2 0x1C91 JUMP JUMPDEST DUP1 PUSH2 0x2131 SWAP1 PUSH2 0x3FAB JUMP JUMPDEST SWAP1 POP PUSH2 0x2116 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2144 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2162 PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x21B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21AF SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x21C7 JUMPI PUSH2 0x21C6 PUSH2 0x2109 JUMP JUMPDEST JUMPDEST PUSH2 0x2213 DUP3 PUSH2 0x2205 PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x21E2 JUMPI PUSH2 0x21E1 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x222E JUMPI PUSH2 0x222D PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x2250 PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x226E PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22BB SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22CE PUSH1 0x0 PUSH2 0x3282 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23BD PUSH1 0x4 SLOAD PUSH2 0x23AF DUP6 DUP6 PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x23FE PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x241C PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2472 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2469 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2487 JUMPI PUSH2 0x2486 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x2509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2500 SWAP1 PUSH2 0x3DD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x25B2 JUMPI POP PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x25F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25E8 SWAP1 PUSH2 0x403F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x2608 JUMPI PUSH2 0x2607 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x2676 PUSH1 0x0 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2770 JUMPI PUSH1 0x0 PUSH2 0x26CD DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x26BF PUSH5 0xE8D4A51000 PUSH2 0x26B1 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x276E JUMPI PUSH2 0x272A DUP2 PUSH1 0xC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x27EA JUMPI PUSH2 0x27CA CALLER ADDRESS DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x30AA SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27E1 DUP5 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x281C PUSH5 0xE8D4A51000 PUSH2 0x280E DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD PUSH2 0x286C SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x28D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28CC SWAP1 PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2918 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x290F SWAP1 PUSH2 0x3DD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x292E JUMPI PUSH2 0x292D PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x299B DUP5 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2A95 JUMPI PUSH1 0x0 PUSH2 0x29F2 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x29E4 PUSH5 0xE8D4A51000 PUSH2 0x29D6 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2A93 JUMPI PUSH2 0x2A4F DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH2 0x2AE6 CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x30AA SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AFD DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2B37 PUSH5 0xE8D4A51000 PUSH2 0x2B29 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2B86 SWAP2 SWAP1 PUSH2 0x36A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x2B9C PUSH2 0x2EB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2BBA PUSH2 0x236B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C07 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C76 SWAP1 PUSH2 0x413D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C88 DUP2 PUSH2 0x3282 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2CA2 JUMPI PUSH2 0x2CA1 PUSH2 0x3C41 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D6E SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DAF SWAP2 SWAP1 PUSH2 0x3CF1 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x2DC5 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x2E60 JUMPI PUSH1 0x0 PUSH2 0x2DDA DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x2394 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2E1D PUSH1 0x8 SLOAD PUSH2 0x2E0F DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x2E01 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2E5B PUSH2 0x2E4C DUP5 PUSH2 0x2E3E PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2FC6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x2EA4 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x2E96 PUSH5 0xE8D4A51000 PUSH2 0x2E88 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2EB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2F7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SUB PUSH2 0x2ECA JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2F2C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x2ED8 SWAP2 SWAP1 PUSH2 0x415D JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x2EE7 SWAP2 SWAP1 PUSH2 0x41E6 JUMP JUMPDEST EQ PUSH2 0x2F27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F1E SWAP1 PUSH2 0x4289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F74 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x3346 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FBE DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x33A9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x2FD5 SWAP2 SWAP1 PUSH2 0x42A9 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x301A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3011 SWAP1 PUSH2 0x4329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x30A5 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3043 SWAP3 SWAP2 SWAP1 PUSH2 0x4349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x340D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x312D DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x30CB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x340D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x31BD JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x317A SWAP3 SWAP2 SWAP1 PUSH2 0x43A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3197 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31BB SWAP2 SWAP1 PUSH2 0x3CF1 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x31FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31F3 SWAP1 PUSH2 0x4444 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x327D DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x321B SWAP3 SWAP2 SWAP1 PUSH2 0x4349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x340D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x338D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3384 SWAP2 SWAP1 PUSH2 0x44E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x339C SWAP2 SWAP1 PUSH2 0x41E6 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x33F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E8 SWAP2 SWAP1 PUSH2 0x44E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x3400 SWAP2 SWAP1 PUSH2 0x4505 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x34D4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x34CF JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x348F SWAP2 SWAP1 PUSH2 0x454E JUMP JUMPDEST PUSH2 0x34CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C5 SWAP1 PUSH2 0x45ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x34E3 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x34EC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3528 SWAP1 PUSH2 0x467F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x353A DUP6 PUSH2 0x3600 JUMP JUMPDEST PUSH2 0x3579 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3570 SWAP1 PUSH2 0x46EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x35A2 SWAP2 SWAP1 PUSH2 0x4752 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x35DF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x35E4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x35F4 DUP3 DUP3 DUP7 PUSH2 0x3623 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3633 JUMPI DUP3 SWAP1 POP PUSH2 0x3683 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x3646 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x367A SWAP2 SWAP1 PUSH2 0x44E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x369D DUP2 PUSH2 0x368A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3694 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36EE DUP3 PUSH2 0x36C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36FE DUP2 PUSH2 0x36E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x371B DUP2 PUSH2 0x36F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3737 JUMPI PUSH2 0x3736 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3745 DUP5 DUP3 DUP6 ADD PUSH2 0x370C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3757 DUP2 PUSH2 0x368A JUMP JUMPDEST DUP2 EQ PUSH2 0x3762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3774 DUP2 PUSH2 0x374E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3790 JUMPI PUSH2 0x378F PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x379E DUP5 DUP3 DUP6 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37CC PUSH2 0x37C7 PUSH2 0x37C2 DUP5 PUSH2 0x36C3 JUMP JUMPDEST PUSH2 0x37A7 JUMP JUMPDEST PUSH2 0x36C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37DE DUP3 PUSH2 0x37B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F0 DUP3 PUSH2 0x37D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3800 DUP2 PUSH2 0x37E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x381B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x37F7 JUMP JUMPDEST PUSH2 0x3828 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3694 JUMP JUMPDEST PUSH2 0x3835 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3694 JUMP JUMPDEST PUSH2 0x3842 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3694 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3862 JUMPI PUSH2 0x3861 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3870 DUP6 DUP3 DUP7 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3881 DUP6 DUP3 DUP7 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3896 DUP3 PUSH2 0x36E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38A6 DUP2 PUSH2 0x388B JUMP JUMPDEST DUP2 EQ PUSH2 0x38B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38C3 DUP2 PUSH2 0x389D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38DE DUP2 PUSH2 0x38C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x38E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38FB DUP2 PUSH2 0x38D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x391A JUMPI PUSH2 0x3919 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3928 DUP7 DUP3 DUP8 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3939 DUP7 DUP3 DUP8 ADD PUSH2 0x38B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x394A DUP7 DUP3 DUP8 ADD PUSH2 0x38EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x395D DUP2 PUSH2 0x36E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3978 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3954 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3989 DUP3 PUSH2 0x36E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3999 DUP2 PUSH2 0x397E JUMP JUMPDEST DUP2 EQ PUSH2 0x39A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39B6 DUP2 PUSH2 0x3990 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39D2 JUMPI PUSH2 0x39D1 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39E0 DUP5 DUP3 DUP6 ADD PUSH2 0x39A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F4 DUP3 PUSH2 0x36E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A04 DUP2 PUSH2 0x39E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x3A0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A21 DUP2 PUSH2 0x39FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A3E JUMPI PUSH2 0x3A3D PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A4C DUP6 DUP3 DUP7 ADD PUSH2 0x3A12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3A5D DUP6 DUP3 DUP7 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A72 DUP3 PUSH2 0x37D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A82 DUP2 PUSH2 0x3A67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A9D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A79 JUMP JUMPDEST PUSH2 0x3AAA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3694 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3ACA JUMPI PUSH2 0x3AC9 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AD8 DUP7 DUP3 DUP8 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3AE9 DUP7 DUP3 DUP8 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3AFA DUP7 DUP3 DUP8 ADD PUSH2 0x38EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B0F DUP3 PUSH2 0x37D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B1F DUP2 PUSH2 0x3B04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B3A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B57 JUMPI PUSH2 0x3B56 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B65 DUP6 DUP3 DUP7 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3B76 DUP6 DUP3 DUP7 ADD PUSH2 0x370C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B95 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3694 JUMP JUMPDEST PUSH2 0x3BA2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3694 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BBE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C0B PUSH1 0x20 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C16 DUP3 PUSH2 0x3BD5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C3A DUP2 PUSH2 0x3BFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA6 PUSH1 0x12 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CB1 DUP3 PUSH2 0x3C70 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CD5 DUP2 PUSH2 0x3C99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3CEB DUP2 PUSH2 0x374E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D07 JUMPI PUSH2 0x3D06 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D15 DUP5 DUP3 DUP6 ADD PUSH2 0x3CDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506F776572206973206E6F7420656E6F75676800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D54 PUSH1 0x13 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D5F DUP3 PUSH2 0x3D1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D83 DUP2 PUSH2 0x3D47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206973207A65726F000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DC0 PUSH1 0xE DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DCB DUP3 PUSH2 0x3D8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DEF DUP2 PUSH2 0x3DB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x776974686472617720506F77657220627920756E7374616B696E670000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E2C PUSH1 0x1B DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E37 DUP3 PUSH2 0x3DF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E5B DUP2 PUSH2 0x3E1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206E6F206D69677261746F72000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E98 PUSH1 0x14 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EA3 DUP3 PUSH2 0x3E62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EC7 DUP2 PUSH2 0x3E8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3EDD DUP2 PUSH2 0x389D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EF9 JUMPI PUSH2 0x3EF8 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F07 DUP5 DUP3 DUP6 ADD PUSH2 0x3ECE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206261640000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F46 PUSH1 0xC DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F51 DUP3 PUSH2 0x3F10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F75 DUP2 PUSH2 0x3F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FB6 DUP3 PUSH2 0x368A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3FE8 JUMPI PUSH2 0x3FE7 PUSH2 0x3F7C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742066616D696C79000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4029 PUSH1 0x14 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4034 DUP3 PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4058 DUP2 PUSH2 0x401C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6465706F73697420506F776572206279207374616B696E670000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4095 PUSH1 0x18 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x40A0 DUP3 PUSH2 0x405F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40C4 DUP2 PUSH2 0x4088 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4127 PUSH1 0x26 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4132 DUP3 PUSH2 0x40CB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4156 DUP2 PUSH2 0x411A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4168 DUP3 PUSH2 0x368A JUMP JUMPDEST SWAP2 POP PUSH2 0x4173 DUP4 PUSH2 0x368A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x41AC JUMPI PUSH2 0x41AB PUSH2 0x3F7C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x41F1 DUP3 PUSH2 0x368A JUMP JUMPDEST SWAP2 POP PUSH2 0x41FC DUP4 PUSH2 0x368A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x420C JUMPI PUSH2 0x420B PUSH2 0x41B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4273 PUSH1 0x21 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x427E DUP3 PUSH2 0x4217 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42A2 DUP2 PUSH2 0x4266 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B4 DUP3 PUSH2 0x368A JUMP JUMPDEST SWAP2 POP PUSH2 0x42BF DUP4 PUSH2 0x368A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x42D7 JUMPI PUSH2 0x42D6 PUSH2 0x3F7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4313 PUSH1 0x1B DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x431E DUP3 PUSH2 0x42DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4342 DUP2 PUSH2 0x4306 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x435E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3954 JUMP JUMPDEST PUSH2 0x436B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3694 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4387 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3954 JUMP JUMPDEST PUSH2 0x4394 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3954 JUMP JUMPDEST PUSH2 0x43A1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3694 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x43BE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3954 JUMP JUMPDEST PUSH2 0x43CB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3954 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x442E PUSH1 0x36 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4439 DUP3 PUSH2 0x43D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x445D DUP2 PUSH2 0x4421 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x448D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4472 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44B5 DUP3 PUSH2 0x4464 JUMP JUMPDEST PUSH2 0x44BF DUP2 DUP6 PUSH2 0x3BC4 JUMP JUMPDEST SWAP4 POP PUSH2 0x44CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x446F JUMP JUMPDEST PUSH2 0x44D8 DUP2 PUSH2 0x4499 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44FD DUP2 DUP5 PUSH2 0x44AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4510 DUP3 PUSH2 0x368A JUMP JUMPDEST SWAP2 POP PUSH2 0x451B DUP4 PUSH2 0x368A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4533 JUMPI PUSH2 0x4532 PUSH2 0x3F7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4548 DUP2 PUSH2 0x38D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4564 JUMPI PUSH2 0x4563 PUSH2 0x36BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4572 DUP5 DUP3 DUP6 ADD PUSH2 0x4539 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D7 PUSH1 0x2A DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x45E2 DUP3 PUSH2 0x457B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4606 DUP2 PUSH2 0x45CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4669 PUSH1 0x26 DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4674 DUP3 PUSH2 0x460D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4698 DUP2 PUSH2 0x465C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46D5 PUSH1 0x1D DUP4 PUSH2 0x3BC4 JUMP JUMPDEST SWAP2 POP PUSH2 0x46E0 DUP3 PUSH2 0x469F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4704 DUP2 PUSH2 0x46C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x472C DUP3 PUSH2 0x470B JUMP JUMPDEST PUSH2 0x4736 DUP2 DUP6 PUSH2 0x4716 JUMP JUMPDEST SWAP4 POP PUSH2 0x4746 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x446F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x475E DUP3 DUP5 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x78 DUP12 SWAP6 0xBD CALLDATACOPY COINBASE 0x22 PUSH12 0x6210D001709CDAFDAB6AC0A8 MSTORE NUMBER DUP8 SELFDESTRUCT 0xFB 0x2F BLOCKHASH 0xA7 0xD3 0xA9 0xCB PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "22111:14343:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27360:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25201:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;35146:749;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23943:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;24184:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25953:1268;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;27624:560;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24347:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28662:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;36342:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33264:848;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;32424:787;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28887:491;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24276:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25615:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30769:690;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;35974:356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25335:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23657:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27229:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23533:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;30513:180;;;:::i;:::-;;28281:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20756:103;;;:::i;:::-;;23880:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24310:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23740:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25489:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20105:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29454:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24025:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;25829:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23593:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34120:974;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24391:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31529:843;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;21014:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29663:767;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27360:95;27405:7;27432:8;:15;;;;27425:22;;27360:95;:::o;25201:126::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;25303:16:::1;25285:15;;:34;;;;;;;;;;;;;;;;;;25201:126:::0;:::o;35146:749::-;35203:21;35227:8;35236:1;35227:11;;;;;;;;:::i;:::-;;;;;;;;;;;;35203:35;;35249:21;35273:8;:11;35282:1;35273:11;;;;;;;;;;;:23;35285:10;35273:23;;;;;;;;;;;;;;;35249:47;;35332:7;35317:4;:11;;;:22;;35309:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;35373:13;35384:1;35373:10;:13::i;:::-;35397:15;35415:69;35468:4;:15;;;35415:48;35458:4;35415:38;35431:4;:21;;;35415:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;35397:87;;35508:1;35498:7;:11;35495:107;;;35553:37;35582:7;35553:12;:24;35566:10;35553:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;35526:12;:24;35539:10;35526:24;;;;;;;;;;;;;;;:64;;;;35495:107;35625:1;35615:7;:11;35612:151;;;35657:24;35673:7;35657:4;:11;;;:15;;:24;;;;:::i;:::-;35643:4;:11;;:38;;;;35696:55;35730:10;35743:7;35696:4;:12;;;;;;;;;;;;:25;;;;:55;;;;;:::i;:::-;35612:151;35791:48;35834:4;35791:38;35807:4;:21;;;35791:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;35773:4;:15;;:66;;;;35876:1;35864:10;35855:32;;;35879:7;35855:32;;;;;;:::i;:::-;;;;;;;;35192:703;;;35146:749;:::o;23943:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;24184:34::-;;;;:::o;25953:1268::-;26024:21;26048:8;26057:4;26048:14;;;;;;;;:::i;:::-;;;;;;;;;;;;26024:38;;26073:21;26097:8;:14;26106:4;26097:14;;;;;;;;;;;:26;26112:10;26097:26;;;;;;;;;;;;;;;26073:50;;26134:24;26161:4;:21;;;26134:48;;26193:16;26212:4;:12;;;;;;;;;;;;:22;;;26243:4;26212:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26193:56;;26279:4;:20;;;26264:12;:35;:52;;;;;26315:1;26303:8;:13;;26264:52;26260:354;;;26333:18;26354:49;26368:4;:20;;;26390:12;26354:13;:49::i;:::-;26333:70;;26418:19;26440:71;26495:15;;26440:50;26474:4;:15;;;26440:29;26455:13;;26440:10;:14;;:29;;;;:::i;:::-;:33;;:50;;;;:::i;:::-;:54;;:71;;;;:::i;:::-;26418:93;;26545:57;26566:35;26592:8;26566:21;26582:4;26566:11;:15;;:21;;;;:::i;:::-;:25;;:35;;;;:::i;:::-;26545:16;:20;;:57;;;;:::i;:::-;26526:76;;26318:296;;26260:354;26624:15;26642:64;26690:4;:15;;;26642:43;26680:4;26642:33;26658:16;26642:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:43;;;;:::i;:::-;:47;;:64;;;;:::i;:::-;26624:82;;26717:20;26740:8;26749:5;26740:15;;;;;;;;:::i;:::-;;;;;;;;;;;;26717:38;;26766:13;26782:37;26794:12;:24;26807:10;26794:24;;;;;;;;;;;;;;;;26782:7;:11;;:37;;;;:::i;:::-;26766:53;;26841:3;:9;;;26833:5;:17;26830:188;;;26877:1;26869:4;:9;26866:63;;26898:15;26911:1;26898:12;:15::i;:::-;26866:63;26954:1;26946:4;:9;26943:64;;26975:16;26984:4;26989:1;26975:8;:16::i;:::-;26943:64;26830:188;27048:12;:24;27061:10;27048:24;;;;;;;;;;;;;;;;27036:3;:9;;;:36;27028:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;27134:39;27163:3;:9;;;27134:12;:24;27147:10;27134:24;;;;;;;;;;;;;;;;:28;;:39;;;;:::i;:::-;27107:12;:24;27120:10;27107:24;;;;;;;;;;;;;;;:66;;;;27184:3;:7;;;;;;;;;;;;:17;;;27202:10;27184:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26013:1208;;;;;;;25953:1268;;:::o;27624:560::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;27727:11:::1;27723:61;;;27755:17;:15;:17::i;:::-;27723:61;27794:23;27835:10;;27820:12;:25;:53;;27863:10;;27820:53;;;27848:12;27820:53;27794:79;;27902:32;27922:11;27902:15;;:19;;:32;;;;:::i;:::-;27884:15;:50;;;;27945:8;27973:192;;;;;;;;28010:8;27973:192;;;;;;28049:11;27973:192;;;;28096:15;27973:192;;;;28148:1;27973:192;;::::0;27945:231:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27712:472;27624:560:::0;;;:::o;24347:35::-;;;;;;;;;;;;;:::o;28662:102::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;28747:9:::1;28736:8;;:20;;;;;;;;;;;;;;;;;;28662:102:::0;:::o;36342:109::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;36434:9:::1;36418:13;:25;;;;36342:109:::0;:::o;33264:848::-;33339:1;33329:7;:11;33321:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;33372:21;33396:8;33405:1;33396:11;;;;;;;;:::i;:::-;;;;;;;;;;;;33372:35;;33418:21;33442:8;:11;33451:1;33442:11;;;;;;;;;;;:32;33462:10;33442:32;;;;;;;;;;;;;;;33418:56;;33495:13;33506:1;33495:10;:13::i;:::-;33537:1;33523:4;:11;;;:15;33519:282;;;33555:15;33573:69;33626:4;:15;;;33573:48;33616:4;33573:38;33589:4;:21;;;33573:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;33555:87;;33670:1;33660:7;:11;33657:133;;;33728:46;33766:7;33728:12;:33;33749:10;33728:33;;;;;;;;;;;;;;;;:37;;:46;;;;:::i;:::-;33692:12;:33;33713:10;33692:33;;;;;;;;;;;;;;;:82;;;;33657:133;33540:261;33519:282;33824:1;33814:7;:11;33811:170;;;33842:74;33880:10;33901:4;33908:7;33842:4;:12;;;;;;;;;;;;:29;;;;:74;;;;;;:::i;:::-;33945:24;33961:7;33945:4;:11;;;:15;;:24;;;;:::i;:::-;33931:4;:11;;:38;;;;33811:170;34009:48;34052:4;34009:38;34025:4;:21;;;34009:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;33991:4;:15;;:66;;;;34093:1;34081:10;34073:31;;;34096:7;34073:31;;;;;;:::i;:::-;;;;;;;;33310:802;;33264:848;:::o;32424:787::-;32510:1;32502:4;:9;32493:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;32556:21;32580:8;32589:4;32580:14;;;;;;;;:::i;:::-;;;;;;;;;;;;32556:38;;32605:21;32629:8;:14;32638:4;32629:14;;;;;;;;;;;:26;32644:10;32629:26;;;;;;;;;;;;;;;32605:50;;32689:7;32674:4;:11;;;:22;;32666:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;32730:16;32741:4;32730:10;:16::i;:::-;32757:15;32775:69;32828:4;:15;;;32775:48;32818:4;32775:38;32791:4;:21;;;32775:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;32757:87;;32868:1;32858:7;:11;32855:106;;;32912:37;32941:7;32912:12;:24;32925:10;32912:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;32885:12;:24;32898:10;32885:24;;;;;;;;;;;;;;;:64;;;;32855:106;32985:24;33001:7;32985:4;:11;;;:15;;:24;;;;:::i;:::-;32971:4;:11;;:38;;;;33038:48;33081:4;33038:38;33054:4;:21;;;33038:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;33020:4;:15;;:66;;;;33097:55;33131:10;33144:7;33097:4;:12;;;;;;;;;;;;:25;;;;:55;;;;;:::i;:::-;33189:4;33177:10;33168:35;;;33195:7;33168:35;;;;;;:::i;:::-;;;;;;;;32480:731;;;32424:787;;:::o;28887:491::-;28973:1;28944:31;;28952:8;;;;;;;;;;;28944:31;;;28936:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;29011:21;29035:8;29044:4;29035:14;;;;;;;;:::i;:::-;;;;;;;;;;;;29011:38;;29060:14;29077:4;:12;;;;;;;;;;;;29060:29;;29100:11;29114:7;:17;;;29140:4;29114:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29100:46;;29157:43;29185:8;;;;;;;;;;;29196:3;29157:7;:19;;;;:43;;;;;:::i;:::-;29211:17;29231:8;;;;;;;;;;;:16;;;29248:7;29231:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29211:45;;29282:10;:20;;;29311:4;29282:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29275:3;:42;29267:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;29360:10;29345:4;:12;;;:25;;;;;;;;;;;;;;;;;;28925:453;;;;28887:491;:::o;24276:25::-;;;;:::o;25615:206::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;25689:8:::1;25717:85;;;;;;;;25750:4;25717:85;;;;;;25780:6;25717:85;;::::0;25689:124:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25615:206:::0;;:::o;30769:690::-;30821:21;30845:8;30854:4;30845:14;;;;;;;;:::i;:::-;;;;;;;;;;;;30821:38;;30890:4;:20;;;30874:12;:36;30870:75;;30927:7;;;30870:75;30955:16;30974:4;:12;;;;;;;;;;;;:22;;;31005:4;30974:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30955:56;;31038:1;31026:8;:13;31022:102;;31079:12;31056:4;:20;;:35;;;;31106:7;;;;31022:102;31134:18;31155:49;31169:4;:20;;;31191:12;31155:13;:49::i;:::-;31134:70;;31215:19;31237:71;31292:15;;31237:50;31271:4;:15;;;31237:29;31252:13;;31237:10;:14;;:29;;;;:::i;:::-;:33;;:50;;;;:::i;:::-;:54;;:71;;;;:::i;:::-;31215:93;;31343:62;31369:35;31395:8;31369:21;31385:4;31369:11;:15;;:21;;;;:::i;:::-;:25;;:35;;;;:::i;:::-;31343:4;:21;;;:25;;:62;;;;:::i;:::-;31319:4;:21;;:86;;;;31439:12;31416:4;:20;;:35;;;;30810:649;;;;30769:690;;:::o;35974:356::-;36033:21;36057:8;36066:4;36057:14;;;;;;;;:::i;:::-;;;;;;;;;;;;36033:38;;36082:21;36106:8;:14;36115:4;36106:14;;;;;;;;;;;:26;36121:10;36106:26;;;;;;;;;;;;;;;36082:50;;36143:59;36177:10;36190:4;:11;;;36143:4;:12;;;;;;;;;;;;:25;;;;:59;;;;;:::i;:::-;36248:4;36236:10;36218:48;;;36254:4;:11;;;36218:48;;;;;;:::i;:::-;;;;;;;;36291:1;36277:4;:11;;:15;;;;36321:1;36303:4;:15;;:19;;;;36022:308;;35974:356;:::o;25335:146::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;25452:21:::1;25429:20;;:44;;;;;;;;;;;;;;;;;;25335:146:::0;:::o;23657:28::-;;;;:::o;27229:123::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;27328:16:::1;27309;:35;;;;27229:123:::0;:::o;23533:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;30513:180::-;30558:14;30575:8;:15;;;;30558:32;;30606:11;30601:85;30629:6;30623:3;:12;30601:85;;;30659:15;30670:3;30659:10;:15::i;:::-;30637:5;;;;:::i;:::-;;;30601:85;;;;30547:146;30513:180::o;28281:305::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;28380:11:::1;28376:61;;;28408:17;:15;:17::i;:::-;28376:61;28465:63;28516:11;28465:46;28485:8;28494:4;28485:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;28465:15;;:19;;:46;;;;:::i;:::-;:50;;:63;;;;:::i;:::-;28447:15;:81;;;;28567:11;28539:8;28548:4;28539:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;:39;;;;28281:305:::0;;;:::o;20756:103::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;20821:30:::1;20848:1;20821:18;:30::i;:::-;20756:103::o:0;23880:29::-;;;;;;;;;;;;;:::o;24310:30::-;;;;;;;;;;;;;:::o;23740:35::-;;;;:::o;25489:118::-;25551:7;25578:12;:21;25591:7;25578:21;;;;;;;;;;;;;;;;25571:28;;25489:118;;;:::o;20105:87::-;20151:7;20178:6;;;;;;;;;;;20171:13;;20105:87;:::o;29454:144::-;29526:7;29554:36;29573:16;;29554:14;29562:5;29554:3;:7;;:14;;;;:::i;:::-;:18;;:36;;;;:::i;:::-;29547:43;;29454:144;;;;:::o;24025:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;25829:116::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;25931:6:::1;25907:8;25916:5;25907:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;:30;;;;25829:116:::0;;:::o;23593:17::-;;;;;;;;;;;;;:::o;34120:974::-;34220:1;34210:7;:11;34202:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;34273:15;;;;;;;;;;;34259:29;;:10;:29;;;:67;;;;34306:20;;;;;;;;;;;34292:34;;:10;:34;;;34259:67;34251:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;34362:21;34386:8;34395:1;34386:11;;;;;;;;:::i;:::-;;;;;;;;;;;;34362:35;;34408:21;34432:8;:11;34441:1;34432:11;;;;;;;;;;;:30;34452:8;34432:30;;;;;;;;;;;;;;;34408:54;;34483:13;34494:1;34483:10;:13::i;:::-;34525:1;34511:4;:11;;;:15;34507:278;;;34543:15;34561:69;34614:4;:15;;;34561:48;34604:4;34561:38;34577:4;:21;;;34561:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;34543:87;;34658:1;34648:7;:11;34645:129;;;34714:44;34750:7;34714:12;:31;34735:8;34714:31;;;;;;;;;;;;;;;;:35;;:44;;;;:::i;:::-;34680:12;:31;34701:8;34680:31;;;;;;;;;;;;;;;:78;;;;34645:129;34528:257;34507:278;34808:1;34798:7;:11;34795:170;;;34826:74;34864:10;34885:4;34892:7;34826:4;:12;;;;;;;;;;;;:29;;;;:74;;;;;;:::i;:::-;34929:24;34945:7;34929:4;:11;;;:15;;:24;;;;:::i;:::-;34915:4;:11;;:38;;;;34795:170;34993:48;35036:4;34993:38;35009:4;:21;;;34993:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;34975:4;:15;;:66;;;;35075:1;35065:8;35057:29;;;35078:7;35057:29;;;;;;:::i;:::-;;;;;;;;34191:903;;34120:974;;:::o;24391:47::-;;;;;;;;;;;;;;;;;:::o;31529:843::-;31612:1;31604:4;:9;31595:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;31671:1;31661:7;:11;31653:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;31704:21;31728:8;31737:4;31728:14;;;;;;;;:::i;:::-;;;;;;;;;;;;31704:38;;31753:21;31777:8;:14;31786:4;31777:14;;;;;;;;;;;:26;31792:10;31777:26;;;;;;;;;;;;;;;31753:50;;31814:16;31825:4;31814:10;:16::i;:::-;31859:1;31845:4;:11;;;:15;31841:263;;;31877:15;31895:69;31948:4;:15;;;31895:48;31938:4;31895:38;31911:4;:21;;;31895:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;31877:87;;31992:1;31982:7;:11;31979:114;;;32040:37;32069:7;32040:12;:24;32053:10;32040:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;32013:12;:24;32026:10;32013:24;;;;;;;;;;;;;;;:64;;;;31979:114;31862:242;31841:263;32114:74;32152:10;32173:4;32180:7;32114:4;:12;;;;;;;;;;;;:29;;;;:74;;;;;;:::i;:::-;32213:24;32229:7;32213:4;:11;;;:15;;:24;;;;:::i;:::-;32199:4;:11;;:38;;;;32266:48;32309:4;32266:38;32282:4;:21;;;32266:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;32248:4;:15;;:66;;;;32350:4;32338:10;32330:34;;;32356:7;32330:34;;;;;;:::i;:::-;;;;;;;;31584:788;;31529:843;;:::o;21014:201::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;21123:1:::1;21103:22;;:8;:22;;::::0;21095:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;21179:28;21198:8;21179:18;:28::i;:::-;21014:201:::0;:::o;29663:767::-;29737:7;29756:21;29780:8;29789:4;29780:14;;;;;;;;:::i;:::-;;;;;;;;;;;;29756:38;;29805:21;29829:8;:14;29838:4;29829:14;;;;;;;;;;;:21;29844:5;29829:21;;;;;;;;;;;;;;;29805:45;;29861:24;29888:4;:21;;;29861:48;;29920:16;29939:4;:12;;;;;;;;;;;;:22;;;29970:4;29939:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29920:56;;30006:4;:20;;;29991:12;:35;:52;;;;;30042:1;30030:8;:13;;29991:52;29987:354;;;30060:18;30081:49;30095:4;:20;;;30117:12;30081:13;:49::i;:::-;30060:70;;30145:19;30167:71;30222:15;;30167:50;30201:4;:15;;;30167:29;30182:13;;30167:10;:14;;:29;;;;:::i;:::-;:33;;:50;;;;:::i;:::-;:54;;:71;;;;:::i;:::-;30145:93;;30272:57;30293:35;30319:8;30293:21;30309:4;30293:11;:15;;:21;;;;:::i;:::-;:25;;:35;;;;:::i;:::-;30272:16;:20;;:57;;;;:::i;:::-;30253:76;;30045:296;;29987:354;30358:64;30406:4;:15;;;30358:43;30396:4;30358:33;30374:16;30358:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:43;;;;:::i;:::-;:47;;:64;;;;:::i;:::-;30351:71;;;;;;29663:767;;;;:::o;19479:98::-;19532:7;19559:10;19552:17;;19479:98;:::o;1757:471::-;1815:7;2065:1;2060;:6;2056:47;;2090:1;2083:8;;;;2056:47;2115:9;2131:1;2127;:5;;;;:::i;:::-;2115:17;;2160:1;2155;2151;:5;;;;:::i;:::-;:10;2143:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2219:1;2212:8;;;1757:471;;;;;:::o;2696:132::-;2754:7;2781:39;2785:1;2788;2781:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;2774:46;;2696:132;;;;:::o;841:136::-;899:7;926:43;930:1;933;926:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;919:50;;841:136;;;;:::o;385:181::-;443:7;463:9;479:1;475;:5;;;;:::i;:::-;463:17;;504:1;499;:6;;491:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;557:1;550:8;;;385:181;;;;:::o;16150:211::-;16267:86;16287:5;16317:23;;;16342:2;16346:5;16294:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16267:19;:86::i;:::-;16150:211;;;:::o;16369:248::-;16513:96;16533:5;16563:27;;;16592:4;16598:2;16602:5;16540:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16513:19;:96::i;:::-;16369:248;;;;:::o;16886:616::-;17259:1;17250:5;:10;17249:62;;;;17309:1;17266:5;:15;;;17290:4;17297:7;17266:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;17249:62;17227:166;;;;;;;;;;;;:::i;:::-;;;;;;;;;17404:90;17424:5;17454:22;;;17478:7;17487:5;17431:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17404:19;:90::i;:::-;16886:616;;;:::o;21375:191::-;21449:16;21468:6;;;;;;;;;;;21449:25;;21494:8;21485:6;;:17;;;;;;;;;;;;;;;;;;21549:8;21518:40;;21539:8;21518:40;;;;;;;;;;;;21438:128;21375:191;:::o;3358:345::-;3444:7;3543:1;3539;:5;3546:12;3531:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3570:9;3586:1;3582;:5;;;;:::i;:::-;3570:17;;3694:1;3687:8;;;3358:345;;;;;:::o;1314:192::-;1400:7;1433:1;1428;:6;;1436:12;1420:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1460:9;1476:1;1472;:5;;;;:::i;:::-;1460:17;;1497:1;1490:8;;;1314:192;;;;;:::o;18723:716::-;19147:23;19173:69;19201:4;19173:69;;;;;;;;;;;;;;;;;19181:5;19173:27;;;;:69;;;;;:::i;:::-;19147:95;;19277:1;19257:10;:17;:21;19253:179;;;19354:10;19343:30;;;;;;;;;;;;:::i;:::-;19335:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;19253:179;18793:646;18723:716;;:::o;11566:229::-;11703:12;11735:52;11757:6;11765:4;11771:1;11774:12;11735:21;:52::i;:::-;11728:59;;11566:229;;;;;:::o;12686:510::-;12856:12;12914:5;12889:21;:30;;12881:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;12981:18;12992:6;12981:10;:18::i;:::-;12973:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;13047:12;13061:23;13088:6;:11;;13107:5;13114:4;13088:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13046:73;;;;13137:51;13154:7;13163:10;13175:12;13137:16;:51::i;:::-;13130:58;;;;12686:510;;;;;;:::o;8821:326::-;8881:4;9138:1;9116:7;:19;;;:23;9109:30;;8821:326;;;:::o;15372:712::-;15522:12;15551:7;15547:530;;;15582:10;15575:17;;;;15547:530;15716:1;15696:10;:17;:21;15692:374;;;15894:10;15888:17;15955:15;15942:10;15938:2;15934:19;15927:44;15692:374;16037:12;16030:20;;;;;;;;;;;:::i;:::-;;;;;;;;15372:712;;;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:60::-;2247:3;2268:5;2261:12;;2219:60;;;:::o;2285:142::-;2335:9;2368:53;2386:34;2395:24;2413:5;2395:24;:::i;:::-;2386:34;:::i;:::-;2368:53;:::i;:::-;2355:66;;2285:142;;;:::o;2433:126::-;2483:9;2516:37;2547:5;2516:37;:::i;:::-;2503:50;;2433:126;;;:::o;2565:140::-;2629:9;2662:37;2693:5;2662:37;:::i;:::-;2649:50;;2565:140;;;:::o;2711:159::-;2812:51;2857:5;2812:51;:::i;:::-;2807:3;2800:64;2711:159;;:::o;2876:581::-;3067:4;3105:3;3094:9;3090:19;3082:27;;3119:85;3201:1;3190:9;3186:17;3177:6;3119:85;:::i;:::-;3214:72;3282:2;3271:9;3267:18;3258:6;3214:72;:::i;:::-;3296;3364:2;3353:9;3349:18;3340:6;3296:72;:::i;:::-;3378;3446:2;3435:9;3431:18;3422:6;3378:72;:::i;:::-;2876:581;;;;;;;:::o;3463:474::-;3531:6;3539;3588:2;3576:9;3567:7;3563:23;3559:32;3556:119;;;3594:79;;:::i;:::-;3556:119;3714:1;3739:53;3784:7;3775:6;3764:9;3760:22;3739:53;:::i;:::-;3729:63;;3685:117;3841:2;3867:53;3912:7;3903:6;3892:9;3888:22;3867:53;:::i;:::-;3857:63;;3812:118;3463:474;;;;;:::o;3943:110::-;3994:7;4023:24;4041:5;4023:24;:::i;:::-;4012:35;;3943:110;;;:::o;4059:150::-;4146:38;4178:5;4146:38;:::i;:::-;4139:5;4136:49;4126:77;;4199:1;4196;4189:12;4126:77;4059:150;:::o;4215:167::-;4275:5;4313:6;4300:20;4291:29;;4329:47;4370:5;4329:47;:::i;:::-;4215:167;;;;:::o;4388:90::-;4422:7;4465:5;4458:13;4451:21;4440:32;;4388:90;;;:::o;4484:116::-;4554:21;4569:5;4554:21;:::i;:::-;4547:5;4544:32;4534:60;;4590:1;4587;4580:12;4534:60;4484:116;:::o;4606:133::-;4649:5;4687:6;4674:20;4665:29;;4703:30;4727:5;4703:30;:::i;:::-;4606:133;;;;:::o;4745:641::-;4833:6;4841;4849;4898:2;4886:9;4877:7;4873:23;4869:32;4866:119;;;4904:79;;:::i;:::-;4866:119;5024:1;5049:53;5094:7;5085:6;5074:9;5070:22;5049:53;:::i;:::-;5039:63;;4995:117;5151:2;5177:67;5236:7;5227:6;5216:9;5212:22;5177:67;:::i;:::-;5167:77;;5122:132;5293:2;5319:50;5361:7;5352:6;5341:9;5337:22;5319:50;:::i;:::-;5309:60;;5264:115;4745:641;;;;;:::o;5392:118::-;5479:24;5497:5;5479:24;:::i;:::-;5474:3;5467:37;5392:118;;:::o;5516:222::-;5609:4;5647:2;5636:9;5632:18;5624:26;;5660:71;5728:1;5717:9;5713:17;5704:6;5660:71;:::i;:::-;5516:222;;;;:::o;5744:117::-;5802:7;5831:24;5849:5;5831:24;:::i;:::-;5820:35;;5744:117;;;:::o;5867:164::-;5961:45;6000:5;5961:45;:::i;:::-;5954:5;5951:56;5941:84;;6021:1;6018;6011:12;5941:84;5867:164;:::o;6037:181::-;6104:5;6142:6;6129:20;6120:29;;6158:54;6206:5;6158:54;:::i;:::-;6037:181;;;;:::o;6224:371::-;6304:6;6353:2;6341:9;6332:7;6328:23;6324:32;6321:119;;;6359:79;;:::i;:::-;6321:119;6479:1;6504:74;6570:7;6561:6;6550:9;6546:22;6504:74;:::i;:::-;6494:84;;6450:138;6224:371;;;;:::o;6601:111::-;6653:7;6682:24;6700:5;6682:24;:::i;:::-;6671:35;;6601:111;;;:::o;6718:152::-;6806:39;6839:5;6806:39;:::i;:::-;6799:5;6796:50;6786:78;;6860:1;6857;6850:12;6786:78;6718:152;:::o;6876:169::-;6937:5;6975:6;6962:20;6953:29;;6991:48;7033:5;6991:48;:::i;:::-;6876:169;;;;:::o;7051:504::-;7134:6;7142;7191:2;7179:9;7170:7;7166:23;7162:32;7159:119;;;7197:79;;:::i;:::-;7159:119;7317:1;7342:68;7402:7;7393:6;7382:9;7378:22;7342:68;:::i;:::-;7332:78;;7288:132;7459:2;7485:53;7530:7;7521:6;7510:9;7506:22;7485:53;:::i;:::-;7475:63;;7430:118;7051:504;;;;;:::o;7561:141::-;7626:9;7659:37;7690:5;7659:37;:::i;:::-;7646:50;;7561:141;;;:::o;7708:161::-;7810:52;7856:5;7810:52;:::i;:::-;7805:3;7798:65;7708:161;;:::o;7875:362::-;8011:4;8049:2;8038:9;8034:18;8026:26;;8062:86;8145:1;8134:9;8130:17;8121:6;8062:86;:::i;:::-;8158:72;8226:2;8215:9;8211:18;8202:6;8158:72;:::i;:::-;7875:362;;;;;:::o;8243:613::-;8317:6;8325;8333;8382:2;8370:9;8361:7;8357:23;8353:32;8350:119;;;8388:79;;:::i;:::-;8350:119;8508:1;8533:53;8578:7;8569:6;8558:9;8554:22;8533:53;:::i;:::-;8523:63;;8479:117;8635:2;8661:53;8706:7;8697:6;8686:9;8682:22;8661:53;:::i;:::-;8651:63;;8606:118;8763:2;8789:50;8831:7;8822:6;8811:9;8807:22;8789:50;:::i;:::-;8779:60;;8734:115;8243:613;;;;;:::o;8862:147::-;8933:9;8966:37;8997:5;8966:37;:::i;:::-;8953:50;;8862:147;;;:::o;9015:173::-;9123:58;9175:5;9123:58;:::i;:::-;9118:3;9111:71;9015:173;;:::o;9194:264::-;9308:4;9346:2;9335:9;9331:18;9323:26;;9359:92;9448:1;9437:9;9433:17;9424:6;9359:92;:::i;:::-;9194:264;;;;:::o;9464:474::-;9532:6;9540;9589:2;9577:9;9568:7;9564:23;9560:32;9557:119;;;9595:79;;:::i;:::-;9557:119;9715:1;9740:53;9785:7;9776:6;9765:9;9761:22;9740:53;:::i;:::-;9730:63;;9686:117;9842:2;9868:53;9913:7;9904:6;9893:9;9889:22;9868:53;:::i;:::-;9858:63;;9813:118;9464:474;;;;;:::o;9944:332::-;10065:4;10103:2;10092:9;10088:18;10080:26;;10116:71;10184:1;10173:9;10169:17;10160:6;10116:71;:::i;:::-;10197:72;10265:2;10254:9;10250:18;10241:6;10197:72;:::i;:::-;9944:332;;;;;:::o;10282:250::-;10389:4;10427:2;10416:9;10412:18;10404:26;;10440:85;10522:1;10511:9;10507:17;10498:6;10440:85;:::i;:::-;10282:250;;;;:::o;10538:169::-;10622:11;10656:6;10651:3;10644:19;10696:4;10691:3;10687:14;10672:29;;10538:169;;;;:::o;10713:182::-;10853:34;10849:1;10841:6;10837:14;10830:58;10713:182;:::o;10901:366::-;11043:3;11064:67;11128:2;11123:3;11064:67;:::i;:::-;11057:74;;11140:93;11229:3;11140:93;:::i;:::-;11258:2;11253:3;11249:12;11242:19;;10901:366;;;:::o;11273:419::-;11439:4;11477:2;11466:9;11462:18;11454:26;;11526:9;11520:4;11516:20;11512:1;11501:9;11497:17;11490:47;11554:131;11680:4;11554:131;:::i;:::-;11546:139;;11273:419;;;:::o;11698:180::-;11746:77;11743:1;11736:88;11843:4;11840:1;11833:15;11867:4;11864:1;11857:15;11884:168;12024:20;12020:1;12012:6;12008:14;12001:44;11884:168;:::o;12058:366::-;12200:3;12221:67;12285:2;12280:3;12221:67;:::i;:::-;12214:74;;12297:93;12386:3;12297:93;:::i;:::-;12415:2;12410:3;12406:12;12399:19;;12058:366;;;:::o;12430:419::-;12596:4;12634:2;12623:9;12619:18;12611:26;;12683:9;12677:4;12673:20;12669:1;12658:9;12654:17;12647:47;12711:131;12837:4;12711:131;:::i;:::-;12703:139;;12430:419;;;:::o;12855:143::-;12912:5;12943:6;12937:13;12928:22;;12959:33;12986:5;12959:33;:::i;:::-;12855:143;;;;:::o;13004:351::-;13074:6;13123:2;13111:9;13102:7;13098:23;13094:32;13091:119;;;13129:79;;:::i;:::-;13091:119;13249:1;13274:64;13330:7;13321:6;13310:9;13306:22;13274:64;:::i;:::-;13264:74;;13220:128;13004:351;;;;:::o;13361:169::-;13501:21;13497:1;13489:6;13485:14;13478:45;13361:169;:::o;13536:366::-;13678:3;13699:67;13763:2;13758:3;13699:67;:::i;:::-;13692:74;;13775:93;13864:3;13775:93;:::i;:::-;13893:2;13888:3;13884:12;13877:19;;13536:366;;;:::o;13908:419::-;14074:4;14112:2;14101:9;14097:18;14089:26;;14161:9;14155:4;14151:20;14147:1;14136:9;14132:17;14125:47;14189:131;14315:4;14189:131;:::i;:::-;14181:139;;13908:419;;;:::o;14333:164::-;14473:16;14469:1;14461:6;14457:14;14450:40;14333:164;:::o;14503:366::-;14645:3;14666:67;14730:2;14725:3;14666:67;:::i;:::-;14659:74;;14742:93;14831:3;14742:93;:::i;:::-;14860:2;14855:3;14851:12;14844:19;;14503:366;;;:::o;14875:419::-;15041:4;15079:2;15068:9;15064:18;15056:26;;15128:9;15122:4;15118:20;15114:1;15103:9;15099:17;15092:47;15156:131;15282:4;15156:131;:::i;:::-;15148:139;;14875:419;;;:::o;15300:177::-;15440:29;15436:1;15428:6;15424:14;15417:53;15300:177;:::o;15483:366::-;15625:3;15646:67;15710:2;15705:3;15646:67;:::i;:::-;15639:74;;15722:93;15811:3;15722:93;:::i;:::-;15840:2;15835:3;15831:12;15824:19;;15483:366;;;:::o;15855:419::-;16021:4;16059:2;16048:9;16044:18;16036:26;;16108:9;16102:4;16098:20;16094:1;16083:9;16079:17;16072:47;16136:131;16262:4;16136:131;:::i;:::-;16128:139;;15855:419;;;:::o;16280:170::-;16420:22;16416:1;16408:6;16404:14;16397:46;16280:170;:::o;16456:366::-;16598:3;16619:67;16683:2;16678:3;16619:67;:::i;:::-;16612:74;;16695:93;16784:3;16695:93;:::i;:::-;16813:2;16808:3;16804:12;16797:19;;16456:366;;;:::o;16828:419::-;16994:4;17032:2;17021:9;17017:18;17009:26;;17081:9;17075:4;17071:20;17067:1;17056:9;17052:17;17045:47;17109:131;17235:4;17109:131;:::i;:::-;17101:139;;16828:419;;;:::o;17253:171::-;17324:5;17355:6;17349:13;17340:22;;17371:47;17412:5;17371:47;:::i;:::-;17253:171;;;;:::o;17430:379::-;17514:6;17563:2;17551:9;17542:7;17538:23;17534:32;17531:119;;;17569:79;;:::i;:::-;17531:119;17689:1;17714:78;17784:7;17775:6;17764:9;17760:22;17714:78;:::i;:::-;17704:88;;17660:142;17430:379;;;;:::o;17815:162::-;17955:14;17951:1;17943:6;17939:14;17932:38;17815:162;:::o;17983:366::-;18125:3;18146:67;18210:2;18205:3;18146:67;:::i;:::-;18139:74;;18222:93;18311:3;18222:93;:::i;:::-;18340:2;18335:3;18331:12;18324:19;;17983:366;;;:::o;18355:419::-;18521:4;18559:2;18548:9;18544:18;18536:26;;18608:9;18602:4;18598:20;18594:1;18583:9;18579:17;18572:47;18636:131;18762:4;18636:131;:::i;:::-;18628:139;;18355:419;;;:::o;18780:180::-;18828:77;18825:1;18818:88;18925:4;18922:1;18915:15;18949:4;18946:1;18939:15;18966:233;19005:3;19028:24;19046:5;19028:24;:::i;:::-;19019:33;;19074:66;19067:5;19064:77;19061:103;;19144:18;;:::i;:::-;19061:103;19191:1;19184:5;19180:13;19173:20;;18966:233;;;:::o;19205:170::-;19345:22;19341:1;19333:6;19329:14;19322:46;19205:170;:::o;19381:366::-;19523:3;19544:67;19608:2;19603:3;19544:67;:::i;:::-;19537:74;;19620:93;19709:3;19620:93;:::i;:::-;19738:2;19733:3;19729:12;19722:19;;19381:366;;;:::o;19753:419::-;19919:4;19957:2;19946:9;19942:18;19934:26;;20006:9;20000:4;19996:20;19992:1;19981:9;19977:17;19970:47;20034:131;20160:4;20034:131;:::i;:::-;20026:139;;19753:419;;;:::o;20178:174::-;20318:26;20314:1;20306:6;20302:14;20295:50;20178:174;:::o;20358:366::-;20500:3;20521:67;20585:2;20580:3;20521:67;:::i;:::-;20514:74;;20597:93;20686:3;20597:93;:::i;:::-;20715:2;20710:3;20706:12;20699:19;;20358:366;;;:::o;20730:419::-;20896:4;20934:2;20923:9;20919:18;20911:26;;20983:9;20977:4;20973:20;20969:1;20958:9;20954:17;20947:47;21011:131;21137:4;21011:131;:::i;:::-;21003:139;;20730:419;;;:::o;21155:225::-;21295:34;21291:1;21283:6;21279:14;21272:58;21364:8;21359:2;21351:6;21347:15;21340:33;21155:225;:::o;21386:366::-;21528:3;21549:67;21613:2;21608:3;21549:67;:::i;:::-;21542:74;;21625:93;21714:3;21625:93;:::i;:::-;21743:2;21738:3;21734:12;21727:19;;21386:366;;;:::o;21758:419::-;21924:4;21962:2;21951:9;21947:18;21939:26;;22011:9;22005:4;22001:20;21997:1;21986:9;21982:17;21975:47;22039:131;22165:4;22039:131;:::i;:::-;22031:139;;21758:419;;;:::o;22183:348::-;22223:7;22246:20;22264:1;22246:20;:::i;:::-;22241:25;;22280:20;22298:1;22280:20;:::i;:::-;22275:25;;22468:1;22400:66;22396:74;22393:1;22390:81;22385:1;22378:9;22371:17;22367:105;22364:131;;;22475:18;;:::i;:::-;22364:131;22523:1;22520;22516:9;22505:20;;22183:348;;;;:::o;22537:180::-;22585:77;22582:1;22575:88;22682:4;22679:1;22672:15;22706:4;22703:1;22696:15;22723:185;22763:1;22780:20;22798:1;22780:20;:::i;:::-;22775:25;;22814:20;22832:1;22814:20;:::i;:::-;22809:25;;22853:1;22843:35;;22858:18;;:::i;:::-;22843:35;22900:1;22897;22893:9;22888:14;;22723:185;;;;:::o;22914:220::-;23054:34;23050:1;23042:6;23038:14;23031:58;23123:3;23118:2;23110:6;23106:15;23099:28;22914:220;:::o;23140:366::-;23282:3;23303:67;23367:2;23362:3;23303:67;:::i;:::-;23296:74;;23379:93;23468:3;23379:93;:::i;:::-;23497:2;23492:3;23488:12;23481:19;;23140:366;;;:::o;23512:419::-;23678:4;23716:2;23705:9;23701:18;23693:26;;23765:9;23759:4;23755:20;23751:1;23740:9;23736:17;23729:47;23793:131;23919:4;23793:131;:::i;:::-;23785:139;;23512:419;;;:::o;23937:191::-;23977:3;23996:20;24014:1;23996:20;:::i;:::-;23991:25;;24030:20;24048:1;24030:20;:::i;:::-;24025:25;;24073:1;24070;24066:9;24059:16;;24094:3;24091:1;24088:10;24085:36;;;24101:18;;:::i;:::-;24085:36;23937:191;;;;:::o;24134:177::-;24274:29;24270:1;24262:6;24258:14;24251:53;24134:177;:::o;24317:366::-;24459:3;24480:67;24544:2;24539:3;24480:67;:::i;:::-;24473:74;;24556:93;24645:3;24556:93;:::i;:::-;24674:2;24669:3;24665:12;24658:19;;24317:366;;;:::o;24689:419::-;24855:4;24893:2;24882:9;24878:18;24870:26;;24942:9;24936:4;24932:20;24928:1;24917:9;24913:17;24906:47;24970:131;25096:4;24970:131;:::i;:::-;24962:139;;24689:419;;;:::o;25114:332::-;25235:4;25273:2;25262:9;25258:18;25250:26;;25286:71;25354:1;25343:9;25339:17;25330:6;25286:71;:::i;:::-;25367:72;25435:2;25424:9;25420:18;25411:6;25367:72;:::i;:::-;25114:332;;;;;:::o;25452:442::-;25601:4;25639:2;25628:9;25624:18;25616:26;;25652:71;25720:1;25709:9;25705:17;25696:6;25652:71;:::i;:::-;25733:72;25801:2;25790:9;25786:18;25777:6;25733:72;:::i;:::-;25815;25883:2;25872:9;25868:18;25859:6;25815:72;:::i;:::-;25452:442;;;;;;:::o;25900:332::-;26021:4;26059:2;26048:9;26044:18;26036:26;;26072:71;26140:1;26129:9;26125:17;26116:6;26072:71;:::i;:::-;26153:72;26221:2;26210:9;26206:18;26197:6;26153:72;:::i;:::-;25900:332;;;;;:::o;26238:241::-;26378:34;26374:1;26366:6;26362:14;26355:58;26447:24;26442:2;26434:6;26430:15;26423:49;26238:241;:::o;26485:366::-;26627:3;26648:67;26712:2;26707:3;26648:67;:::i;:::-;26641:74;;26724:93;26813:3;26724:93;:::i;:::-;26842:2;26837:3;26833:12;26826:19;;26485:366;;;:::o;26857:419::-;27023:4;27061:2;27050:9;27046:18;27038:26;;27110:9;27104:4;27100:20;27096:1;27085:9;27081:17;27074:47;27138:131;27264:4;27138:131;:::i;:::-;27130:139;;26857:419;;;:::o;27282:99::-;27334:6;27368:5;27362:12;27352:22;;27282:99;;;:::o;27387:246::-;27468:1;27478:113;27492:6;27489:1;27486:13;27478:113;;;27577:1;27572:3;27568:11;27562:18;27558:1;27553:3;27549:11;27542:39;27514:2;27511:1;27507:10;27502:15;;27478:113;;;27625:1;27616:6;27611:3;27607:16;27600:27;27449:184;27387:246;;;:::o;27639:102::-;27680:6;27731:2;27727:7;27722:2;27715:5;27711:14;27707:28;27697:38;;27639:102;;;:::o;27747:377::-;27835:3;27863:39;27896:5;27863:39;:::i;:::-;27918:71;27982:6;27977:3;27918:71;:::i;:::-;27911:78;;27998:65;28056:6;28051:3;28044:4;28037:5;28033:16;27998:65;:::i;:::-;28088:29;28110:6;28088:29;:::i;:::-;28083:3;28079:39;28072:46;;27839:285;27747:377;;;;:::o;28130:313::-;28243:4;28281:2;28270:9;28266:18;28258:26;;28330:9;28324:4;28320:20;28316:1;28305:9;28301:17;28294:47;28358:78;28431:4;28422:6;28358:78;:::i;:::-;28350:86;;28130:313;;;;:::o;28449:194::-;28489:4;28509:20;28527:1;28509:20;:::i;:::-;28504:25;;28543:20;28561:1;28543:20;:::i;:::-;28538:25;;28587:1;28584;28580:9;28572:17;;28611:1;28605:4;28602:11;28599:37;;;28616:18;;:::i;:::-;28599:37;28449:194;;;;:::o;28649:137::-;28703:5;28734:6;28728:13;28719:22;;28750:30;28774:5;28750:30;:::i;:::-;28649:137;;;;:::o;28792:345::-;28859:6;28908:2;28896:9;28887:7;28883:23;28879:32;28876:119;;;28914:79;;:::i;:::-;28876:119;29034:1;29059:61;29112:7;29103:6;29092:9;29088:22;29059:61;:::i;:::-;29049:71;;29005:125;28792:345;;;;:::o;29143:229::-;29283:34;29279:1;29271:6;29267:14;29260:58;29352:12;29347:2;29339:6;29335:15;29328:37;29143:229;:::o;29378:366::-;29520:3;29541:67;29605:2;29600:3;29541:67;:::i;:::-;29534:74;;29617:93;29706:3;29617:93;:::i;:::-;29735:2;29730:3;29726:12;29719:19;;29378:366;;;:::o;29750:419::-;29916:4;29954:2;29943:9;29939:18;29931:26;;30003:9;29997:4;29993:20;29989:1;29978:9;29974:17;29967:47;30031:131;30157:4;30031:131;:::i;:::-;30023:139;;29750:419;;;:::o;30175:225::-;30315:34;30311:1;30303:6;30299:14;30292:58;30384:8;30379:2;30371:6;30367:15;30360:33;30175:225;:::o;30406:366::-;30548:3;30569:67;30633:2;30628:3;30569:67;:::i;:::-;30562:74;;30645:93;30734:3;30645:93;:::i;:::-;30763:2;30758:3;30754:12;30747:19;;30406:366;;;:::o;30778:419::-;30944:4;30982:2;30971:9;30967:18;30959:26;;31031:9;31025:4;31021:20;31017:1;31006:9;31002:17;30995:47;31059:131;31185:4;31059:131;:::i;:::-;31051:139;;30778:419;;;:::o;31203:179::-;31343:31;31339:1;31331:6;31327:14;31320:55;31203:179;:::o;31388:366::-;31530:3;31551:67;31615:2;31610:3;31551:67;:::i;:::-;31544:74;;31627:93;31716:3;31627:93;:::i;:::-;31745:2;31740:3;31736:12;31729:19;;31388:366;;;:::o;31760:419::-;31926:4;31964:2;31953:9;31949:18;31941:26;;32013:9;32007:4;32003:20;31999:1;31988:9;31984:17;31977:47;32041:131;32167:4;32041:131;:::i;:::-;32033:139;;31760:419;;;:::o;32185:98::-;32236:6;32270:5;32264:12;32254:22;;32185:98;;;:::o;32289:147::-;32390:11;32427:3;32412:18;;32289:147;;;;:::o;32442:386::-;32546:3;32574:38;32606:5;32574:38;:::i;:::-;32628:88;32709:6;32704:3;32628:88;:::i;:::-;32621:95;;32725:65;32783:6;32778:3;32771:4;32764:5;32760:16;32725:65;:::i;:::-;32815:6;32810:3;32806:16;32799:23;;32550:278;32442:386;;;;:::o;32834:271::-;32964:3;32986:93;33075:3;33066:6;32986:93;:::i;:::-;32979:100;;33096:3;33089:10;;32834:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3667000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BONUS_MULTIPLIER()": "2540",
								"DDT()": "infinite",
								"DDTMasterchefAddress()": "2626",
								"NFTStakeAddress()": "2603",
								"PowerPerBlock()": "2562",
								"add(uint256,address,bool)": "infinite",
								"addNFT(address,uint256)": "73759",
								"claimNFTReward(uint256,uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"enterStaking(uint256)": "infinite",
								"enterStakingCompund(uint256,address)": "infinite",
								"getMultiplier(uint256,uint256)": "infinite",
								"getPowerBalance(address)": "2974",
								"leaveStaking(uint256)": "infinite",
								"massUpdatePools()": "infinite",
								"migrate(uint256)": "infinite",
								"migrator()": "infinite",
								"nftsInfo(uint256)": "infinite",
								"owner()": "2567",
								"pendingPower(uint256,address)": "infinite",
								"poolInfo(uint256)": "infinite",
								"poolLength()": "2492",
								"powerBalance(address)": "2880",
								"renounceOwnership()": "30419",
								"set(uint256,uint256,bool)": "infinite",
								"setMigrator(address)": "27139",
								"startBlock()": "2563",
								"totalAllocPoint()": "2475",
								"transferOwnership(address)": "30830",
								"updateDDTMasterchefAddress(address)": "27073",
								"updateMultiplier(uint256)": "24806",
								"updateNFT(uint256,uint256)": "infinite",
								"updateNFTStakeAddress(address)": "27031",
								"updatePool(uint256)": "infinite",
								"updatePowerPerBlock(uint256)": "24806",
								"userInfo(uint256,address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22111,
									"end": 36454,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22111,
									"end": 36454,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22111,
									"end": 36454,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23774,
									"end": 23775,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23740,
									"end": 23775,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23740,
									"end": 23775,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24217,
									"end": 24218,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24184,
									"end": 24218,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 24184,
									"end": 24218,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24731,
									"end": 25193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20003,
									"end": 20013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20003,
									"end": 20013,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20003,
									"end": 20013,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 20003,
									"end": 20015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 19984,
									"end": 20002,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19984,
									"end": 20002,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24852,
									"end": 24856,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24849,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24846,
									"end": 24849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24846,
									"end": 24856,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24883,
									"end": 24897,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24867,
									"end": 24880,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24867,
									"end": 24897,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24867,
									"end": 24897,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24867,
									"end": 24897,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24867,
									"end": 24897,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24921,
									"end": 24932,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24908,
									"end": 24918,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24908,
									"end": 24932,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24908,
									"end": 24932,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24908,
									"end": 24932,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24908,
									"end": 24932,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 24986,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25025,
									"end": 25028,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25055,
									"end": 25059,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25091,
									"end": 25101,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 25091,
									"end": 25101,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25134,
									"end": 25135,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25147,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 25148,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25179,
									"end": 25183,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 25161,
									"end": 25176,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 25161,
									"end": 25183,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25161,
									"end": 25183,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25161,
									"end": 25183,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25161,
									"end": 25183,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24731,
									"end": 25193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 36454,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22111,
									"end": 36454,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19532,
									"end": 19539,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19559,
									"end": 19569,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 19552,
									"end": 19569,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19552,
									"end": 19569,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19479,
									"end": 19577,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21449,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21449,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21449,
									"end": 21474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21494,
									"end": 21502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21491,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21485,
									"end": 21491,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21549,
									"end": 21557,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21539,
									"end": 21547,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 21438,
									"end": 21566,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21375,
									"end": 21566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1054,
									"end": 1061,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1083,
									"end": 1088,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1088,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1088,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1191,
									"end": 1196,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1173,
									"end": 1197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1171,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1198,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1222,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1285,
									"end": 1290,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1316,
									"end": 1322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1323,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1323,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1323,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1359,
									"end": 1364,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1332,
									"end": 1365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1487,
									"end": 1493,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1495,
									"end": 1501,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1544,
									"end": 1546,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1532,
									"end": 1541,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1523,
									"end": 1530,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1519,
									"end": 1542,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1515,
									"end": 1547,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1550,
									"end": 1629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1670,
									"end": 1671,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1765,
									"end": 1772,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1756,
									"end": 1762,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1741,
									"end": 1763,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1695,
									"end": 1773,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1773,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1773,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1641,
									"end": 1783,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1822,
									"end": 1824,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1904,
									"end": 1911,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1895,
									"end": 1901,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1884,
									"end": 1893,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1880,
									"end": 1902,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1848,
									"end": 1912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1838,
									"end": 1912,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1838,
									"end": 1912,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1922,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1961,
									"end": 1963,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2043,
									"end": 2050,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2032,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2019,
									"end": 2041,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1987,
									"end": 2051,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1977,
									"end": 2051,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1977,
									"end": 2051,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1932,
									"end": 2061,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 2068,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 22111,
									"end": 36454,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22111,
									"end": 36454,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 36454,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22111,
									"end": 36454,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 36454,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22111,
									"end": 36454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22111,
									"end": 36454,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 36454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22111,
									"end": 36454,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122060788b95bd3741226b6210d001709cdafdab6ac0a8524387fffb2f40a7d3a9cb64736f6c63430008100033",
									".code": [
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "5FFE6146"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "CF35FDDF"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "CF35FDDF"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "D209DB8C"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB158"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "F3239AB5"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "8DBB1E3A"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "93F1A40B"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "C11490CC"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "CB3CBA55"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "7CD07E47"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "83E32135"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "8AA28550"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "8C51793B"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "5FFE6146"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "61C1B724"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "630B5BA1"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "64482F79"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "3DF7AFF3"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "4EA2813C"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "4EA2813C"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "51EB05A6"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "5312EA8E"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "56B4685F"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "5990C569"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "3DF7AFF3"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "41441D3B"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "441A3E70"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "454B0608"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "48CD4CB1"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "17CAF6F1"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "17CAF6F1"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "1D5FBD87"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "1EAAA045"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "22F58541"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "23CF3118"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "81E3EDA"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "BA33A58"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "1058D281"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 27360,
											"end": 27455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 27360,
											"end": 27455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 25201,
											"end": 25327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25201,
											"end": 25327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 35146,
											"end": 35895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35146,
											"end": 35895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 23943,
											"end": 23969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 23943,
											"end": 23969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23943,
											"end": 23969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24184,
											"end": 24218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24184,
											"end": 24218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 25953,
											"end": 27221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25953,
											"end": 27221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 27624,
											"end": 28184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 27624,
											"end": 28184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 24347,
											"end": 24382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 24347,
											"end": 24382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28662,
											"end": 28764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28662,
											"end": 28764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 36342,
											"end": 36451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 36342,
											"end": 36451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 33264,
											"end": 34112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 33264,
											"end": 34112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 32424,
											"end": 33211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32424,
											"end": 33211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28887,
											"end": 29378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28887,
											"end": 29378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 24276,
											"end": 24301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24276,
											"end": 24301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 25615,
											"end": 25821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 25615,
											"end": 25821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 30769,
											"end": 31459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 30769,
											"end": 31459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 35974,
											"end": 36330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 35974,
											"end": 36330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 25335,
											"end": 25481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 25335,
											"end": 25481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 23657,
											"end": 23685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23657,
											"end": 23685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 27229,
											"end": 27352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 27229,
											"end": 27352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 23533,
											"end": 23559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 23533,
											"end": 23559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 23533,
											"end": 23559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 30513,
											"end": 30693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 28281,
											"end": 28586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28281,
											"end": 28586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 20756,
											"end": 20859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 23880,
											"end": 23909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 23880,
											"end": 23909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24310,
											"end": 24340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 24310,
											"end": 24340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 23740,
											"end": 23775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23740,
											"end": 23775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 25489,
											"end": 25607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 25489,
											"end": 25607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 25489,
											"end": 25607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20105,
											"end": 20192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 20105,
											"end": 20192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 29454,
											"end": 29598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 29454,
											"end": 29598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 29454,
											"end": 29598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 24025,
											"end": 24089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 24025,
											"end": 24089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 24025,
											"end": 24089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 25829,
											"end": 25945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 25829,
											"end": 25945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 23593,
											"end": 23610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 23593,
											"end": 23610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 34120,
											"end": 35094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 34120,
											"end": 35094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 24391,
											"end": 24438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 24391,
											"end": 24438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24391,
											"end": 24438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 31529,
											"end": 32372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 31529,
											"end": 32372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 21014,
											"end": 21215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 21014,
											"end": 21215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 29663,
											"end": 30430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 29663,
											"end": 30430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 29663,
											"end": 30430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27405,
											"end": 27412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27432,
											"end": 27440,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27432,
											"end": 27447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27432,
											"end": 27447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27432,
											"end": 27447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27432,
											"end": 27447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27425,
											"end": 27447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27425,
											"end": 27447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25303,
											"end": 25319,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 25285,
											"end": 25300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25319,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25201,
											"end": 25327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35203,
											"end": 35224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35227,
											"end": 35235,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 35236,
											"end": 35237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35227,
											"end": 35238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35227,
											"end": 35238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35203,
											"end": 35238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35203,
											"end": 35238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35249,
											"end": 35270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35273,
											"end": 35281,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 35273,
											"end": 35284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35282,
											"end": 35283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35273,
											"end": 35284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35273,
											"end": 35284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35273,
											"end": 35284,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35285,
											"end": 35295,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35273,
											"end": 35296,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35249,
											"end": 35296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35249,
											"end": 35296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35332,
											"end": 35339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35317,
											"end": 35321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35317,
											"end": 35328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35317,
											"end": 35328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35317,
											"end": 35328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35317,
											"end": 35339,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35317,
											"end": 35339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 35309,
											"end": 35362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35309,
											"end": 35362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35373,
											"end": 35386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 35384,
											"end": 35385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35373,
											"end": 35383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 35373,
											"end": 35386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35373,
											"end": 35386,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 35373,
											"end": 35386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35397,
											"end": 35412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35415,
											"end": 35484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 35468,
											"end": 35472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35468,
											"end": 35483,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35468,
											"end": 35483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35468,
											"end": 35483,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 35458,
											"end": 35462,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35415,
											"end": 35453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 35431,
											"end": 35435,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35431,
											"end": 35452,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35431,
											"end": 35452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35431,
											"end": 35452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35419,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35415,
											"end": 35426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35426,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 35415,
											"end": 35430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35453,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35415,
											"end": 35453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35453,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 35415,
											"end": 35453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 35415,
											"end": 35457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35415,
											"end": 35463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35463,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 35415,
											"end": 35463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 35415,
											"end": 35467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35484,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35415,
											"end": 35484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35415,
											"end": 35484,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 35415,
											"end": 35484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35397,
											"end": 35484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35397,
											"end": 35484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35508,
											"end": 35509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35498,
											"end": 35505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35498,
											"end": 35509,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35495,
											"end": 35602,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35495,
											"end": 35602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35495,
											"end": 35602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35582,
											"end": 35589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35565,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35566,
											"end": 35576,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35577,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 35553,
											"end": 35581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35590,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35553,
											"end": 35590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35553,
											"end": 35590,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35553,
											"end": 35590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35538,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35539,
											"end": 35549,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35526,
											"end": 35550,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35590,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 35590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35495,
											"end": 35602,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35495,
											"end": 35602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35625,
											"end": 35626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35615,
											"end": 35622,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35626,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35612,
											"end": 35763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35612,
											"end": 35763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 35612,
											"end": 35763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 35673,
											"end": 35680,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35657,
											"end": 35668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35668,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 35657,
											"end": 35672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35657,
											"end": 35681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35681,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 35657,
											"end": 35681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35643,
											"end": 35647,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35643,
											"end": 35654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35643,
											"end": 35654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35643,
											"end": 35681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35643,
											"end": 35681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35643,
											"end": 35681,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35643,
											"end": 35681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35730,
											"end": 35740,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35743,
											"end": 35750,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35700,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35696,
											"end": 35708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35696,
											"end": 35708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35708,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35708,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35696,
											"end": 35708,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35708,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35708,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35696,
											"end": 35708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35696,
											"end": 35721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 35696,
											"end": 35721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35751,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35696,
											"end": 35751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35696,
											"end": 35751,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35696,
											"end": 35751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35612,
											"end": 35763,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 35612,
											"end": 35763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 35834,
											"end": 35838,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35791,
											"end": 35829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 35807,
											"end": 35811,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35807,
											"end": 35828,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35807,
											"end": 35828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35807,
											"end": 35828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35795,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35791,
											"end": 35802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 35791,
											"end": 35806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35791,
											"end": 35829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35829,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 35791,
											"end": 35829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 35791,
											"end": 35833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35839,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35791,
											"end": 35839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35839,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 35791,
											"end": 35839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35773,
											"end": 35777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35773,
											"end": 35788,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35773,
											"end": 35788,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35773,
											"end": 35839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35773,
											"end": 35839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35773,
											"end": 35839,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35773,
											"end": 35839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35876,
											"end": 35877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35864,
											"end": 35874,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 35879,
											"end": 35886,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 35855,
											"end": 35887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35855,
											"end": 35887,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 35192,
											"end": 35895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35192,
											"end": 35895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35192,
											"end": 35895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35146,
											"end": 35895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26024,
											"end": 26045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26048,
											"end": 26056,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26057,
											"end": 26061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 26048,
											"end": 26062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26024,
											"end": 26062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26024,
											"end": 26062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26097,
											"end": 26105,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26106,
											"end": 26110,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26097,
											"end": 26111,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26112,
											"end": 26122,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26097,
											"end": 26123,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26134,
											"end": 26158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26161,
											"end": 26165,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26161,
											"end": 26182,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26161,
											"end": 26182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26161,
											"end": 26182,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26134,
											"end": 26182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26134,
											"end": 26182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26193,
											"end": 26209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26212,
											"end": 26216,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26212,
											"end": 26224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26234,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26212,
											"end": 26234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26234,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 26243,
											"end": 26247,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 26212,
											"end": 26249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 26212,
											"end": 26249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 26212,
											"end": 26249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26193,
											"end": 26249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26193,
											"end": 26249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26299,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26279,
											"end": 26299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26299,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26276,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26299,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 26264,
											"end": 26316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26315,
											"end": 26316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26303,
											"end": 26311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26316,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26316,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 26264,
											"end": 26316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26260,
											"end": 26614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26260,
											"end": 26614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 26260,
											"end": 26614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26333,
											"end": 26351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26354,
											"end": 26403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 26368,
											"end": 26372,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26368,
											"end": 26388,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26368,
											"end": 26388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26368,
											"end": 26388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26390,
											"end": 26402,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 26354,
											"end": 26367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 26354,
											"end": 26403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26354,
											"end": 26403,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 26354,
											"end": 26403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26333,
											"end": 26403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26333,
											"end": 26403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26418,
											"end": 26437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26440,
											"end": 26511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 26495,
											"end": 26510,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26495,
											"end": 26510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 26474,
											"end": 26478,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26474,
											"end": 26489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26474,
											"end": 26489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26474,
											"end": 26489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 26455,
											"end": 26468,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26455,
											"end": 26468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26450,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 26440,
											"end": 26454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26440,
											"end": 26469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26469,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 26440,
											"end": 26469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 26440,
											"end": 26473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26440,
											"end": 26490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26490,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 26440,
											"end": 26490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 26440,
											"end": 26494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26511,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26440,
											"end": 26511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26511,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 26440,
											"end": 26511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26418,
											"end": 26511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26418,
											"end": 26511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26545,
											"end": 26602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 26566,
											"end": 26601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 26592,
											"end": 26600,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 26582,
											"end": 26586,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 26566,
											"end": 26577,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 26566,
											"end": 26581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26566,
											"end": 26587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26587,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 26566,
											"end": 26587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 26566,
											"end": 26591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26566,
											"end": 26601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26566,
											"end": 26601,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 26566,
											"end": 26601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26545,
											"end": 26561,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26545,
											"end": 26565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 26545,
											"end": 26565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26545,
											"end": 26602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26545,
											"end": 26602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26545,
											"end": 26602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26545,
											"end": 26602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26545,
											"end": 26602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26545,
											"end": 26602,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 26545,
											"end": 26602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26526,
											"end": 26602,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26526,
											"end": 26602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26260,
											"end": 26614,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 26260,
											"end": 26614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26624,
											"end": 26639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26642,
											"end": 26706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 26690,
											"end": 26694,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26690,
											"end": 26705,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26690,
											"end": 26705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26690,
											"end": 26705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 26680,
											"end": 26684,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 26642,
											"end": 26675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 26658,
											"end": 26674,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26646,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26642,
											"end": 26653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 26642,
											"end": 26657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26642,
											"end": 26675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26675,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 26642,
											"end": 26675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 26642,
											"end": 26679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26642,
											"end": 26685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26685,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 26642,
											"end": 26685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 26642,
											"end": 26689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26706,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26642,
											"end": 26706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26706,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 26642,
											"end": 26706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26624,
											"end": 26706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26624,
											"end": 26706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26717,
											"end": 26737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26740,
											"end": 26748,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26749,
											"end": 26754,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 26740,
											"end": 26755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26740,
											"end": 26755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26717,
											"end": 26755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26717,
											"end": 26755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26766,
											"end": 26779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26782,
											"end": 26819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 26794,
											"end": 26806,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26807,
											"end": 26817,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26794,
											"end": 26818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26789,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 26782,
											"end": 26793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26819,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26782,
											"end": 26819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26819,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 26782,
											"end": 26819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26766,
											"end": 26819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26766,
											"end": 26819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26841,
											"end": 26844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26841,
											"end": 26850,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26841,
											"end": 26850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26841,
											"end": 26850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26833,
											"end": 26838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26833,
											"end": 26850,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26830,
											"end": 27018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26830,
											"end": 27018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 26830,
											"end": 27018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26877,
											"end": 26878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26869,
											"end": 26873,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26869,
											"end": 26878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26866,
											"end": 26929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 26866,
											"end": 26929,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 26911,
											"end": 26912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26898,
											"end": 26910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 26898,
											"end": 26913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26913,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 26898,
											"end": 26913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26866,
											"end": 26929,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 26866,
											"end": 26929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26954,
											"end": 26955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26946,
											"end": 26950,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 26955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26943,
											"end": 27007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 26943,
											"end": 27007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26975,
											"end": 26991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 26984,
											"end": 26988,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26989,
											"end": 26990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26975,
											"end": 26983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 26975,
											"end": 26991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26975,
											"end": 26991,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 26975,
											"end": 26991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26943,
											"end": 27007,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 26943,
											"end": 27007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26830,
											"end": 27018,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 26830,
											"end": 27018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27060,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27061,
											"end": 27071,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27048,
											"end": 27072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27036,
											"end": 27039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27036,
											"end": 27045,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27036,
											"end": 27045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27036,
											"end": 27045,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27036,
											"end": 27072,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 27028,
											"end": 27096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 27028,
											"end": 27096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 27163,
											"end": 27166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27163,
											"end": 27172,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27163,
											"end": 27172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27163,
											"end": 27172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27146,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27147,
											"end": 27157,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27158,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 27134,
											"end": 27162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27119,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27120,
											"end": 27130,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27107,
											"end": 27131,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27173,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27107,
											"end": 27173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27184,
											"end": 27191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27184,
											"end": 27201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "17E5883C"
										},
										{
											"begin": 27202,
											"end": 27212,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 27184,
											"end": 27213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26013,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26013,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26013,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26013,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26013,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26013,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26013,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25953,
											"end": 27221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27727,
											"end": 27738,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27723,
											"end": 27784,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27723,
											"end": 27784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 27723,
											"end": 27784,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27755,
											"end": 27772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 27755,
											"end": 27770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 27755,
											"end": 27772,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27755,
											"end": 27772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 27755,
											"end": 27772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27723,
											"end": 27784,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 27723,
											"end": 27784,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27794,
											"end": 27817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27835,
											"end": 27845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27835,
											"end": 27845,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27832,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27845,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27873,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 27820,
											"end": 27873,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27863,
											"end": 27873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27863,
											"end": 27873,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27873,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 27820,
											"end": 27873,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27873,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 27820,
											"end": 27873,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27860,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27873,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 27820,
											"end": 27873,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27794,
											"end": 27873,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27794,
											"end": 27873,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 27934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 27922,
											"end": 27933,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 27917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27902,
											"end": 27917,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 27921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 27902,
											"end": 27921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 27934,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 27934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 27934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27902,
											"end": 27934,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 27934,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 27934,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 27902,
											"end": 27934,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27884,
											"end": 27899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27884,
											"end": 27934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27884,
											"end": 27934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27884,
											"end": 27934,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27884,
											"end": 27934,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 27953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28010,
											"end": 28018,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28060,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28096,
											"end": 28111,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28148,
											"end": 28149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27973,
											"end": 28165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27945,
											"end": 28176,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27712,
											"end": 28184,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 28184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28747,
											"end": 28756,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28736,
											"end": 28744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28756,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28662,
											"end": 28764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36434,
											"end": 36443,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36418,
											"end": 36431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36418,
											"end": 36443,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36418,
											"end": 36443,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36418,
											"end": 36443,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36418,
											"end": 36443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33339,
											"end": 33340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33329,
											"end": 33336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33329,
											"end": 33340,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 33321,
											"end": 33359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 33321,
											"end": 33359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33372,
											"end": 33393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33396,
											"end": 33404,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 33405,
											"end": 33406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 33396,
											"end": 33407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33396,
											"end": 33407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33372,
											"end": 33407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33372,
											"end": 33407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33442,
											"end": 33450,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33442,
											"end": 33453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33451,
											"end": 33452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33442,
											"end": 33453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33442,
											"end": 33453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33442,
											"end": 33453,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33462,
											"end": 33472,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33442,
											"end": 33474,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33495,
											"end": 33508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 33506,
											"end": 33507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33495,
											"end": 33505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 33495,
											"end": 33508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33495,
											"end": 33508,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 33495,
											"end": 33508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33523,
											"end": 33527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33523,
											"end": 33534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33538,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33519,
											"end": 33801,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33519,
											"end": 33801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 33519,
											"end": 33801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33555,
											"end": 33570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33573,
											"end": 33642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 33626,
											"end": 33630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33626,
											"end": 33641,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33626,
											"end": 33641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33626,
											"end": 33641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 33616,
											"end": 33620,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33573,
											"end": 33611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 33589,
											"end": 33593,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33589,
											"end": 33610,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33589,
											"end": 33610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33589,
											"end": 33610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33577,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33573,
											"end": 33584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33584,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 33573,
											"end": 33588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33573,
											"end": 33611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33611,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 33573,
											"end": 33611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 33573,
											"end": 33615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33621,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33573,
											"end": 33621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33621,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 33573,
											"end": 33621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 33573,
											"end": 33625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33573,
											"end": 33642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33642,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 33573,
											"end": 33642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33555,
											"end": 33642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33555,
											"end": 33642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33670,
											"end": 33671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33660,
											"end": 33667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33660,
											"end": 33671,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33657,
											"end": 33790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33657,
											"end": 33790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 33657,
											"end": 33790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 33766,
											"end": 33773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33740,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33749,
											"end": 33759,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 33728,
											"end": 33765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33728,
											"end": 33774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33728,
											"end": 33774,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 33728,
											"end": 33774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33704,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33713,
											"end": 33723,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33692,
											"end": 33725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33774,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33657,
											"end": 33790,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 33657,
											"end": 33790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33540,
											"end": 33801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33519,
											"end": 33801,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 33519,
											"end": 33801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33824,
											"end": 33825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33814,
											"end": 33821,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33814,
											"end": 33825,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33811,
											"end": 33981,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33811,
											"end": 33981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 33811,
											"end": 33981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 33880,
											"end": 33890,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33901,
											"end": 33905,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33908,
											"end": 33915,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33846,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33842,
											"end": 33854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33842,
											"end": 33854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33854,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33854,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33842,
											"end": 33854,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33854,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33842,
											"end": 33854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33842,
											"end": 33871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 33842,
											"end": 33871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33916,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33916,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33916,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33842,
											"end": 33916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 33916,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 33842,
											"end": 33916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 33961,
											"end": 33968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33945,
											"end": 33956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 33945,
											"end": 33960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33945,
											"end": 33969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33969,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 33945,
											"end": 33969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33931,
											"end": 33935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33931,
											"end": 33942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33931,
											"end": 33942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33931,
											"end": 33969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33931,
											"end": 33969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33931,
											"end": 33969,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33931,
											"end": 33969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33811,
											"end": 33981,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 33811,
											"end": 33981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 34052,
											"end": 34056,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34009,
											"end": 34047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 34025,
											"end": 34029,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34025,
											"end": 34046,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34025,
											"end": 34046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34025,
											"end": 34046,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34013,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34009,
											"end": 34020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 34009,
											"end": 34024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34047,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34009,
											"end": 34047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34047,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 34009,
											"end": 34047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 34009,
											"end": 34051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34009,
											"end": 34057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34057,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 34009,
											"end": 34057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33991,
											"end": 33995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33991,
											"end": 34006,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33991,
											"end": 34006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33991,
											"end": 34057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33991,
											"end": 34057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33991,
											"end": 34057,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33991,
											"end": 34057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34093,
											"end": 34094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34081,
											"end": 34091,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 34096,
											"end": 34103,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 34073,
											"end": 34104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34073,
											"end": 34104,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 33310,
											"end": 34112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33310,
											"end": 34112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 34112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32510,
											"end": 32511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32502,
											"end": 32506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32502,
											"end": 32511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 32493,
											"end": 32543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 32493,
											"end": 32543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32556,
											"end": 32577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32580,
											"end": 32588,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32589,
											"end": 32593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 32580,
											"end": 32594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32556,
											"end": 32594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32556,
											"end": 32594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32605,
											"end": 32626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32629,
											"end": 32637,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32638,
											"end": 32642,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32629,
											"end": 32643,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32644,
											"end": 32654,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32629,
											"end": 32655,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32605,
											"end": 32655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32605,
											"end": 32655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32674,
											"end": 32678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32674,
											"end": 32685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32674,
											"end": 32685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32674,
											"end": 32685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32674,
											"end": 32696,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32674,
											"end": 32696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 32666,
											"end": 32719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 32666,
											"end": 32719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32730,
											"end": 32746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 32741,
											"end": 32745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32730,
											"end": 32740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 32730,
											"end": 32746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32730,
											"end": 32746,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 32730,
											"end": 32746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32757,
											"end": 32772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32775,
											"end": 32844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 32828,
											"end": 32832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32828,
											"end": 32843,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32828,
											"end": 32843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32828,
											"end": 32843,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 32818,
											"end": 32822,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32775,
											"end": 32813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 32791,
											"end": 32795,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32791,
											"end": 32812,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32791,
											"end": 32812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32791,
											"end": 32812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32779,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32775,
											"end": 32786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 32775,
											"end": 32790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32775,
											"end": 32813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32813,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 32775,
											"end": 32813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 32775,
											"end": 32817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32775,
											"end": 32823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32823,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 32775,
											"end": 32823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 32775,
											"end": 32827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32775,
											"end": 32844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32844,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 32775,
											"end": 32844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32757,
											"end": 32844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32757,
											"end": 32844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32868,
											"end": 32869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32858,
											"end": 32865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32869,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32855,
											"end": 32961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32855,
											"end": 32961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 32855,
											"end": 32961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 32941,
											"end": 32948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32924,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32925,
											"end": 32935,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32936,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 32912,
											"end": 32940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32949,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32912,
											"end": 32949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32912,
											"end": 32949,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 32912,
											"end": 32949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32897,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32898,
											"end": 32908,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32885,
											"end": 32909,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32949,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32855,
											"end": 32961,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 32855,
											"end": 32961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 33001,
											"end": 33008,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32985,
											"end": 32996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32996,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 32985,
											"end": 33000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32985,
											"end": 33009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33009,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 32985,
											"end": 33009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32971,
											"end": 32975,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32971,
											"end": 32982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32971,
											"end": 32982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32971,
											"end": 33009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32971,
											"end": 33009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32971,
											"end": 33009,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32971,
											"end": 33009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 33081,
											"end": 33085,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 33054,
											"end": 33058,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33054,
											"end": 33075,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33054,
											"end": 33075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33054,
											"end": 33075,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33042,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33038,
											"end": 33049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 33038,
											"end": 33053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 33038,
											"end": 33080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33086,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33038,
											"end": 33086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33086,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 33038,
											"end": 33086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33020,
											"end": 33024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33020,
											"end": 33035,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33020,
											"end": 33035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33020,
											"end": 33086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33020,
											"end": 33086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33020,
											"end": 33086,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33020,
											"end": 33086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 33131,
											"end": 33141,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33144,
											"end": 33151,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33101,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33097,
											"end": 33122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 33097,
											"end": 33122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 33097,
											"end": 33152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33189,
											"end": 33193,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33177,
											"end": 33187,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 33195,
											"end": 33202,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 33168,
											"end": 33203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33168,
											"end": 33203,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 32480,
											"end": 33211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32480,
											"end": 33211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32480,
											"end": 33211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 33211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28973,
											"end": 28974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28944,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28944,
											"end": 28975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28952,
											"end": 28960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28944,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28944,
											"end": 28975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28944,
											"end": 28975,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 28936,
											"end": 29000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 28936,
											"end": 29000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29011,
											"end": 29032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29035,
											"end": 29043,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29044,
											"end": 29048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 29035,
											"end": 29049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29011,
											"end": 29049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29011,
											"end": 29049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29060,
											"end": 29074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29077,
											"end": 29081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29077,
											"end": 29089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29060,
											"end": 29089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29060,
											"end": 29089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29100,
											"end": 29111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29114,
											"end": 29121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29131,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29114,
											"end": 29131,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29131,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 29140,
											"end": 29144,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29114,
											"end": 29146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 29114,
											"end": 29146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 29114,
											"end": 29146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29100,
											"end": 29146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29100,
											"end": 29146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29185,
											"end": 29193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29196,
											"end": 29199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29157,
											"end": 29176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 29157,
											"end": 29176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 29157,
											"end": 29200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29211,
											"end": 29228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29231,
											"end": 29239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29231,
											"end": 29247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29247,
											"name": "PUSH",
											"source": 0,
											"value": "CE5494BB"
										},
										{
											"begin": 29248,
											"end": 29255,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 29231,
											"end": 29256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 29231,
											"end": 29256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 29231,
											"end": 29256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29211,
											"end": 29256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29211,
											"end": 29256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29302,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29282,
											"end": 29302,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29302,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 29311,
											"end": 29315,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29282,
											"end": 29317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 29282,
											"end": 29317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 29282,
											"end": 29317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29275,
											"end": 29317,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 29267,
											"end": 29334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 29267,
											"end": 29334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29360,
											"end": 29370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29349,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29345,
											"end": 29357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28925,
											"end": 29378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28925,
											"end": 29378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28925,
											"end": 29378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28925,
											"end": 29378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28887,
											"end": 29378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25750,
											"end": 25754,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25780,
											"end": 25786,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25689,
											"end": 25813,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30821,
											"end": 30842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30845,
											"end": 30853,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30854,
											"end": 30858,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 30845,
											"end": 30859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30821,
											"end": 30859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30821,
											"end": 30859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30890,
											"end": 30894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30890,
											"end": 30910,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30890,
											"end": 30910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30890,
											"end": 30910,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30886,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30910,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30870,
											"end": 30945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 30870,
											"end": 30945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 30927,
											"end": 30934,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30870,
											"end": 30945,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 30870,
											"end": 30945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30955,
											"end": 30971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30974,
											"end": 30978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30974,
											"end": 30986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30996,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30974,
											"end": 30996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30996,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 31005,
											"end": 31009,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 30974,
											"end": 31011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 30974,
											"end": 31011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 30974,
											"end": 31011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30955,
											"end": 31011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30955,
											"end": 31011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31038,
											"end": 31039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31026,
											"end": 31034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31026,
											"end": 31039,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31022,
											"end": 31124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 31022,
											"end": 31124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31079,
											"end": 31091,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31056,
											"end": 31060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31056,
											"end": 31076,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31056,
											"end": 31076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31056,
											"end": 31091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31056,
											"end": 31091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31056,
											"end": 31091,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31056,
											"end": 31091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31106,
											"end": 31113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31106,
											"end": 31113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31106,
											"end": 31113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 31106,
											"end": 31113,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31022,
											"end": 31124,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 31022,
											"end": 31124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31134,
											"end": 31152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31155,
											"end": 31204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 31169,
											"end": 31173,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31169,
											"end": 31189,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31169,
											"end": 31189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31169,
											"end": 31189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31191,
											"end": 31203,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31155,
											"end": 31168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 31155,
											"end": 31204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31155,
											"end": 31204,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 31155,
											"end": 31204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31134,
											"end": 31204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31134,
											"end": 31204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31215,
											"end": 31234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31237,
											"end": 31308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 31292,
											"end": 31307,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31292,
											"end": 31307,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 31271,
											"end": 31275,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31271,
											"end": 31286,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31271,
											"end": 31286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31271,
											"end": 31286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 31252,
											"end": 31265,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31252,
											"end": 31265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31247,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31237,
											"end": 31266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31266,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 31237,
											"end": 31266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 31237,
											"end": 31270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31237,
											"end": 31287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31287,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 31237,
											"end": 31287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 31237,
											"end": 31291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31237,
											"end": 31308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31308,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 31237,
											"end": 31308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31215,
											"end": 31308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31215,
											"end": 31308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 31369,
											"end": 31404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 31395,
											"end": 31403,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 31385,
											"end": 31389,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 31369,
											"end": 31380,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 31369,
											"end": 31384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31369,
											"end": 31390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31390,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 31369,
											"end": 31390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 31369,
											"end": 31394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31404,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31369,
											"end": 31404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31369,
											"end": 31404,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 31369,
											"end": 31404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31364,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31343,
											"end": 31364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 31343,
											"end": 31368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31343,
											"end": 31405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31405,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 31343,
											"end": 31405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31323,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31340,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31319,
											"end": 31340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31405,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31439,
											"end": 31451,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31416,
											"end": 31420,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31416,
											"end": 31436,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31416,
											"end": 31436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31416,
											"end": 31451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31416,
											"end": 31451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31416,
											"end": 31451,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31416,
											"end": 31451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30810,
											"end": 31459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30810,
											"end": 31459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30810,
											"end": 31459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30810,
											"end": 31459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30769,
											"end": 31459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36033,
											"end": 36054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36057,
											"end": 36065,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 36066,
											"end": 36070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 36057,
											"end": 36071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36033,
											"end": 36071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36033,
											"end": 36071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36082,
											"end": 36103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36106,
											"end": 36114,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 36106,
											"end": 36120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36115,
											"end": 36119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36106,
											"end": 36120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36106,
											"end": 36120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36106,
											"end": 36120,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36121,
											"end": 36131,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36106,
											"end": 36132,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36082,
											"end": 36132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36082,
											"end": 36132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 36177,
											"end": 36187,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36190,
											"end": 36194,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36190,
											"end": 36201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36190,
											"end": 36201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36190,
											"end": 36201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36147,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36143,
											"end": 36155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36143,
											"end": 36155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36155,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 36143,
											"end": 36155,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36155,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36143,
											"end": 36155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36168,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36143,
											"end": 36168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 36143,
											"end": 36168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36202,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36202,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36143,
											"end": 36202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36202,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 36143,
											"end": 36202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36248,
											"end": 36252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36236,
											"end": 36246,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "PUSH",
											"source": 0,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 36254,
											"end": 36258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36254,
											"end": 36265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36254,
											"end": 36265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36254,
											"end": 36265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 36218,
											"end": 36266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36218,
											"end": 36266,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 36291,
											"end": 36292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36277,
											"end": 36281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36277,
											"end": 36288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36277,
											"end": 36288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36277,
											"end": 36292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36277,
											"end": 36292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36277,
											"end": 36292,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36277,
											"end": 36292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36303,
											"end": 36307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36303,
											"end": 36318,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36303,
											"end": 36318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36303,
											"end": 36322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36303,
											"end": 36322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36303,
											"end": 36322,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36303,
											"end": 36322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36022,
											"end": 36330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36022,
											"end": 36330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35974,
											"end": 36330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25452,
											"end": 25473,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 25429,
											"end": 25449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25473,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27328,
											"end": 27344,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27309,
											"end": 27325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27309,
											"end": 27344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27309,
											"end": 27344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27309,
											"end": 27344,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27309,
											"end": 27344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 30513,
											"end": 30693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30558,
											"end": 30572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30575,
											"end": 30583,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30575,
											"end": 30590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30575,
											"end": 30590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30575,
											"end": 30590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30575,
											"end": 30590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30558,
											"end": 30590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30558,
											"end": 30590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30606,
											"end": 30617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30629,
											"end": 30635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30623,
											"end": 30626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30623,
											"end": 30635,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30659,
											"end": 30674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 30670,
											"end": 30673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30659,
											"end": 30669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 30659,
											"end": 30674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30659,
											"end": 30674,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 30659,
											"end": 30674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 30637,
											"end": 30642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30637,
											"end": 30642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30547,
											"end": 30693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30513,
											"end": 30693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28391,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28437,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 28376,
											"end": 28437,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28408,
											"end": 28425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 28408,
											"end": 28423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 28408,
											"end": 28425,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28408,
											"end": 28425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 28408,
											"end": 28425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 28376,
											"end": 28437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 28516,
											"end": 28527,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 28485,
											"end": 28493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28494,
											"end": 28498,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 28485,
											"end": 28499,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28499,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28485,
											"end": 28510,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28510,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28465,
											"end": 28480,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 28465,
											"end": 28484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28511,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28511,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28465,
											"end": 28511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28511,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 28465,
											"end": 28511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 28465,
											"end": 28515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28528,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28528,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28465,
											"end": 28528,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28528,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28528,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 28465,
											"end": 28528,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28447,
											"end": 28462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28447,
											"end": 28528,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28447,
											"end": 28528,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28447,
											"end": 28528,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28447,
											"end": 28528,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28567,
											"end": 28578,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28548,
											"end": 28552,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 28539,
											"end": 28553,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28553,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28539,
											"end": 28564,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28578,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28578,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28578,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28578,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20821,
											"end": 20851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 20848,
											"end": 20849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 20821,
											"end": 20851,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20821,
											"end": 20851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 20821,
											"end": 20851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25551,
											"end": 25558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25578,
											"end": 25590,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25591,
											"end": 25598,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25571,
											"end": 25599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25571,
											"end": 25599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20151,
											"end": 20158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20171,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20171,
											"end": 20184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29526,
											"end": 29533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29554,
											"end": 29590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 29573,
											"end": 29589,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29573,
											"end": 29589,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 29562,
											"end": 29567,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29557,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 29554,
											"end": 29561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29554,
											"end": 29568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29568,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 29554,
											"end": 29568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 29554,
											"end": 29572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29590,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29554,
											"end": 29590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29590,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 29554,
											"end": 29590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29547,
											"end": 29590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29547,
											"end": 29590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25931,
											"end": 25937,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25916,
											"end": 25921,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 25907,
											"end": 25922,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25907,
											"end": 25928,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25937,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25937,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25937,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25907,
											"end": 25937,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34220,
											"end": 34221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34210,
											"end": 34217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34210,
											"end": 34221,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 34202,
											"end": 34240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 34202,
											"end": 34240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34273,
											"end": 34288,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 34273,
											"end": 34288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34273,
											"end": 34288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34273,
											"end": 34288,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34273,
											"end": 34288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34273,
											"end": 34288,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34273,
											"end": 34288,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34273,
											"end": 34288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34273,
											"end": 34288,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34273,
											"end": 34288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34273,
											"end": 34288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34259,
											"end": 34288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34259,
											"end": 34288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34259,
											"end": 34269,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34259,
											"end": 34288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34259,
											"end": 34288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34259,
											"end": 34288,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34259,
											"end": 34326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34259,
											"end": 34326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 34259,
											"end": 34326,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34259,
											"end": 34326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34306,
											"end": 34326,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 34306,
											"end": 34326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34306,
											"end": 34326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34306,
											"end": 34326,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34306,
											"end": 34326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34306,
											"end": 34326,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34306,
											"end": 34326,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34306,
											"end": 34326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34306,
											"end": 34326,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34306,
											"end": 34326,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34306,
											"end": 34326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34292,
											"end": 34326,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34292,
											"end": 34326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34292,
											"end": 34302,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34292,
											"end": 34326,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34292,
											"end": 34326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34292,
											"end": 34326,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34259,
											"end": 34326,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 34259,
											"end": 34326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 34251,
											"end": 34351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 34251,
											"end": 34351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34386,
											"end": 34394,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 34395,
											"end": 34396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 34386,
											"end": 34397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34408,
											"end": 34429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34432,
											"end": 34440,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34432,
											"end": 34443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34441,
											"end": 34442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34443,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34432,
											"end": 34443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34443,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34432,
											"end": 34443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34432,
											"end": 34443,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34452,
											"end": 34460,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34432,
											"end": 34462,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34408,
											"end": 34462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34408,
											"end": 34462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34483,
											"end": 34496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 34494,
											"end": 34495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34483,
											"end": 34493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 34483,
											"end": 34496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34483,
											"end": 34496,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 34483,
											"end": 34496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34525,
											"end": 34526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34511,
											"end": 34515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34511,
											"end": 34522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34511,
											"end": 34522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34511,
											"end": 34522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34511,
											"end": 34526,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34507,
											"end": 34785,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34507,
											"end": 34785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 34507,
											"end": 34785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34543,
											"end": 34558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34561,
											"end": 34630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 34614,
											"end": 34618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34614,
											"end": 34629,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34614,
											"end": 34629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34614,
											"end": 34629,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 34604,
											"end": 34608,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34561,
											"end": 34599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 34577,
											"end": 34581,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34577,
											"end": 34598,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34577,
											"end": 34598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34577,
											"end": 34598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34565,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34561,
											"end": 34572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 34561,
											"end": 34576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34561,
											"end": 34599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34599,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 34561,
											"end": 34599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 34561,
											"end": 34603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34609,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34561,
											"end": 34609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34609,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 34561,
											"end": 34609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 34561,
											"end": 34613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34630,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34561,
											"end": 34630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34630,
											"name": "tag",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 34561,
											"end": 34630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34543,
											"end": 34630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34543,
											"end": 34630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34648,
											"end": 34655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34648,
											"end": 34659,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34645,
											"end": 34774,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34645,
											"end": 34774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 34645,
											"end": 34774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 34750,
											"end": 34757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34726,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34735,
											"end": 34743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34758,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34714,
											"end": 34758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34758,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 34714,
											"end": 34758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34680,
											"end": 34692,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34701,
											"end": 34709,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34680,
											"end": 34711,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34680,
											"end": 34758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34680,
											"end": 34758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34680,
											"end": 34758,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34680,
											"end": 34758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34645,
											"end": 34774,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 34645,
											"end": 34774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34528,
											"end": 34785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34507,
											"end": 34785,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 34507,
											"end": 34785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34808,
											"end": 34809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34798,
											"end": 34805,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34798,
											"end": 34809,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34795,
											"end": 34965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34795,
											"end": 34965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 34795,
											"end": 34965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 34864,
											"end": 34874,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34885,
											"end": 34889,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34892,
											"end": 34899,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34830,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34826,
											"end": 34838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34826,
											"end": 34838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34838,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34826,
											"end": 34838,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34838,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34826,
											"end": 34838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34855,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34826,
											"end": 34855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 34826,
											"end": 34855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34900,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34900,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34900,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34826,
											"end": 34900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34826,
											"end": 34900,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 34826,
											"end": 34900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34929,
											"end": 34953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 34945,
											"end": 34952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34929,
											"end": 34933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34929,
											"end": 34940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34929,
											"end": 34940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34929,
											"end": 34940,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34929,
											"end": 34944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 34929,
											"end": 34944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34929,
											"end": 34953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34929,
											"end": 34953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34929,
											"end": 34953,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34929,
											"end": 34953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34929,
											"end": 34953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34929,
											"end": 34953,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 34929,
											"end": 34953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34915,
											"end": 34919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34915,
											"end": 34926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34915,
											"end": 34926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34915,
											"end": 34953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34915,
											"end": 34953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34915,
											"end": 34953,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34915,
											"end": 34953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34795,
											"end": 34965,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 34795,
											"end": 34965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 35036,
											"end": 35040,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34993,
											"end": 35031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 35009,
											"end": 35013,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35030,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35009,
											"end": 35030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35030,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 34997,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34993,
											"end": 35004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35004,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 34993,
											"end": 35008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35031,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34993,
											"end": 35031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35031,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 34993,
											"end": 35031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 34993,
											"end": 35035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35041,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34993,
											"end": 35041,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35041,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 34993,
											"end": 35041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 34979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 34990,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34975,
											"end": 34990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35041,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35075,
											"end": 35076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35065,
											"end": 35073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 35078,
											"end": 35085,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 35057,
											"end": 35086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35057,
											"end": 35086,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 35094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 35094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 35094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31612,
											"end": 31613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31604,
											"end": 31608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31604,
											"end": 31613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 31595,
											"end": 31642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 31595,
											"end": 31642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31661,
											"end": 31668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31661,
											"end": 31672,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 31653,
											"end": 31691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 31653,
											"end": 31691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31704,
											"end": 31725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31728,
											"end": 31736,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31737,
											"end": 31741,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 31728,
											"end": 31742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31704,
											"end": 31742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31704,
											"end": 31742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31753,
											"end": 31774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31777,
											"end": 31785,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31786,
											"end": 31790,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31777,
											"end": 31791,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31792,
											"end": 31802,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31777,
											"end": 31803,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31753,
											"end": 31803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31753,
											"end": 31803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31814,
											"end": 31830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 31825,
											"end": 31829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31814,
											"end": 31824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 31814,
											"end": 31830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31814,
											"end": 31830,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 31814,
											"end": 31830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31845,
											"end": 31849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31845,
											"end": 31856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31845,
											"end": 31856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31845,
											"end": 31856,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31845,
											"end": 31860,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31841,
											"end": 32104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31841,
											"end": 32104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 31841,
											"end": 32104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31877,
											"end": 31892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31895,
											"end": 31964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 31948,
											"end": 31952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31948,
											"end": 31963,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31948,
											"end": 31963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31948,
											"end": 31963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 31938,
											"end": 31942,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 31895,
											"end": 31933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 31911,
											"end": 31915,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31911,
											"end": 31932,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31911,
											"end": 31932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31911,
											"end": 31932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31899,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31895,
											"end": 31906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31906,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 31895,
											"end": 31910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31895,
											"end": 31933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31933,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 31895,
											"end": 31933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 31895,
											"end": 31937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31943,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31895,
											"end": 31943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31943,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 31895,
											"end": 31943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 31895,
											"end": 31947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31895,
											"end": 31964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31964,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 31895,
											"end": 31964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31877,
											"end": 31964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31877,
											"end": 31964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31992,
											"end": 31993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31982,
											"end": 31989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31982,
											"end": 31993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31979,
											"end": 32093,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31979,
											"end": 32093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 31979,
											"end": 32093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 32069,
											"end": 32076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32052,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32053,
											"end": 32063,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 32040,
											"end": 32068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32040,
											"end": 32077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32077,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 32040,
											"end": 32077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32025,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32026,
											"end": 32036,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32013,
											"end": 32037,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32077,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32013,
											"end": 32077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31979,
											"end": 32093,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 31979,
											"end": 32093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31862,
											"end": 32104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31841,
											"end": 32104,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 31841,
											"end": 32104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 32152,
											"end": 32162,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32173,
											"end": 32177,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 32180,
											"end": 32187,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32118,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32114,
											"end": 32126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32114,
											"end": 32143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 32114,
											"end": 32143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 32114,
											"end": 32188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 32229,
											"end": 32236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32213,
											"end": 32224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 32213,
											"end": 32228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32237,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32213,
											"end": 32237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32213,
											"end": 32237,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 32213,
											"end": 32237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32199,
											"end": 32203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32199,
											"end": 32210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32199,
											"end": 32210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32199,
											"end": 32237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32199,
											"end": 32237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32199,
											"end": 32237,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32199,
											"end": 32237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 32309,
											"end": 32313,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32266,
											"end": 32304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 32282,
											"end": 32286,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32303,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32282,
											"end": 32303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32270,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32266,
											"end": 32277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 32266,
											"end": 32281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32266,
											"end": 32304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32304,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 32266,
											"end": 32304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 32266,
											"end": 32308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32314,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32266,
											"end": 32314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32266,
											"end": 32314,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 32266,
											"end": 32314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32248,
											"end": 32252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32248,
											"end": 32263,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32248,
											"end": 32263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32248,
											"end": 32314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32248,
											"end": 32314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32248,
											"end": 32314,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32248,
											"end": 32314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32338,
											"end": 32348,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 32356,
											"end": 32363,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 32330,
											"end": 32364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32364,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 32372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 32372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 32372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21103,
											"end": 21125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21103,
											"end": 21125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21111,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21103,
											"end": 21125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 21095,
											"end": 21168,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21179,
											"end": 21207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 21198,
											"end": 21206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21179,
											"end": 21197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 21179,
											"end": 21207,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21179,
											"end": 21207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 21179,
											"end": 21207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29737,
											"end": 29744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29756,
											"end": 29777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29788,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29789,
											"end": 29793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 29780,
											"end": 29794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "tag",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29756,
											"end": 29794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29756,
											"end": 29794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29829,
											"end": 29837,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29838,
											"end": 29842,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29829,
											"end": 29843,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29844,
											"end": 29849,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29829,
											"end": 29850,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 29885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29888,
											"end": 29892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29888,
											"end": 29909,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29888,
											"end": 29909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29888,
											"end": 29909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 29909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 29909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29920,
											"end": 29936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29939,
											"end": 29943,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29939,
											"end": 29951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29939,
											"end": 29961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29961,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 29970,
											"end": 29974,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29939,
											"end": 29976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "tag",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 29939,
											"end": 29976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 29939,
											"end": 29976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29920,
											"end": 29976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29920,
											"end": 29976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30026,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30006,
											"end": 30026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30003,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30026,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30030,
											"end": 30038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30030,
											"end": 30043,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30030,
											"end": 30043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "tag",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29987,
											"end": 30341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29987,
											"end": 30341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 29987,
											"end": 30341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30060,
											"end": 30078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30081,
											"end": 30130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 30095,
											"end": 30099,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30095,
											"end": 30115,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30095,
											"end": 30115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30095,
											"end": 30115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30117,
											"end": 30129,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30081,
											"end": 30094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 30081,
											"end": 30130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30081,
											"end": 30130,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 30081,
											"end": 30130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30060,
											"end": 30130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30060,
											"end": 30130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30145,
											"end": 30164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30167,
											"end": 30238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 30222,
											"end": 30237,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30222,
											"end": 30237,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 30201,
											"end": 30205,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30201,
											"end": 30216,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30201,
											"end": 30216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30201,
											"end": 30216,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 30182,
											"end": 30195,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30182,
											"end": 30195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30177,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 30167,
											"end": 30181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30167,
											"end": 30196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30196,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 30167,
											"end": 30196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 30167,
											"end": 30200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30167,
											"end": 30217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30217,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 30167,
											"end": 30217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 30167,
											"end": 30221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30167,
											"end": 30238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30238,
											"name": "tag",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 30167,
											"end": 30238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30145,
											"end": 30238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30145,
											"end": 30238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 30293,
											"end": 30328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 30319,
											"end": 30327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 30309,
											"end": 30313,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 30293,
											"end": 30304,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 30293,
											"end": 30308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30314,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30293,
											"end": 30314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30314,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 30293,
											"end": 30314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 30293,
											"end": 30318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30293,
											"end": 30328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30293,
											"end": 30328,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 30293,
											"end": 30328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30288,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 30272,
											"end": 30292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30272,
											"end": 30329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30329,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 30272,
											"end": 30329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30253,
											"end": 30329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30253,
											"end": 30329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30045,
											"end": 30341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30045,
											"end": 30341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29987,
											"end": 30341,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 29987,
											"end": 30341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 30406,
											"end": 30410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30406,
											"end": 30421,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30406,
											"end": 30421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30406,
											"end": 30421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 30396,
											"end": 30400,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 30358,
											"end": 30391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 30374,
											"end": 30390,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30362,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30358,
											"end": 30369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 30358,
											"end": 30373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30391,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30358,
											"end": 30391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30391,
											"name": "tag",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 30358,
											"end": 30391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 30358,
											"end": 30395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30358,
											"end": 30401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30401,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 30358,
											"end": 30401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 30358,
											"end": 30405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30358,
											"end": 30422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30358,
											"end": 30422,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 30358,
											"end": 30422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30351,
											"end": 30422,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30351,
											"end": 30422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30351,
											"end": 30422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30351,
											"end": 30422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30351,
											"end": 30422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30351,
											"end": 30422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29663,
											"end": 30430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19532,
											"end": 19539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19559,
											"end": 19569,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19479,
											"end": 19577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2061,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 2127,
											"end": 2132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2156,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 2151,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "tag",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2161,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 2143,
											"end": 2199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "tag",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2219,
											"end": 2220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 2785,
											"end": 2786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2789,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 2781,
											"end": 2820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 841,
											"end": 977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 899,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 930,
											"end": 931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 933,
											"end": 934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 926,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 926,
											"end": 969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 919,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 919,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 385,
											"end": 566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 443,
											"end": 450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 480,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 475,
											"end": 476,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 475,
											"end": 480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "tag",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 463,
											"end": 480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 463,
											"end": 480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 504,
											"end": 505,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 499,
											"end": 500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 505,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 499,
											"end": 505,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 491,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 16287,
											"end": 16292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16340,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 16317,
											"end": 16340,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16317,
											"end": 16340,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16342,
											"end": 16344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16351,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 16294,
											"end": 16352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "tag",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 16267,
											"end": 16353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "tag",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 16533,
											"end": 16538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16592,
											"end": 16596,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16598,
											"end": 16600,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16602,
											"end": 16607,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 16540,
											"end": 16608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "tag",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 16513,
											"end": 16609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "tag",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17259,
											"end": 17260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17250,
											"end": 17255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17250,
											"end": 17260,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17281,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17266,
											"end": 17281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17281,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 17290,
											"end": 17294,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17304,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 17266,
											"end": 17305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 17266,
											"end": 17305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "tag",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 17227,
											"end": 17393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "tag",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "tag",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 17424,
											"end": 17429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17478,
											"end": 17485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17487,
											"end": 17492,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 17431,
											"end": 17493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "tag",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 17404,
											"end": 17494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "tag",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21485,
											"end": 21491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21549,
											"end": 21557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21438,
											"end": 21566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21375,
											"end": 21566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "tag",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 3531,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3587,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3583,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 3582,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "tag",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3694,
											"end": 3695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "tag",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1434,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 1420,
											"end": 1449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "tag",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "tag",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1473,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 1472,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "tag",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19147,
											"end": 19170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 19201,
											"end": 19205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19181,
											"end": 19186,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "tag",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19147,
											"end": 19242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19147,
											"end": 19242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19277,
											"end": 19278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19257,
											"end": 19267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19257,
											"end": 19274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19257,
											"end": 19278,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19354,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 19343,
											"end": 19373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "tag",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 19335,
											"end": 19420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "tag",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18793,
											"end": 19439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "tag",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11715,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 11757,
											"end": 11763,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11765,
											"end": 11769,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11771,
											"end": 11772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11786,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11735,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 11735,
											"end": 11787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "tag",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "tag",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12856,
											"end": 12868,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12914,
											"end": 12919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12910,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12919,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "576"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "578"
										},
										{
											"begin": 12881,
											"end": 12962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "tag",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "tag",
											"source": 0,
											"value": "576"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 12992,
											"end": 12998,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12981,
											"end": 12991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 12981,
											"end": 12999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "tag",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 12973,
											"end": 13033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "tag",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "tag",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13061,
											"end": 13084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13094,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13088,
											"end": 13099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13107,
											"end": 13112,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 13088,
											"end": 13119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "tag",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "tag",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "tag",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 13154,
											"end": 13161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13163,
											"end": 13173,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13187,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 13137,
											"end": 13188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "tag",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "tag",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 8885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9138,
											"end": 9139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9139,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "tag",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15522,
											"end": 15534,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15551,
											"end": 15558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "tag",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15716,
											"end": 15717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15696,
											"end": 15706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15717,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15904,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15888,
											"end": 15905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15942,
											"end": 15952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 15940,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15934,
											"end": 15953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15927,
											"end": 15971,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "tag",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 16030,
											"end": 16050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "tag",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "tag",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "687"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "687"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "692"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 1,
											"value": "692"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "tag",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 2395,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "tag",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 2386,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 2368,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "tag",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 2516,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "tag",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 2662,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "tag",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 2812,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "tag",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2876,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3108,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3094,
											"end": 3103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3090,
											"end": 3109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 3201,
											"end": 3202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3199,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3183,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 3119,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3204,
											"name": "tag",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 3119,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 3282,
											"end": 3284,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3264,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 3214,
											"end": 3286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3286,
											"name": "tag",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 3214,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3353,
											"end": 3362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3349,
											"end": 3367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3346,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 3296,
											"end": 3368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3368,
											"name": "tag",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 3296,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3431,
											"end": 3449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3422,
											"end": 3428,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 3378,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3450,
											"name": "tag",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 3378,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 3457,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 3457,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3937,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3463,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3531,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3590,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3576,
											"end": 3585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3574,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3586,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3559,
											"end": 3591,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3675,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 3556,
											"end": 3675,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 3594,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 3594,
											"end": 3673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3673,
											"name": "tag",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 3594,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3675,
											"name": "tag",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 3556,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 3784,
											"end": 3791,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3773,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3739,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 3739,
											"end": 3792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3739,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 3739,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3867,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 3912,
											"end": 3919,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3903,
											"end": 3909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3901,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 3867,
											"end": 3920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3920,
											"name": "tag",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 3867,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3937,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3937,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3943,
											"end": 4053,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 3943,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4023,
											"end": 4047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 4041,
											"end": 4046,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 4023,
											"end": 4047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4047,
											"name": "tag",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 4023,
											"end": 4047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3943,
											"end": 4053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3943,
											"end": 4053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3943,
											"end": 4053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3943,
											"end": 4053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4209,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 4059,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 4146,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 4146,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4185,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4126,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 4126,
											"end": 4203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4199,
											"end": 4200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4126,
											"end": 4203,
											"name": "tag",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 4126,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4382,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 4215,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4320,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4291,
											"end": 4320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4291,
											"end": 4320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4329,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 4370,
											"end": 4375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4329,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 4329,
											"end": 4376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4329,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 4329,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4382,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4478,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 4388,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4429,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4471,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4472,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4440,
											"end": 4472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4440,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4478,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4600,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 4484,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4554,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 4569,
											"end": 4574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4554,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 4554,
											"end": 4575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4554,
											"end": 4575,
											"name": "tag",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 4554,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4576,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 4534,
											"end": 4594,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4580,
											"end": 4592,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4594,
											"name": "tag",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 4534,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4739,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 4606,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4687,
											"end": 4693,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4674,
											"end": 4694,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 4727,
											"end": 4732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 4703,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4733,
											"name": "tag",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 4703,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4739,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 5386,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4745,
											"end": 5386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4833,
											"end": 4839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4841,
											"end": 4847,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4898,
											"end": 4900,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4886,
											"end": 4895,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4884,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4896,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4901,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4866,
											"end": 4985,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4866,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "741"
										},
										{
											"begin": 4866,
											"end": 4985,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 4904,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 4904,
											"end": 4983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4983,
											"name": "tag",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 4904,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4866,
											"end": 4985,
											"name": "tag",
											"source": 1,
											"value": "741"
										},
										{
											"begin": 4866,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5025,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5049,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5085,
											"end": 5091,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5074,
											"end": 5083,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 5049,
											"end": 5102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5102,
											"name": "tag",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 5049,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "744"
										},
										{
											"begin": 5236,
											"end": 5243,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5225,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 5177,
											"end": 5244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5244,
											"name": "tag",
											"source": 1,
											"value": "744"
										},
										{
											"begin": 5177,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5244,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5319,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 5361,
											"end": 5368,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5350,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5337,
											"end": 5359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 5319,
											"end": 5369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5369,
											"name": "tag",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 5319,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5309,
											"end": 5369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5309,
											"end": 5369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 5386,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 5386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 5386,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 5386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 5386,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 5386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5392,
											"end": 5510,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 5392,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 5497,
											"end": 5502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 5479,
											"end": 5503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5503,
											"name": "tag",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 5479,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5474,
											"end": 5477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5467,
											"end": 5504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5392,
											"end": 5510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5392,
											"end": 5510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5392,
											"end": 5510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5738,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5516,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5609,
											"end": 5613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5647,
											"end": 5649,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5624,
											"end": 5650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5624,
											"end": 5650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 5728,
											"end": 5729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5704,
											"end": 5710,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 5660,
											"end": 5731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5731,
											"name": "tag",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 5660,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5738,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5738,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5861,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 5744,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 5849,
											"end": 5854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 5831,
											"end": 5855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5855,
											"name": "tag",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 5831,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5820,
											"end": 5855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5820,
											"end": 5855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6031,
											"name": "tag",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 5867,
											"end": 6031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 6000,
											"end": 6005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 5961,
											"end": 6006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6006,
											"name": "tag",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 5961,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5951,
											"end": 6007,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 5941,
											"end": 6025,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6025,
											"name": "tag",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 5941,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6218,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 6037,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6104,
											"end": 6109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6142,
											"end": 6148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6129,
											"end": 6149,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 6206,
											"end": 6211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 6158,
											"end": 6212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6212,
											"name": "tag",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 6158,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6595,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 6224,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6355,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6332,
											"end": 6339,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6351,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6356,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6440,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 6321,
											"end": 6440,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6359,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 6359,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 6359,
											"end": 6438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6359,
											"end": 6438,
											"name": "tag",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 6359,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6440,
											"name": "tag",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 6321,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6504,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 6570,
											"end": 6577,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6550,
											"end": 6559,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6504,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 6504,
											"end": 6578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6504,
											"end": 6578,
											"name": "tag",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 6504,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6578,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6450,
											"end": 6588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6595,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6712,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 6601,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6660,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6682,
											"end": 6706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 6700,
											"end": 6705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 6682,
											"end": 6706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6706,
											"name": "tag",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 6682,
											"end": 6706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6712,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6718,
											"end": 6870,
											"name": "tag",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 6718,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 6839,
											"end": 6844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 6806,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6845,
											"name": "tag",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 6806,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6799,
											"end": 6804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6796,
											"end": 6846,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 6786,
											"end": 6864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 6861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6857,
											"end": 6858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6862,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6864,
											"name": "tag",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 6786,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6718,
											"end": 6870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6718,
											"end": 6870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 7045,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 6876,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 6942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6991,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 7033,
											"end": 7038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6991,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 6991,
											"end": 7039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6991,
											"end": 7039,
											"name": "tag",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 6991,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 7045,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 7045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 7045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 7045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 7045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7555,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7051,
											"end": 7555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7142,
											"end": 7148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7193,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7179,
											"end": 7188,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7177,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7166,
											"end": 7189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7162,
											"end": 7194,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7278,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 7159,
											"end": 7278,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 7197,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 7197,
											"end": 7276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7276,
											"name": "tag",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 7197,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7278,
											"name": "tag",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 7159,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "771"
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7393,
											"end": 7399,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7391,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 7342,
											"end": 7410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7410,
											"name": "tag",
											"source": 1,
											"value": "771"
										},
										{
											"begin": 7342,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7332,
											"end": 7410,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7332,
											"end": 7410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7288,
											"end": 7420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7461,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7485,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 7530,
											"end": 7537,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7521,
											"end": 7527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7519,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7506,
											"end": 7528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 7485,
											"end": 7538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7538,
											"name": "tag",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 7485,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7555,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7555,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7702,
											"name": "tag",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 7561,
											"end": 7702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7659,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 7690,
											"end": 7695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7659,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 7659,
											"end": 7696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7659,
											"end": 7696,
											"name": "tag",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 7659,
											"end": 7696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7869,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 7708,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 7856,
											"end": 7861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 7810,
											"end": 7862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7862,
											"name": "tag",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 7810,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7805,
											"end": 7808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7798,
											"end": 7863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 8237,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7875,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8011,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8049,
											"end": 8051,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8038,
											"end": 8047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8034,
											"end": 8052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8026,
											"end": 8052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8026,
											"end": 8052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 8145,
											"end": 8146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8134,
											"end": 8143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8127,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 8062,
											"end": 8148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8148,
											"name": "tag",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 8062,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "779"
										},
										{
											"begin": 8226,
											"end": 8228,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8215,
											"end": 8224,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 8158,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8230,
											"name": "tag",
											"source": 1,
											"value": "779"
										},
										{
											"begin": 8158,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 8237,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 8237,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 8237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 8237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 8237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 8237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8856,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8243,
											"end": 8856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8325,
											"end": 8331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8333,
											"end": 8339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8382,
											"end": 8384,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8370,
											"end": 8379,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8368,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8385,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8350,
											"end": 8469,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8350,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "781"
										},
										{
											"begin": 8350,
											"end": 8469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8388,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 8388,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 8388,
											"end": 8467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8388,
											"end": 8467,
											"name": "tag",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 8388,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8350,
											"end": 8469,
											"name": "tag",
											"source": 1,
											"value": "781"
										},
										{
											"begin": 8350,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8508,
											"end": 8509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8533,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "783"
										},
										{
											"begin": 8578,
											"end": 8585,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8567,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8533,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 8533,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8533,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "783"
										},
										{
											"begin": 8533,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8523,
											"end": 8586,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8523,
											"end": 8586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8635,
											"end": 8637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8661,
											"end": 8714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 8706,
											"end": 8713,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8697,
											"end": 8703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8695,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8682,
											"end": 8704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8661,
											"end": 8714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 8661,
											"end": 8714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8661,
											"end": 8714,
											"name": "tag",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 8661,
											"end": 8714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8651,
											"end": 8714,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8651,
											"end": 8714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8606,
											"end": 8724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8763,
											"end": 8765,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8789,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 8831,
											"end": 8838,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8811,
											"end": 8820,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 8789,
											"end": 8839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 8839,
											"name": "tag",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 8789,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8779,
											"end": 8839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8779,
											"end": 8839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8734,
											"end": 8849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8856,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8856,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8856,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 9009,
											"name": "tag",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 8862,
											"end": 9009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8933,
											"end": 8942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8966,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "787"
										},
										{
											"begin": 8997,
											"end": 9002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 8966,
											"end": 9003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 9003,
											"name": "tag",
											"source": 1,
											"value": "787"
										},
										{
											"begin": 8966,
											"end": 9003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8953,
											"end": 9003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8953,
											"end": 9003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 9009,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 9009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 9009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 9009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9188,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 9015,
											"end": 9188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "789"
										},
										{
											"begin": 9175,
											"end": 9180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 9123,
											"end": 9181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9181,
											"name": "tag",
											"source": 1,
											"value": "789"
										},
										{
											"begin": 9123,
											"end": 9181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9118,
											"end": 9121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9111,
											"end": 9182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9194,
											"end": 9458,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9194,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9308,
											"end": 9312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9335,
											"end": 9344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9331,
											"end": 9349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9359,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 9448,
											"end": 9449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9437,
											"end": 9446,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9433,
											"end": 9450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9424,
											"end": 9430,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9359,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 9359,
											"end": 9451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9359,
											"end": 9451,
											"name": "tag",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 9359,
											"end": 9451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9194,
											"end": 9458,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9194,
											"end": 9458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9194,
											"end": 9458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9194,
											"end": 9458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9194,
											"end": 9458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9938,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 9464,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9532,
											"end": 9538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9591,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9586,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9568,
											"end": 9575,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9564,
											"end": 9587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9592,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9557,
											"end": 9676,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9557,
											"end": 9676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "793"
										},
										{
											"begin": 9557,
											"end": 9676,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 9595,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 9595,
											"end": 9674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 9674,
											"name": "tag",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 9595,
											"end": 9674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9557,
											"end": 9676,
											"name": "tag",
											"source": 1,
											"value": "793"
										},
										{
											"begin": 9557,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 9716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "795"
										},
										{
											"begin": 9785,
											"end": 9792,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9774,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9761,
											"end": 9783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 9740,
											"end": 9793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9793,
											"name": "tag",
											"source": 1,
											"value": "795"
										},
										{
											"begin": 9740,
											"end": 9793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9793,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9686,
											"end": 9803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9842,
											"end": 9844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9868,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "796"
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9904,
											"end": 9910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 9902,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9889,
											"end": 9911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9868,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 9868,
											"end": 9921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9868,
											"end": 9921,
											"name": "tag",
											"source": 1,
											"value": "796"
										},
										{
											"begin": 9868,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9858,
											"end": 9921,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9858,
											"end": 9921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9938,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9938,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10276,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 9944,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10065,
											"end": 10069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10092,
											"end": 10101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10088,
											"end": 10106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10080,
											"end": 10106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10080,
											"end": 10106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10116,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "798"
										},
										{
											"begin": 10184,
											"end": 10185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10173,
											"end": 10182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10169,
											"end": 10186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10160,
											"end": 10166,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10116,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 10116,
											"end": 10187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10116,
											"end": 10187,
											"name": "tag",
											"source": 1,
											"value": "798"
										},
										{
											"begin": 10116,
											"end": 10187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "799"
										},
										{
											"begin": 10265,
											"end": 10267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10263,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10250,
											"end": 10268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10247,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 10197,
											"end": 10269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10269,
											"name": "tag",
											"source": 1,
											"value": "799"
										},
										{
											"begin": 10197,
											"end": 10269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10276,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10276,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10532,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10282,
											"end": 10532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10389,
											"end": 10393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10427,
											"end": 10429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10416,
											"end": 10425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10412,
											"end": 10430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10440,
											"end": 10525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "801"
										},
										{
											"begin": 10522,
											"end": 10523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10511,
											"end": 10520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10507,
											"end": 10524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10498,
											"end": 10504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10440,
											"end": 10525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 10440,
											"end": 10525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10440,
											"end": 10525,
											"name": "tag",
											"source": 1,
											"value": "801"
										},
										{
											"begin": 10440,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10532,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10538,
											"end": 10707,
											"name": "tag",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 10538,
											"end": 10707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10622,
											"end": 10633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10656,
											"end": 10662,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10651,
											"end": 10654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10644,
											"end": 10663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10696,
											"end": 10700,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10691,
											"end": 10694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10672,
											"end": 10701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10672,
											"end": 10701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10538,
											"end": 10707,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10538,
											"end": 10707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10538,
											"end": 10707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10538,
											"end": 10707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10538,
											"end": 10707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10895,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 10713,
											"end": 10895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10853,
											"end": 10887,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10849,
											"end": 10850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10841,
											"end": 10847,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10837,
											"end": 10851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10901,
											"end": 11267,
											"name": "tag",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 10901,
											"end": 11267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11043,
											"end": 11046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11064,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "805"
										},
										{
											"begin": 11128,
											"end": 11130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11123,
											"end": 11126,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11064,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 11064,
											"end": 11131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11064,
											"end": 11131,
											"name": "tag",
											"source": 1,
											"value": "805"
										},
										{
											"begin": 11064,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11057,
											"end": 11131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11057,
											"end": 11131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11140,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "806"
										},
										{
											"begin": 11229,
											"end": 11232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11140,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 11140,
											"end": 11233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11140,
											"end": 11233,
											"name": "tag",
											"source": 1,
											"value": "806"
										},
										{
											"begin": 11140,
											"end": 11233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11258,
											"end": 11260,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11253,
											"end": 11256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11249,
											"end": 11261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11242,
											"end": 11261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11242,
											"end": 11261,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10901,
											"end": 11267,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10901,
											"end": 11267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10901,
											"end": 11267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10901,
											"end": 11267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11273,
											"end": 11692,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 11273,
											"end": 11692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11439,
											"end": 11443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11477,
											"end": 11479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11466,
											"end": 11475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11462,
											"end": 11480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11454,
											"end": 11480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11454,
											"end": 11480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11526,
											"end": 11535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11520,
											"end": 11524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11516,
											"end": 11536,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11501,
											"end": 11510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11497,
											"end": 11514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11490,
											"end": 11537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11554,
											"end": 11685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "808"
										},
										{
											"begin": 11680,
											"end": 11684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11554,
											"end": 11685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 11554,
											"end": 11685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11554,
											"end": 11685,
											"name": "tag",
											"source": 1,
											"value": "808"
										},
										{
											"begin": 11554,
											"end": 11685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11546,
											"end": 11685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11546,
											"end": 11685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11273,
											"end": 11692,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11273,
											"end": 11692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11273,
											"end": 11692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11273,
											"end": 11692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11878,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 11698,
											"end": 11878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11823,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11743,
											"end": 11744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11736,
											"end": 11824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11847,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 11840,
											"end": 11841,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11833,
											"end": 11848,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11867,
											"end": 11871,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11864,
											"end": 11865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11857,
											"end": 11872,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11884,
											"end": 12052,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 11884,
											"end": 12052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12024,
											"end": 12044,
											"name": "PUSH",
											"source": 1,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 12020,
											"end": 12021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12012,
											"end": 12018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12001,
											"end": 12045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11884,
											"end": 12052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11884,
											"end": 12052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12058,
											"end": 12424,
											"name": "tag",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 12058,
											"end": 12424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12200,
											"end": 12203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12221,
											"end": 12288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "812"
										},
										{
											"begin": 12285,
											"end": 12287,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 12280,
											"end": 12283,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12221,
											"end": 12288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 12221,
											"end": 12288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12221,
											"end": 12288,
											"name": "tag",
											"source": 1,
											"value": "812"
										},
										{
											"begin": 12221,
											"end": 12288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 12288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 12288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12297,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "813"
										},
										{
											"begin": 12386,
											"end": 12389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12297,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 12297,
											"end": 12390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12297,
											"end": 12390,
											"name": "tag",
											"source": 1,
											"value": "813"
										},
										{
											"begin": 12297,
											"end": 12390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12415,
											"end": 12417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12410,
											"end": 12413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12399,
											"end": 12418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12399,
											"end": 12418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12058,
											"end": 12424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12058,
											"end": 12424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12058,
											"end": 12424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12058,
											"end": 12424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12430,
											"end": 12849,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 12430,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12596,
											"end": 12600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12634,
											"end": 12636,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12623,
											"end": 12632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12619,
											"end": 12637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12692,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12677,
											"end": 12681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12673,
											"end": 12693,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12669,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12658,
											"end": 12667,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 12671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12647,
											"end": 12694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12711,
											"end": 12842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "815"
										},
										{
											"begin": 12837,
											"end": 12841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12711,
											"end": 12842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 12711,
											"end": 12842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12711,
											"end": 12842,
											"name": "tag",
											"source": 1,
											"value": "815"
										},
										{
											"begin": 12711,
											"end": 12842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12430,
											"end": 12849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12430,
											"end": 12849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12430,
											"end": 12849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12430,
											"end": 12849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12855,
											"end": 12998,
											"name": "tag",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 12855,
											"end": 12998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12912,
											"end": 12917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12943,
											"end": 12949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12937,
											"end": 12950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12928,
											"end": 12950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12928,
											"end": 12950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12959,
											"end": 12992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "817"
										},
										{
											"begin": 12986,
											"end": 12991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12959,
											"end": 12992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 12959,
											"end": 12992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12959,
											"end": 12992,
											"name": "tag",
											"source": 1,
											"value": "817"
										},
										{
											"begin": 12959,
											"end": 12992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12855,
											"end": 12998,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12855,
											"end": 12998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12855,
											"end": 12998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12855,
											"end": 12998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12855,
											"end": 12998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13004,
											"end": 13355,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 13004,
											"end": 13355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13074,
											"end": 13080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13123,
											"end": 13125,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13111,
											"end": 13120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13102,
											"end": 13109,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13098,
											"end": 13121,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13094,
											"end": 13126,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13091,
											"end": 13210,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13091,
											"end": 13210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "819"
										},
										{
											"begin": 13091,
											"end": 13210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13129,
											"end": 13208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "820"
										},
										{
											"begin": 13129,
											"end": 13208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 13129,
											"end": 13208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13129,
											"end": 13208,
											"name": "tag",
											"source": 1,
											"value": "820"
										},
										{
											"begin": 13129,
											"end": 13208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13091,
											"end": 13210,
											"name": "tag",
											"source": 1,
											"value": "819"
										},
										{
											"begin": 13091,
											"end": 13210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13249,
											"end": 13250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13274,
											"end": 13338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "821"
										},
										{
											"begin": 13330,
											"end": 13337,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13321,
											"end": 13327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13310,
											"end": 13319,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13306,
											"end": 13328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13274,
											"end": 13338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 13274,
											"end": 13338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13274,
											"end": 13338,
											"name": "tag",
											"source": 1,
											"value": "821"
										},
										{
											"begin": 13274,
											"end": 13338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13264,
											"end": 13338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13264,
											"end": 13338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13220,
											"end": 13348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13004,
											"end": 13355,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13004,
											"end": 13355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13004,
											"end": 13355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13004,
											"end": 13355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13004,
											"end": 13355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13361,
											"end": 13530,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 13361,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13501,
											"end": 13522,
											"name": "PUSH",
											"source": 1,
											"value": "506F776572206973206E6F7420656E6F75676800000000000000000000000000"
										},
										{
											"begin": 13497,
											"end": 13498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13489,
											"end": 13495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13485,
											"end": 13499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13478,
											"end": 13523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13361,
											"end": 13530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13361,
											"end": 13530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13902,
											"name": "tag",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 13536,
											"end": 13902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13678,
											"end": 13681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13699,
											"end": 13766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "824"
										},
										{
											"begin": 13763,
											"end": 13765,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 13758,
											"end": 13761,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13699,
											"end": 13766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 13699,
											"end": 13766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13699,
											"end": 13766,
											"name": "tag",
											"source": 1,
											"value": "824"
										},
										{
											"begin": 13699,
											"end": 13766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13692,
											"end": 13766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13692,
											"end": 13766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13775,
											"end": 13868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "825"
										},
										{
											"begin": 13864,
											"end": 13867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13775,
											"end": 13868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 13775,
											"end": 13868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13775,
											"end": 13868,
											"name": "tag",
											"source": 1,
											"value": "825"
										},
										{
											"begin": 13775,
											"end": 13868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13893,
											"end": 13895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13888,
											"end": 13891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13884,
											"end": 13896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13877,
											"end": 13896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13877,
											"end": 13896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14327,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 13908,
											"end": 14327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14112,
											"end": 14114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14101,
											"end": 14110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14097,
											"end": 14115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14089,
											"end": 14115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14089,
											"end": 14115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14161,
											"end": 14170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14155,
											"end": 14159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14171,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14147,
											"end": 14148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14136,
											"end": 14145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14132,
											"end": 14149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14189,
											"end": 14320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "827"
										},
										{
											"begin": 14315,
											"end": 14319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14189,
											"end": 14320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 14189,
											"end": 14320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14189,
											"end": 14320,
											"name": "tag",
											"source": 1,
											"value": "827"
										},
										{
											"begin": 14189,
											"end": 14320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14181,
											"end": 14320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14181,
											"end": 14320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14333,
											"end": 14497,
											"name": "tag",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 14333,
											"end": 14497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14473,
											"end": 14489,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206973207A65726F000000000000000000000000000000000000"
										},
										{
											"begin": 14469,
											"end": 14470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14461,
											"end": 14467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14457,
											"end": 14471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14450,
											"end": 14490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14333,
											"end": 14497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14333,
											"end": 14497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14503,
											"end": 14869,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 14503,
											"end": 14869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14645,
											"end": 14648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14666,
											"end": 14733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 14730,
											"end": 14732,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 14725,
											"end": 14728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14666,
											"end": 14733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 14666,
											"end": 14733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14666,
											"end": 14733,
											"name": "tag",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 14666,
											"end": 14733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14659,
											"end": 14733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14659,
											"end": 14733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14742,
											"end": 14835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "831"
										},
										{
											"begin": 14831,
											"end": 14834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14742,
											"end": 14835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 14742,
											"end": 14835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14742,
											"end": 14835,
											"name": "tag",
											"source": 1,
											"value": "831"
										},
										{
											"begin": 14742,
											"end": 14835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14860,
											"end": 14862,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14855,
											"end": 14858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14851,
											"end": 14863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14844,
											"end": 14863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14844,
											"end": 14863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14503,
											"end": 14869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14503,
											"end": 14869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14503,
											"end": 14869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14503,
											"end": 14869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14875,
											"end": 15294,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 14875,
											"end": 15294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15079,
											"end": 15081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15068,
											"end": 15077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15064,
											"end": 15082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15056,
											"end": 15082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15056,
											"end": 15082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15128,
											"end": 15137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15122,
											"end": 15126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15118,
											"end": 15138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15114,
											"end": 15115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15103,
											"end": 15112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15099,
											"end": 15116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15092,
											"end": 15139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15156,
											"end": 15287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "833"
										},
										{
											"begin": 15282,
											"end": 15286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15156,
											"end": 15287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 15156,
											"end": 15287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15156,
											"end": 15287,
											"name": "tag",
											"source": 1,
											"value": "833"
										},
										{
											"begin": 15156,
											"end": 15287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15148,
											"end": 15287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15148,
											"end": 15287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14875,
											"end": 15294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14875,
											"end": 15294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14875,
											"end": 15294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14875,
											"end": 15294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15300,
											"end": 15477,
											"name": "tag",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 15300,
											"end": 15477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15440,
											"end": 15469,
											"name": "PUSH",
											"source": 1,
											"value": "776974686472617720506F77657220627920756E7374616B696E670000000000"
										},
										{
											"begin": 15436,
											"end": 15437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15428,
											"end": 15434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15424,
											"end": 15438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15417,
											"end": 15470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15300,
											"end": 15477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15300,
											"end": 15477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15849,
											"name": "tag",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 15483,
											"end": 15849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15625,
											"end": 15628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15646,
											"end": 15713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "836"
										},
										{
											"begin": 15710,
											"end": 15712,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 15705,
											"end": 15708,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15646,
											"end": 15713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 15646,
											"end": 15713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15646,
											"end": 15713,
											"name": "tag",
											"source": 1,
											"value": "836"
										},
										{
											"begin": 15646,
											"end": 15713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15713,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15713,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15722,
											"end": 15815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "837"
										},
										{
											"begin": 15811,
											"end": 15814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15722,
											"end": 15815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 15722,
											"end": 15815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15722,
											"end": 15815,
											"name": "tag",
											"source": 1,
											"value": "837"
										},
										{
											"begin": 15722,
											"end": 15815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15840,
											"end": 15842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15835,
											"end": 15838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15831,
											"end": 15843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15824,
											"end": 15843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15824,
											"end": 15843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 16274,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 15855,
											"end": 16274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16021,
											"end": 16025,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16059,
											"end": 16061,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16048,
											"end": 16057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16044,
											"end": 16062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16036,
											"end": 16062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16036,
											"end": 16062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16108,
											"end": 16117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16102,
											"end": 16106,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16098,
											"end": 16118,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16094,
											"end": 16095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16083,
											"end": 16092,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16079,
											"end": 16096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16072,
											"end": 16119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16136,
											"end": 16267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 16262,
											"end": 16266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16136,
											"end": 16267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 16136,
											"end": 16267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16136,
											"end": 16267,
											"name": "tag",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 16136,
											"end": 16267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16128,
											"end": 16267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16128,
											"end": 16267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 16274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 16274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 16274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 16274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16280,
											"end": 16450,
											"name": "tag",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 16280,
											"end": 16450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16420,
											"end": 16442,
											"name": "PUSH",
											"source": 1,
											"value": "6D6967726174653A206E6F206D69677261746F72000000000000000000000000"
										},
										{
											"begin": 16416,
											"end": 16417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16408,
											"end": 16414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16404,
											"end": 16418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16397,
											"end": 16443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16280,
											"end": 16450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16280,
											"end": 16450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16456,
											"end": 16822,
											"name": "tag",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 16456,
											"end": 16822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16598,
											"end": 16601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16619,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "842"
										},
										{
											"begin": 16683,
											"end": 16685,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 16678,
											"end": 16681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 16619,
											"end": 16686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16686,
											"name": "tag",
											"source": 1,
											"value": "842"
										},
										{
											"begin": 16619,
											"end": 16686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16612,
											"end": 16686,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16612,
											"end": 16686,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16695,
											"end": 16788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "843"
										},
										{
											"begin": 16784,
											"end": 16787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16695,
											"end": 16788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 16695,
											"end": 16788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16695,
											"end": 16788,
											"name": "tag",
											"source": 1,
											"value": "843"
										},
										{
											"begin": 16695,
											"end": 16788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16813,
											"end": 16815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16808,
											"end": 16811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16804,
											"end": 16816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16797,
											"end": 16816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16797,
											"end": 16816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16456,
											"end": 16822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16456,
											"end": 16822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16456,
											"end": 16822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16456,
											"end": 16822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16828,
											"end": 17247,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 16828,
											"end": 17247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 16998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17032,
											"end": 17034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17021,
											"end": 17030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17017,
											"end": 17035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17009,
											"end": 17035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17009,
											"end": 17035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17081,
											"end": 17090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17075,
											"end": 17079,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17071,
											"end": 17091,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17067,
											"end": 17068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17056,
											"end": 17065,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17052,
											"end": 17069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17045,
											"end": 17092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17109,
											"end": 17240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "845"
										},
										{
											"begin": 17235,
											"end": 17239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17109,
											"end": 17240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 17109,
											"end": 17240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17109,
											"end": 17240,
											"name": "tag",
											"source": 1,
											"value": "845"
										},
										{
											"begin": 17109,
											"end": 17240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17101,
											"end": 17240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17101,
											"end": 17240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16828,
											"end": 17247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16828,
											"end": 17247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16828,
											"end": 17247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16828,
											"end": 17247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17253,
											"end": 17424,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 17253,
											"end": 17424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17324,
											"end": 17329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17355,
											"end": 17361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17349,
											"end": 17362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17340,
											"end": 17362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17340,
											"end": 17362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17371,
											"end": 17418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "847"
										},
										{
											"begin": 17412,
											"end": 17417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17371,
											"end": 17418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 17371,
											"end": 17418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17371,
											"end": 17418,
											"name": "tag",
											"source": 1,
											"value": "847"
										},
										{
											"begin": 17371,
											"end": 17418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17253,
											"end": 17424,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17253,
											"end": 17424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17253,
											"end": 17424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17253,
											"end": 17424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17253,
											"end": 17424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17809,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 17430,
											"end": 17809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17514,
											"end": 17520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17563,
											"end": 17565,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17551,
											"end": 17560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17542,
											"end": 17549,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17538,
											"end": 17561,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17534,
											"end": 17566,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 17531,
											"end": 17650,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17531,
											"end": 17650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "849"
										},
										{
											"begin": 17531,
											"end": 17650,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17569,
											"end": 17648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "850"
										},
										{
											"begin": 17569,
											"end": 17648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 17569,
											"end": 17648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17569,
											"end": 17648,
											"name": "tag",
											"source": 1,
											"value": "850"
										},
										{
											"begin": 17569,
											"end": 17648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17531,
											"end": 17650,
											"name": "tag",
											"source": 1,
											"value": "849"
										},
										{
											"begin": 17531,
											"end": 17650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17689,
											"end": 17690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17714,
											"end": 17792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "851"
										},
										{
											"begin": 17784,
											"end": 17791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17775,
											"end": 17781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17764,
											"end": 17773,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17760,
											"end": 17782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17714,
											"end": 17792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 17714,
											"end": 17792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17714,
											"end": 17792,
											"name": "tag",
											"source": 1,
											"value": "851"
										},
										{
											"begin": 17714,
											"end": 17792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17704,
											"end": 17792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17704,
											"end": 17792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17660,
											"end": 17802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17809,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17809,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17815,
											"end": 17977,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 17815,
											"end": 17977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17955,
											"end": 17969,
											"name": "PUSH",
											"source": 1,
											"value": "6D6967726174653A206261640000000000000000000000000000000000000000"
										},
										{
											"begin": 17951,
											"end": 17952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17943,
											"end": 17949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17939,
											"end": 17953,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17932,
											"end": 17970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17815,
											"end": 17977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17815,
											"end": 17977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17983,
											"end": 18349,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 17983,
											"end": 18349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18125,
											"end": 18128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18146,
											"end": 18213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "854"
										},
										{
											"begin": 18210,
											"end": 18212,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 18205,
											"end": 18208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18146,
											"end": 18213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 18146,
											"end": 18213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18146,
											"end": 18213,
											"name": "tag",
											"source": 1,
											"value": "854"
										},
										{
											"begin": 18146,
											"end": 18213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18139,
											"end": 18213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18139,
											"end": 18213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18222,
											"end": 18315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "855"
										},
										{
											"begin": 18311,
											"end": 18314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18222,
											"end": 18315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 18222,
											"end": 18315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18222,
											"end": 18315,
											"name": "tag",
											"source": 1,
											"value": "855"
										},
										{
											"begin": 18222,
											"end": 18315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18340,
											"end": 18342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18335,
											"end": 18338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18331,
											"end": 18343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18324,
											"end": 18343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18324,
											"end": 18343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17983,
											"end": 18349,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17983,
											"end": 18349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17983,
											"end": 18349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17983,
											"end": 18349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18355,
											"end": 18774,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 18355,
											"end": 18774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18521,
											"end": 18525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18559,
											"end": 18561,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18548,
											"end": 18557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18544,
											"end": 18562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18536,
											"end": 18562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18536,
											"end": 18562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18608,
											"end": 18617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18602,
											"end": 18606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18598,
											"end": 18618,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18594,
											"end": 18595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18583,
											"end": 18592,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18579,
											"end": 18596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18572,
											"end": 18619,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "857"
										},
										{
											"begin": 18762,
											"end": 18766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 18636,
											"end": 18767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18767,
											"name": "tag",
											"source": 1,
											"value": "857"
										},
										{
											"begin": 18636,
											"end": 18767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18628,
											"end": 18767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18628,
											"end": 18767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18355,
											"end": 18774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18355,
											"end": 18774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18355,
											"end": 18774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18355,
											"end": 18774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18780,
											"end": 18960,
											"name": "tag",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 18780,
											"end": 18960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18828,
											"end": 18905,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18825,
											"end": 18826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18818,
											"end": 18906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18925,
											"end": 18929,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 18922,
											"end": 18923,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18915,
											"end": 18930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18949,
											"end": 18953,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18946,
											"end": 18947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18939,
											"end": 18954,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19199,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 18966,
											"end": 19199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19005,
											"end": 19008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19028,
											"end": 19052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "860"
										},
										{
											"begin": 19046,
											"end": 19051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19028,
											"end": 19052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 19028,
											"end": 19052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19028,
											"end": 19052,
											"name": "tag",
											"source": 1,
											"value": "860"
										},
										{
											"begin": 19028,
											"end": 19052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19019,
											"end": 19052,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19019,
											"end": 19052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19074,
											"end": 19140,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19067,
											"end": 19072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19064,
											"end": 19141,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19061,
											"end": 19164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "861"
										},
										{
											"begin": 19061,
											"end": 19164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19144,
											"end": 19162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "862"
										},
										{
											"begin": 19144,
											"end": 19162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 19144,
											"end": 19162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19144,
											"end": 19162,
											"name": "tag",
											"source": 1,
											"value": "862"
										},
										{
											"begin": 19144,
											"end": 19162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19061,
											"end": 19164,
											"name": "tag",
											"source": 1,
											"value": "861"
										},
										{
											"begin": 19061,
											"end": 19164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19191,
											"end": 19192,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19184,
											"end": 19189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19180,
											"end": 19193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19173,
											"end": 19193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19173,
											"end": 19193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19205,
											"end": 19375,
											"name": "tag",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 19205,
											"end": 19375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19345,
											"end": 19367,
											"name": "PUSH",
											"source": 1,
											"value": "43616C6C6572206973206E6F742066616D696C79000000000000000000000000"
										},
										{
											"begin": 19341,
											"end": 19342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19333,
											"end": 19339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19329,
											"end": 19343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19322,
											"end": 19368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19205,
											"end": 19375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19205,
											"end": 19375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19381,
											"end": 19747,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 19381,
											"end": 19747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19523,
											"end": 19526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19544,
											"end": 19611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "865"
										},
										{
											"begin": 19608,
											"end": 19610,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 19603,
											"end": 19606,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19544,
											"end": 19611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 19544,
											"end": 19611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19544,
											"end": 19611,
											"name": "tag",
											"source": 1,
											"value": "865"
										},
										{
											"begin": 19544,
											"end": 19611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19537,
											"end": 19611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19537,
											"end": 19611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19620,
											"end": 19713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "866"
										},
										{
											"begin": 19709,
											"end": 19712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19620,
											"end": 19713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 19620,
											"end": 19713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19620,
											"end": 19713,
											"name": "tag",
											"source": 1,
											"value": "866"
										},
										{
											"begin": 19620,
											"end": 19713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19738,
											"end": 19740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19733,
											"end": 19736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19729,
											"end": 19741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19722,
											"end": 19741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19722,
											"end": 19741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19381,
											"end": 19747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19381,
											"end": 19747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19381,
											"end": 19747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19381,
											"end": 19747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19753,
											"end": 20172,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 19753,
											"end": 20172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19919,
											"end": 19923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19957,
											"end": 19959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19946,
											"end": 19955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19942,
											"end": 19960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19934,
											"end": 19960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19934,
											"end": 19960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20006,
											"end": 20015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20000,
											"end": 20004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19996,
											"end": 20016,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19992,
											"end": 19993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19981,
											"end": 19990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19977,
											"end": 19994,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19970,
											"end": 20017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20034,
											"end": 20165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "868"
										},
										{
											"begin": 20160,
											"end": 20164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20034,
											"end": 20165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 20034,
											"end": 20165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20034,
											"end": 20165,
											"name": "tag",
											"source": 1,
											"value": "868"
										},
										{
											"begin": 20034,
											"end": 20165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20026,
											"end": 20165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20026,
											"end": 20165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19753,
											"end": 20172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19753,
											"end": 20172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19753,
											"end": 20172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19753,
											"end": 20172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20178,
											"end": 20352,
											"name": "tag",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 20178,
											"end": 20352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20318,
											"end": 20344,
											"name": "PUSH",
											"source": 1,
											"value": "6465706F73697420506F776572206279207374616B696E670000000000000000"
										},
										{
											"begin": 20314,
											"end": 20315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20306,
											"end": 20312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20302,
											"end": 20316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20295,
											"end": 20345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20178,
											"end": 20352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20178,
											"end": 20352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20358,
											"end": 20724,
											"name": "tag",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 20358,
											"end": 20724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20500,
											"end": 20503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20521,
											"end": 20588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "871"
										},
										{
											"begin": 20585,
											"end": 20587,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 20580,
											"end": 20583,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20521,
											"end": 20588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 20521,
											"end": 20588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20521,
											"end": 20588,
											"name": "tag",
											"source": 1,
											"value": "871"
										},
										{
											"begin": 20521,
											"end": 20588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20514,
											"end": 20588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20514,
											"end": 20588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20597,
											"end": 20690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "872"
										},
										{
											"begin": 20686,
											"end": 20689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20597,
											"end": 20690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 20597,
											"end": 20690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20597,
											"end": 20690,
											"name": "tag",
											"source": 1,
											"value": "872"
										},
										{
											"begin": 20597,
											"end": 20690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20715,
											"end": 20717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20710,
											"end": 20713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20706,
											"end": 20718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20699,
											"end": 20718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20699,
											"end": 20718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20358,
											"end": 20724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20358,
											"end": 20724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20358,
											"end": 20724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20358,
											"end": 20724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20730,
											"end": 21149,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 20730,
											"end": 21149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20896,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20934,
											"end": 20936,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20923,
											"end": 20932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20919,
											"end": 20937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20911,
											"end": 20937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20911,
											"end": 20937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20983,
											"end": 20992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20977,
											"end": 20981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20993,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20969,
											"end": 20970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20958,
											"end": 20967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20954,
											"end": 20971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20947,
											"end": 20994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21011,
											"end": 21142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "874"
										},
										{
											"begin": 21137,
											"end": 21141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21011,
											"end": 21142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 21011,
											"end": 21142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21011,
											"end": 21142,
											"name": "tag",
											"source": 1,
											"value": "874"
										},
										{
											"begin": 21011,
											"end": 21142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21003,
											"end": 21142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21003,
											"end": 21142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20730,
											"end": 21149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20730,
											"end": 21149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20730,
											"end": 21149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20730,
											"end": 21149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21155,
											"end": 21380,
											"name": "tag",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 21155,
											"end": 21380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21295,
											"end": 21329,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 21291,
											"end": 21292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21283,
											"end": 21289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21279,
											"end": 21293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21272,
											"end": 21330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21364,
											"end": 21372,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21359,
											"end": 21361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21351,
											"end": 21357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21347,
											"end": 21362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21340,
											"end": 21373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21155,
											"end": 21380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21155,
											"end": 21380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21386,
											"end": 21752,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 21386,
											"end": 21752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21528,
											"end": 21531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21549,
											"end": 21616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "877"
										},
										{
											"begin": 21613,
											"end": 21615,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 21608,
											"end": 21611,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21549,
											"end": 21616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 21549,
											"end": 21616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21549,
											"end": 21616,
											"name": "tag",
											"source": 1,
											"value": "877"
										},
										{
											"begin": 21549,
											"end": 21616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21542,
											"end": 21616,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21542,
											"end": 21616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21625,
											"end": 21718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "878"
										},
										{
											"begin": 21714,
											"end": 21717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21625,
											"end": 21718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 21625,
											"end": 21718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21625,
											"end": 21718,
											"name": "tag",
											"source": 1,
											"value": "878"
										},
										{
											"begin": 21625,
											"end": 21718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21743,
											"end": 21745,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21738,
											"end": 21741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21734,
											"end": 21746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21727,
											"end": 21746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21727,
											"end": 21746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21386,
											"end": 21752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21386,
											"end": 21752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21386,
											"end": 21752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21386,
											"end": 21752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21758,
											"end": 22177,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 21758,
											"end": 22177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21924,
											"end": 21928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21962,
											"end": 21964,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21951,
											"end": 21960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21947,
											"end": 21965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21939,
											"end": 21965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21939,
											"end": 21965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22011,
											"end": 22020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22005,
											"end": 22009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22001,
											"end": 22021,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21997,
											"end": 21998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21986,
											"end": 21995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21982,
											"end": 21999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21975,
											"end": 22022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22039,
											"end": 22170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "880"
										},
										{
											"begin": 22165,
											"end": 22169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22039,
											"end": 22170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 22039,
											"end": 22170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22039,
											"end": 22170,
											"name": "tag",
											"source": 1,
											"value": "880"
										},
										{
											"begin": 22039,
											"end": 22170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22031,
											"end": 22170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22031,
											"end": 22170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21758,
											"end": 22177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21758,
											"end": 22177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21758,
											"end": 22177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21758,
											"end": 22177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22183,
											"end": 22531,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 22183,
											"end": 22531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22223,
											"end": 22230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22246,
											"end": 22266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "882"
										},
										{
											"begin": 22264,
											"end": 22265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22246,
											"end": 22266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 22246,
											"end": 22266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22246,
											"end": 22266,
											"name": "tag",
											"source": 1,
											"value": "882"
										},
										{
											"begin": 22246,
											"end": 22266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22241,
											"end": 22266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22241,
											"end": 22266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22280,
											"end": 22300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "883"
										},
										{
											"begin": 22298,
											"end": 22299,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22280,
											"end": 22300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 22280,
											"end": 22300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22280,
											"end": 22300,
											"name": "tag",
											"source": 1,
											"value": "883"
										},
										{
											"begin": 22280,
											"end": 22300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22275,
											"end": 22300,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22275,
											"end": 22300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22468,
											"end": 22469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22400,
											"end": 22466,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22396,
											"end": 22470,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 22393,
											"end": 22394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22390,
											"end": 22471,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 22385,
											"end": 22386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22378,
											"end": 22387,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22371,
											"end": 22388,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22367,
											"end": 22472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22364,
											"end": 22495,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22364,
											"end": 22495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "884"
										},
										{
											"begin": 22364,
											"end": 22495,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22475,
											"end": 22493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "885"
										},
										{
											"begin": 22475,
											"end": 22493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 22475,
											"end": 22493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22475,
											"end": 22493,
											"name": "tag",
											"source": 1,
											"value": "885"
										},
										{
											"begin": 22475,
											"end": 22493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22364,
											"end": 22495,
											"name": "tag",
											"source": 1,
											"value": "884"
										},
										{
											"begin": 22364,
											"end": 22495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22523,
											"end": 22524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22520,
											"end": 22521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22516,
											"end": 22525,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 22505,
											"end": 22525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22505,
											"end": 22525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22183,
											"end": 22531,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22183,
											"end": 22531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22183,
											"end": 22531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22183,
											"end": 22531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22183,
											"end": 22531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22537,
											"end": 22717,
											"name": "tag",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 22537,
											"end": 22717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22585,
											"end": 22662,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22582,
											"end": 22583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22575,
											"end": 22663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22682,
											"end": 22686,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 22679,
											"end": 22680,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22672,
											"end": 22687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22706,
											"end": 22710,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 22703,
											"end": 22704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22696,
											"end": 22711,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22723,
											"end": 22908,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 22723,
											"end": 22908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22763,
											"end": 22764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22780,
											"end": 22800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "888"
										},
										{
											"begin": 22798,
											"end": 22799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22780,
											"end": 22800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 22780,
											"end": 22800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22780,
											"end": 22800,
											"name": "tag",
											"source": 1,
											"value": "888"
										},
										{
											"begin": 22780,
											"end": 22800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22775,
											"end": 22800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22775,
											"end": 22800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22814,
											"end": 22834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "889"
										},
										{
											"begin": 22832,
											"end": 22833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22814,
											"end": 22834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 22814,
											"end": 22834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22814,
											"end": 22834,
											"name": "tag",
											"source": 1,
											"value": "889"
										},
										{
											"begin": 22814,
											"end": 22834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22809,
											"end": 22834,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22809,
											"end": 22834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22853,
											"end": 22854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22843,
											"end": 22878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "890"
										},
										{
											"begin": 22843,
											"end": 22878,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22858,
											"end": 22876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "891"
										},
										{
											"begin": 22858,
											"end": 22876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 22858,
											"end": 22876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22858,
											"end": 22876,
											"name": "tag",
											"source": 1,
											"value": "891"
										},
										{
											"begin": 22858,
											"end": 22876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22843,
											"end": 22878,
											"name": "tag",
											"source": 1,
											"value": "890"
										},
										{
											"begin": 22843,
											"end": 22878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22900,
											"end": 22901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22897,
											"end": 22898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22893,
											"end": 22902,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 22888,
											"end": 22902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22888,
											"end": 22902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22723,
											"end": 22908,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22723,
											"end": 22908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22723,
											"end": 22908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22723,
											"end": 22908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22723,
											"end": 22908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22914,
											"end": 23134,
											"name": "tag",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 22914,
											"end": 23134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23054,
											"end": 23088,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 23050,
											"end": 23051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23042,
											"end": 23048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23038,
											"end": 23052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23031,
											"end": 23089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23123,
											"end": 23126,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23118,
											"end": 23120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23110,
											"end": 23116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23106,
											"end": 23121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23099,
											"end": 23127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22914,
											"end": 23134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22914,
											"end": 23134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23140,
											"end": 23506,
											"name": "tag",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 23140,
											"end": 23506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23282,
											"end": 23285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23303,
											"end": 23370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "894"
										},
										{
											"begin": 23367,
											"end": 23369,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 23362,
											"end": 23365,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23303,
											"end": 23370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 23303,
											"end": 23370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23303,
											"end": 23370,
											"name": "tag",
											"source": 1,
											"value": "894"
										},
										{
											"begin": 23303,
											"end": 23370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23296,
											"end": 23370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23296,
											"end": 23370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23379,
											"end": 23472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "895"
										},
										{
											"begin": 23468,
											"end": 23471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23379,
											"end": 23472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 23379,
											"end": 23472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23379,
											"end": 23472,
											"name": "tag",
											"source": 1,
											"value": "895"
										},
										{
											"begin": 23379,
											"end": 23472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23499,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23492,
											"end": 23495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23488,
											"end": 23500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23481,
											"end": 23500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23481,
											"end": 23500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23140,
											"end": 23506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23140,
											"end": 23506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23140,
											"end": 23506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23140,
											"end": 23506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23512,
											"end": 23931,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 23512,
											"end": 23931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23678,
											"end": 23682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23716,
											"end": 23718,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23705,
											"end": 23714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23701,
											"end": 23719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23693,
											"end": 23719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23693,
											"end": 23719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23765,
											"end": 23774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23759,
											"end": 23763,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23755,
											"end": 23775,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23751,
											"end": 23752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23740,
											"end": 23749,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23736,
											"end": 23753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23729,
											"end": 23776,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23793,
											"end": 23924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "897"
										},
										{
											"begin": 23919,
											"end": 23923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23793,
											"end": 23924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 23793,
											"end": 23924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23793,
											"end": 23924,
											"name": "tag",
											"source": 1,
											"value": "897"
										},
										{
											"begin": 23793,
											"end": 23924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23785,
											"end": 23924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23785,
											"end": 23924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23512,
											"end": 23931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23512,
											"end": 23931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23512,
											"end": 23931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23512,
											"end": 23931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23937,
											"end": 24128,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 23937,
											"end": 24128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23977,
											"end": 23980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23996,
											"end": 24016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "899"
										},
										{
											"begin": 24014,
											"end": 24015,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23996,
											"end": 24016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 23996,
											"end": 24016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23996,
											"end": 24016,
											"name": "tag",
											"source": 1,
											"value": "899"
										},
										{
											"begin": 23996,
											"end": 24016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23991,
											"end": 24016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23991,
											"end": 24016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24030,
											"end": 24050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "900"
										},
										{
											"begin": 24048,
											"end": 24049,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24030,
											"end": 24050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 24030,
											"end": 24050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24030,
											"end": 24050,
											"name": "tag",
											"source": 1,
											"value": "900"
										},
										{
											"begin": 24030,
											"end": 24050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24025,
											"end": 24050,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24025,
											"end": 24050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24073,
											"end": 24074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24070,
											"end": 24071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24066,
											"end": 24075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24059,
											"end": 24075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24059,
											"end": 24075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24094,
											"end": 24097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24091,
											"end": 24092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24088,
											"end": 24098,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 24085,
											"end": 24121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24085,
											"end": 24121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "901"
										},
										{
											"begin": 24085,
											"end": 24121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24101,
											"end": 24119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "902"
										},
										{
											"begin": 24101,
											"end": 24119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 24101,
											"end": 24119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24101,
											"end": 24119,
											"name": "tag",
											"source": 1,
											"value": "902"
										},
										{
											"begin": 24101,
											"end": 24119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24085,
											"end": 24121,
											"name": "tag",
											"source": 1,
											"value": "901"
										},
										{
											"begin": 24085,
											"end": 24121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23937,
											"end": 24128,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23937,
											"end": 24128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23937,
											"end": 24128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23937,
											"end": 24128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23937,
											"end": 24128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24134,
											"end": 24311,
											"name": "tag",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 24134,
											"end": 24311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24274,
											"end": 24303,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 24270,
											"end": 24271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24262,
											"end": 24268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24258,
											"end": 24272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24251,
											"end": 24304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24134,
											"end": 24311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24134,
											"end": 24311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24317,
											"end": 24683,
											"name": "tag",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 24317,
											"end": 24683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24480,
											"end": 24547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "905"
										},
										{
											"begin": 24544,
											"end": 24546,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 24539,
											"end": 24542,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24480,
											"end": 24547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 24480,
											"end": 24547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24480,
											"end": 24547,
											"name": "tag",
											"source": 1,
											"value": "905"
										},
										{
											"begin": 24480,
											"end": 24547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24473,
											"end": 24547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24473,
											"end": 24547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24556,
											"end": 24649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "906"
										},
										{
											"begin": 24645,
											"end": 24648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24556,
											"end": 24649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 24556,
											"end": 24649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24556,
											"end": 24649,
											"name": "tag",
											"source": 1,
											"value": "906"
										},
										{
											"begin": 24556,
											"end": 24649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24674,
											"end": 24676,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24669,
											"end": 24672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24665,
											"end": 24677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24658,
											"end": 24677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24658,
											"end": 24677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24317,
											"end": 24683,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24317,
											"end": 24683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24317,
											"end": 24683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24317,
											"end": 24683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24689,
											"end": 25108,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 24689,
											"end": 25108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24855,
											"end": 24859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24893,
											"end": 24895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24882,
											"end": 24891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24878,
											"end": 24896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24870,
											"end": 24896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24870,
											"end": 24896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24942,
											"end": 24951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24936,
											"end": 24940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24932,
											"end": 24952,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24928,
											"end": 24929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24917,
											"end": 24926,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24913,
											"end": 24930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24906,
											"end": 24953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24970,
											"end": 25101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "908"
										},
										{
											"begin": 25096,
											"end": 25100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24970,
											"end": 25101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 24970,
											"end": 25101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24970,
											"end": 25101,
											"name": "tag",
											"source": 1,
											"value": "908"
										},
										{
											"begin": 24970,
											"end": 25101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24962,
											"end": 25101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24962,
											"end": 25101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24689,
											"end": 25108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24689,
											"end": 25108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24689,
											"end": 25108,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24689,
											"end": 25108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25114,
											"end": 25446,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 25114,
											"end": 25446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25235,
											"end": 25239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25273,
											"end": 25275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25262,
											"end": 25271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25258,
											"end": 25276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25250,
											"end": 25276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25250,
											"end": 25276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25286,
											"end": 25357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "910"
										},
										{
											"begin": 25354,
											"end": 25355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25343,
											"end": 25352,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25339,
											"end": 25356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25330,
											"end": 25336,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 25286,
											"end": 25357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 25286,
											"end": 25357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25286,
											"end": 25357,
											"name": "tag",
											"source": 1,
											"value": "910"
										},
										{
											"begin": 25286,
											"end": 25357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25367,
											"end": 25439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "911"
										},
										{
											"begin": 25435,
											"end": 25437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25424,
											"end": 25433,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25411,
											"end": 25417,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25367,
											"end": 25439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 25367,
											"end": 25439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25367,
											"end": 25439,
											"name": "tag",
											"source": 1,
											"value": "911"
										},
										{
											"begin": 25367,
											"end": 25439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25114,
											"end": 25446,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 25114,
											"end": 25446,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25114,
											"end": 25446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25114,
											"end": 25446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25114,
											"end": 25446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25114,
											"end": 25446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25452,
											"end": 25894,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 25452,
											"end": 25894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25601,
											"end": 25605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25639,
											"end": 25641,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 25628,
											"end": 25637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25624,
											"end": 25642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25616,
											"end": 25642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25616,
											"end": 25642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25652,
											"end": 25723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "913"
										},
										{
											"begin": 25720,
											"end": 25721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25709,
											"end": 25718,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25705,
											"end": 25722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25696,
											"end": 25702,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 25652,
											"end": 25723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 25652,
											"end": 25723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25652,
											"end": 25723,
											"name": "tag",
											"source": 1,
											"value": "913"
										},
										{
											"begin": 25652,
											"end": 25723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25733,
											"end": 25805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "914"
										},
										{
											"begin": 25801,
											"end": 25803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25790,
											"end": 25799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25786,
											"end": 25804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25777,
											"end": 25783,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 25733,
											"end": 25805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 25733,
											"end": 25805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25733,
											"end": 25805,
											"name": "tag",
											"source": 1,
											"value": "914"
										},
										{
											"begin": 25733,
											"end": 25805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25815,
											"end": 25887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "915"
										},
										{
											"begin": 25883,
											"end": 25885,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25872,
											"end": 25881,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25868,
											"end": 25886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25859,
											"end": 25865,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25815,
											"end": 25887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 25815,
											"end": 25887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25815,
											"end": 25887,
											"name": "tag",
											"source": 1,
											"value": "915"
										},
										{
											"begin": 25815,
											"end": 25887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25452,
											"end": 25894,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 25452,
											"end": 25894,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 25452,
											"end": 25894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25452,
											"end": 25894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25452,
											"end": 25894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25452,
											"end": 25894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25452,
											"end": 25894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25900,
											"end": 26232,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 25900,
											"end": 26232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26021,
											"end": 26025,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26059,
											"end": 26061,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26048,
											"end": 26057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26044,
											"end": 26062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26036,
											"end": 26062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26036,
											"end": 26062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26072,
											"end": 26143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "917"
										},
										{
											"begin": 26140,
											"end": 26141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26129,
											"end": 26138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26125,
											"end": 26142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26116,
											"end": 26122,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26072,
											"end": 26143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 26072,
											"end": 26143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26072,
											"end": 26143,
											"name": "tag",
											"source": 1,
											"value": "917"
										},
										{
											"begin": 26072,
											"end": 26143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26153,
											"end": 26225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "918"
										},
										{
											"begin": 26221,
											"end": 26223,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26210,
											"end": 26219,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26206,
											"end": 26224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26197,
											"end": 26203,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26153,
											"end": 26225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 26153,
											"end": 26225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26153,
											"end": 26225,
											"name": "tag",
											"source": 1,
											"value": "918"
										},
										{
											"begin": 26153,
											"end": 26225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25900,
											"end": 26232,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 25900,
											"end": 26232,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25900,
											"end": 26232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25900,
											"end": 26232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25900,
											"end": 26232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25900,
											"end": 26232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26238,
											"end": 26479,
											"name": "tag",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 26238,
											"end": 26479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26378,
											"end": 26412,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
										},
										{
											"begin": 26374,
											"end": 26375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26366,
											"end": 26372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26362,
											"end": 26376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26355,
											"end": 26413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26447,
											"end": 26471,
											"name": "PUSH",
											"source": 1,
											"value": "20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 26442,
											"end": 26444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26434,
											"end": 26440,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26430,
											"end": 26445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26423,
											"end": 26472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26238,
											"end": 26479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26238,
											"end": 26479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26485,
											"end": 26851,
											"name": "tag",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 26485,
											"end": 26851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26627,
											"end": 26630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26648,
											"end": 26715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "921"
										},
										{
											"begin": 26712,
											"end": 26714,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 26707,
											"end": 26710,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 26648,
											"end": 26715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26715,
											"name": "tag",
											"source": 1,
											"value": "921"
										},
										{
											"begin": 26648,
											"end": 26715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26641,
											"end": 26715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26641,
											"end": 26715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26724,
											"end": 26817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "922"
										},
										{
											"begin": 26813,
											"end": 26816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26724,
											"end": 26817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 26724,
											"end": 26817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26724,
											"end": 26817,
											"name": "tag",
											"source": 1,
											"value": "922"
										},
										{
											"begin": 26724,
											"end": 26817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26842,
											"end": 26844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26837,
											"end": 26840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26833,
											"end": 26845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26826,
											"end": 26845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26826,
											"end": 26845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26485,
											"end": 26851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26485,
											"end": 26851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26485,
											"end": 26851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26485,
											"end": 26851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26857,
											"end": 27276,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 26857,
											"end": 27276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27023,
											"end": 27027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27061,
											"end": 27063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27050,
											"end": 27059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27046,
											"end": 27064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27038,
											"end": 27064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27038,
											"end": 27064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27110,
											"end": 27119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27104,
											"end": 27108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27100,
											"end": 27120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27096,
											"end": 27097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27085,
											"end": 27094,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27081,
											"end": 27098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27074,
											"end": 27121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27138,
											"end": 27269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "924"
										},
										{
											"begin": 27264,
											"end": 27268,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27138,
											"end": 27269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 27138,
											"end": 27269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27138,
											"end": 27269,
											"name": "tag",
											"source": 1,
											"value": "924"
										},
										{
											"begin": 27138,
											"end": 27269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27130,
											"end": 27269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27130,
											"end": 27269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26857,
											"end": 27276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26857,
											"end": 27276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26857,
											"end": 27276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26857,
											"end": 27276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27282,
											"end": 27381,
											"name": "tag",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 27282,
											"end": 27381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27334,
											"end": 27340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27368,
											"end": 27373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27362,
											"end": 27374,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27352,
											"end": 27374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27352,
											"end": 27374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27282,
											"end": 27381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27282,
											"end": 27381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27282,
											"end": 27381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27282,
											"end": 27381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27387,
											"end": 27633,
											"name": "tag",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 27387,
											"end": 27633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27468,
											"end": 27469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27478,
											"end": 27591,
											"name": "tag",
											"source": 1,
											"value": "927"
										},
										{
											"begin": 27478,
											"end": 27591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27492,
											"end": 27498,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27489,
											"end": 27490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27486,
											"end": 27499,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 27478,
											"end": 27591,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27478,
											"end": 27591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "929"
										},
										{
											"begin": 27478,
											"end": 27591,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27577,
											"end": 27578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27572,
											"end": 27575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27568,
											"end": 27579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27562,
											"end": 27580,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27558,
											"end": 27559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27553,
											"end": 27556,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27549,
											"end": 27560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27542,
											"end": 27581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27514,
											"end": 27516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27511,
											"end": 27512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27507,
											"end": 27517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27502,
											"end": 27517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27502,
											"end": 27517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27478,
											"end": 27591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "927"
										},
										{
											"begin": 27478,
											"end": 27591,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27478,
											"end": 27591,
											"name": "tag",
											"source": 1,
											"value": "929"
										},
										{
											"begin": 27478,
											"end": 27591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27625,
											"end": 27626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27616,
											"end": 27622,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27611,
											"end": 27614,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27607,
											"end": 27623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27600,
											"end": 27627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27449,
											"end": 27633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27387,
											"end": 27633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27387,
											"end": 27633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27387,
											"end": 27633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27387,
											"end": 27633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27639,
											"end": 27741,
											"name": "tag",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 27639,
											"end": 27741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27680,
											"end": 27686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27731,
											"end": 27733,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 27727,
											"end": 27734,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 27722,
											"end": 27724,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 27715,
											"end": 27720,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27711,
											"end": 27725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27707,
											"end": 27735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27697,
											"end": 27735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27697,
											"end": 27735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27639,
											"end": 27741,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27639,
											"end": 27741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27639,
											"end": 27741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27639,
											"end": 27741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27747,
											"end": 28124,
											"name": "tag",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 27747,
											"end": 28124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27835,
											"end": 27838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27863,
											"end": 27902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "932"
										},
										{
											"begin": 27896,
											"end": 27901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27863,
											"end": 27902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 27863,
											"end": 27902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27863,
											"end": 27902,
											"name": "tag",
											"source": 1,
											"value": "932"
										},
										{
											"begin": 27863,
											"end": 27902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27918,
											"end": 27989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "933"
										},
										{
											"begin": 27982,
											"end": 27988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 27918,
											"end": 27989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 27918,
											"end": 27989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27918,
											"end": 27989,
											"name": "tag",
											"source": 1,
											"value": "933"
										},
										{
											"begin": 27918,
											"end": 27989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27911,
											"end": 27989,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 27911,
											"end": 27989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27998,
											"end": 28063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "934"
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28051,
											"end": 28054,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 28044,
											"end": 28048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28037,
											"end": 28042,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 28033,
											"end": 28049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27998,
											"end": 28063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 27998,
											"end": 28063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27998,
											"end": 28063,
											"name": "tag",
											"source": 1,
											"value": "934"
										},
										{
											"begin": 27998,
											"end": 28063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28088,
											"end": 28117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "935"
										},
										{
											"begin": 28110,
											"end": 28116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28088,
											"end": 28117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 28088,
											"end": 28117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28088,
											"end": 28117,
											"name": "tag",
											"source": 1,
											"value": "935"
										},
										{
											"begin": 28088,
											"end": 28117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28083,
											"end": 28086,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28079,
											"end": 28118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28072,
											"end": 28118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28072,
											"end": 28118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27839,
											"end": 28124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27747,
											"end": 28124,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 27747,
											"end": 28124,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27747,
											"end": 28124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27747,
											"end": 28124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27747,
											"end": 28124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28130,
											"end": 28443,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 28130,
											"end": 28443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28243,
											"end": 28247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28281,
											"end": 28283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28270,
											"end": 28279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28266,
											"end": 28284,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28258,
											"end": 28284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28258,
											"end": 28284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28330,
											"end": 28339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28324,
											"end": 28328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28320,
											"end": 28340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28316,
											"end": 28317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28305,
											"end": 28314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28301,
											"end": 28318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28294,
											"end": 28341,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28358,
											"end": 28436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "937"
										},
										{
											"begin": 28431,
											"end": 28435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28422,
											"end": 28428,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28358,
											"end": 28436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 28358,
											"end": 28436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28358,
											"end": 28436,
											"name": "tag",
											"source": 1,
											"value": "937"
										},
										{
											"begin": 28358,
											"end": 28436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28350,
											"end": 28436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28350,
											"end": 28436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28130,
											"end": 28443,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28130,
											"end": 28443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28130,
											"end": 28443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28130,
											"end": 28443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28130,
											"end": 28443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28449,
											"end": 28643,
											"name": "tag",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 28449,
											"end": 28643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28489,
											"end": 28493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28509,
											"end": 28529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "939"
										},
										{
											"begin": 28527,
											"end": 28528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28509,
											"end": 28529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 28509,
											"end": 28529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28509,
											"end": 28529,
											"name": "tag",
											"source": 1,
											"value": "939"
										},
										{
											"begin": 28509,
											"end": 28529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28504,
											"end": 28529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28504,
											"end": 28529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28543,
											"end": 28563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "940"
										},
										{
											"begin": 28561,
											"end": 28562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28543,
											"end": 28563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 28543,
											"end": 28563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28543,
											"end": 28563,
											"name": "tag",
											"source": 1,
											"value": "940"
										},
										{
											"begin": 28543,
											"end": 28563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28538,
											"end": 28563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28538,
											"end": 28563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28587,
											"end": 28588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28584,
											"end": 28585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28580,
											"end": 28589,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28572,
											"end": 28589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28572,
											"end": 28589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28611,
											"end": 28612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28605,
											"end": 28609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28602,
											"end": 28613,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 28599,
											"end": 28636,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28599,
											"end": 28636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "941"
										},
										{
											"begin": 28599,
											"end": 28636,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28616,
											"end": 28634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "942"
										},
										{
											"begin": 28616,
											"end": 28634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 28616,
											"end": 28634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28616,
											"end": 28634,
											"name": "tag",
											"source": 1,
											"value": "942"
										},
										{
											"begin": 28616,
											"end": 28634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28599,
											"end": 28636,
											"name": "tag",
											"source": 1,
											"value": "941"
										},
										{
											"begin": 28599,
											"end": 28636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28449,
											"end": 28643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28449,
											"end": 28643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28449,
											"end": 28643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28449,
											"end": 28643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28449,
											"end": 28643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 28786,
											"name": "tag",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 28649,
											"end": 28786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28703,
											"end": 28708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28734,
											"end": 28740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28728,
											"end": 28741,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28719,
											"end": 28741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28719,
											"end": 28741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28750,
											"end": 28780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "944"
										},
										{
											"begin": 28774,
											"end": 28779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28750,
											"end": 28780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 28750,
											"end": 28780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28750,
											"end": 28780,
											"name": "tag",
											"source": 1,
											"value": "944"
										},
										{
											"begin": 28750,
											"end": 28780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 28786,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 28786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 28786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 28786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 28786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28792,
											"end": 29137,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 28792,
											"end": 29137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28859,
											"end": 28865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28908,
											"end": 28910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28896,
											"end": 28905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28887,
											"end": 28894,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28883,
											"end": 28906,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28879,
											"end": 28911,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 28876,
											"end": 28995,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28876,
											"end": 28995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "946"
										},
										{
											"begin": 28876,
											"end": 28995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28914,
											"end": 28993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "947"
										},
										{
											"begin": 28914,
											"end": 28993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 28914,
											"end": 28993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28914,
											"end": 28993,
											"name": "tag",
											"source": 1,
											"value": "947"
										},
										{
											"begin": 28914,
											"end": 28993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28876,
											"end": 28995,
											"name": "tag",
											"source": 1,
											"value": "946"
										},
										{
											"begin": 28876,
											"end": 28995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29034,
											"end": 29035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29059,
											"end": 29120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "948"
										},
										{
											"begin": 29112,
											"end": 29119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 29103,
											"end": 29109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29092,
											"end": 29101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 29088,
											"end": 29110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29059,
											"end": 29120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 29059,
											"end": 29120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29059,
											"end": 29120,
											"name": "tag",
											"source": 1,
											"value": "948"
										},
										{
											"begin": 29059,
											"end": 29120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29049,
											"end": 29120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29049,
											"end": 29120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29005,
											"end": 29130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28792,
											"end": 29137,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28792,
											"end": 29137,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28792,
											"end": 29137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28792,
											"end": 29137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28792,
											"end": 29137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29143,
											"end": 29372,
											"name": "tag",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 29143,
											"end": 29372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29283,
											"end": 29317,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 29279,
											"end": 29280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29271,
											"end": 29277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29267,
											"end": 29281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29260,
											"end": 29318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29352,
											"end": 29364,
											"name": "PUSH",
											"source": 1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 29347,
											"end": 29349,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29339,
											"end": 29345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29335,
											"end": 29350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29328,
											"end": 29365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29143,
											"end": 29372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29143,
											"end": 29372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29378,
											"end": 29744,
											"name": "tag",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 29378,
											"end": 29744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29520,
											"end": 29523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29541,
											"end": 29608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "951"
										},
										{
											"begin": 29605,
											"end": 29607,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 29600,
											"end": 29603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29541,
											"end": 29608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 29541,
											"end": 29608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29541,
											"end": 29608,
											"name": "tag",
											"source": 1,
											"value": "951"
										},
										{
											"begin": 29541,
											"end": 29608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29534,
											"end": 29608,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29534,
											"end": 29608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29617,
											"end": 29710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "952"
										},
										{
											"begin": 29706,
											"end": 29709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29617,
											"end": 29710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 29617,
											"end": 29710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29617,
											"end": 29710,
											"name": "tag",
											"source": 1,
											"value": "952"
										},
										{
											"begin": 29617,
											"end": 29710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29735,
											"end": 29737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29730,
											"end": 29733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29726,
											"end": 29738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29719,
											"end": 29738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29719,
											"end": 29738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29378,
											"end": 29744,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29378,
											"end": 29744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29378,
											"end": 29744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29378,
											"end": 29744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29750,
											"end": 30169,
											"name": "tag",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 29750,
											"end": 30169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29916,
											"end": 29920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29954,
											"end": 29956,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29943,
											"end": 29952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29939,
											"end": 29957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29931,
											"end": 29957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29931,
											"end": 29957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30003,
											"end": 30012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29997,
											"end": 30001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29993,
											"end": 30013,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29989,
											"end": 29990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29978,
											"end": 29987,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29974,
											"end": 29991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29967,
											"end": 30014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30031,
											"end": 30162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "954"
										},
										{
											"begin": 30157,
											"end": 30161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30031,
											"end": 30162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 30031,
											"end": 30162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30031,
											"end": 30162,
											"name": "tag",
											"source": 1,
											"value": "954"
										},
										{
											"begin": 30031,
											"end": 30162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30023,
											"end": 30162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30023,
											"end": 30162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29750,
											"end": 30169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29750,
											"end": 30169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29750,
											"end": 30169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29750,
											"end": 30169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30175,
											"end": 30400,
											"name": "tag",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 30175,
											"end": 30400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30315,
											"end": 30349,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 30311,
											"end": 30312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30303,
											"end": 30309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30299,
											"end": 30313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30292,
											"end": 30350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30384,
											"end": 30392,
											"name": "PUSH",
											"source": 1,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30379,
											"end": 30381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30371,
											"end": 30377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30367,
											"end": 30382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30360,
											"end": 30393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30175,
											"end": 30400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30175,
											"end": 30400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30406,
											"end": 30772,
											"name": "tag",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 30406,
											"end": 30772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30548,
											"end": 30551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30569,
											"end": 30636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "957"
										},
										{
											"begin": 30633,
											"end": 30635,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 30628,
											"end": 30631,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30569,
											"end": 30636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 30569,
											"end": 30636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30569,
											"end": 30636,
											"name": "tag",
											"source": 1,
											"value": "957"
										},
										{
											"begin": 30569,
											"end": 30636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30562,
											"end": 30636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30562,
											"end": 30636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30645,
											"end": 30738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "958"
										},
										{
											"begin": 30734,
											"end": 30737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30645,
											"end": 30738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 30645,
											"end": 30738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30645,
											"end": 30738,
											"name": "tag",
											"source": 1,
											"value": "958"
										},
										{
											"begin": 30645,
											"end": 30738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30763,
											"end": 30765,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30758,
											"end": 30761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30754,
											"end": 30766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30747,
											"end": 30766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30747,
											"end": 30766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30406,
											"end": 30772,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30406,
											"end": 30772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30406,
											"end": 30772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30406,
											"end": 30772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30778,
											"end": 31197,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 30778,
											"end": 31197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30944,
											"end": 30948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30982,
											"end": 30984,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30971,
											"end": 30980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30967,
											"end": 30985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30959,
											"end": 30985,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30959,
											"end": 30985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31031,
											"end": 31040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31025,
											"end": 31029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31021,
											"end": 31041,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31017,
											"end": 31018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31006,
											"end": 31015,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31002,
											"end": 31019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30995,
											"end": 31042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31059,
											"end": 31190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "960"
										},
										{
											"begin": 31185,
											"end": 31189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31059,
											"end": 31190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 31059,
											"end": 31190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31059,
											"end": 31190,
											"name": "tag",
											"source": 1,
											"value": "960"
										},
										{
											"begin": 31059,
											"end": 31190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31051,
											"end": 31190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31051,
											"end": 31190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30778,
											"end": 31197,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30778,
											"end": 31197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30778,
											"end": 31197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30778,
											"end": 31197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31203,
											"end": 31382,
											"name": "tag",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 31203,
											"end": 31382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31343,
											"end": 31374,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 31339,
											"end": 31340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31331,
											"end": 31337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31327,
											"end": 31341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31320,
											"end": 31375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31203,
											"end": 31382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31203,
											"end": 31382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31388,
											"end": 31754,
											"name": "tag",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 31388,
											"end": 31754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31530,
											"end": 31533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31551,
											"end": 31618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "963"
										},
										{
											"begin": 31615,
											"end": 31617,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 31610,
											"end": 31613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31551,
											"end": 31618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 31551,
											"end": 31618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31551,
											"end": 31618,
											"name": "tag",
											"source": 1,
											"value": "963"
										},
										{
											"begin": 31551,
											"end": 31618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31544,
											"end": 31618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31544,
											"end": 31618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31627,
											"end": 31720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "964"
										},
										{
											"begin": 31716,
											"end": 31719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31627,
											"end": 31720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 31627,
											"end": 31720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31627,
											"end": 31720,
											"name": "tag",
											"source": 1,
											"value": "964"
										},
										{
											"begin": 31627,
											"end": 31720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31745,
											"end": 31747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31740,
											"end": 31743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31736,
											"end": 31748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31729,
											"end": 31748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31729,
											"end": 31748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31388,
											"end": 31754,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31388,
											"end": 31754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31388,
											"end": 31754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31388,
											"end": 31754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31760,
											"end": 32179,
											"name": "tag",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 31760,
											"end": 32179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31926,
											"end": 31930,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31964,
											"end": 31966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31953,
											"end": 31962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31949,
											"end": 31967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31941,
											"end": 31967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31941,
											"end": 31967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32013,
											"end": 32022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32007,
											"end": 32011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32003,
											"end": 32023,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31999,
											"end": 32000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31988,
											"end": 31997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31984,
											"end": 32001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31977,
											"end": 32024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32041,
											"end": 32172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "966"
										},
										{
											"begin": 32167,
											"end": 32171,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32041,
											"end": 32172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 32041,
											"end": 32172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32041,
											"end": 32172,
											"name": "tag",
											"source": 1,
											"value": "966"
										},
										{
											"begin": 32041,
											"end": 32172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32033,
											"end": 32172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32033,
											"end": 32172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31760,
											"end": 32179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31760,
											"end": 32179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31760,
											"end": 32179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31760,
											"end": 32179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32185,
											"end": 32283,
											"name": "tag",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 32185,
											"end": 32283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32236,
											"end": 32242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32270,
											"end": 32275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32264,
											"end": 32276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32254,
											"end": 32276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32254,
											"end": 32276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32185,
											"end": 32283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32185,
											"end": 32283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32185,
											"end": 32283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32185,
											"end": 32283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32289,
											"end": 32436,
											"name": "tag",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 32289,
											"end": 32436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32390,
											"end": 32401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32427,
											"end": 32430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32412,
											"end": 32430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32412,
											"end": 32430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32289,
											"end": 32436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32289,
											"end": 32436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32289,
											"end": 32436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32289,
											"end": 32436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32289,
											"end": 32436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32442,
											"end": 32828,
											"name": "tag",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 32442,
											"end": 32828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32546,
											"end": 32549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32574,
											"end": 32612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "970"
										},
										{
											"begin": 32606,
											"end": 32611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32574,
											"end": 32612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 32574,
											"end": 32612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32574,
											"end": 32612,
											"name": "tag",
											"source": 1,
											"value": "970"
										},
										{
											"begin": 32574,
											"end": 32612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32628,
											"end": 32716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "971"
										},
										{
											"begin": 32709,
											"end": 32715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32704,
											"end": 32707,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 32628,
											"end": 32716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 32628,
											"end": 32716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32628,
											"end": 32716,
											"name": "tag",
											"source": 1,
											"value": "971"
										},
										{
											"begin": 32628,
											"end": 32716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32621,
											"end": 32716,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 32621,
											"end": 32716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32725,
											"end": 32790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "972"
										},
										{
											"begin": 32783,
											"end": 32789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32778,
											"end": 32781,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32775,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32764,
											"end": 32769,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 32760,
											"end": 32776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32725,
											"end": 32790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 32725,
											"end": 32790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32725,
											"end": 32790,
											"name": "tag",
											"source": 1,
											"value": "972"
										},
										{
											"begin": 32725,
											"end": 32790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32815,
											"end": 32821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32810,
											"end": 32813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 32806,
											"end": 32822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32799,
											"end": 32822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32799,
											"end": 32822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32550,
											"end": 32828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32442,
											"end": 32828,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32442,
											"end": 32828,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32442,
											"end": 32828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32442,
											"end": 32828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32442,
											"end": 32828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32834,
											"end": 33105,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 32834,
											"end": 33105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32964,
											"end": 32967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32986,
											"end": 33079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "974"
										},
										{
											"begin": 33075,
											"end": 33078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33066,
											"end": 33072,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 32986,
											"end": 33079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 32986,
											"end": 33079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32986,
											"end": 33079,
											"name": "tag",
											"source": 1,
											"value": "974"
										},
										{
											"begin": 32986,
											"end": 33079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32979,
											"end": 33079,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32979,
											"end": 33079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33096,
											"end": 33099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33089,
											"end": 33099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33089,
											"end": 33099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32834,
											"end": 33105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32834,
											"end": 33105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32834,
											"end": 33105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32834,
											"end": 33105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32834,
											"end": 33105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTMasterChef.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BONUS_MULTIPLIER()": "8aa28550",
							"DDT()": "cb3cba55",
							"DDTMasterchefAddress()": "22f58541",
							"NFTStakeAddress()": "83e32135",
							"PowerPerBlock()": "5990c569",
							"add(uint256,address,bool)": "1eaaa045",
							"addNFT(address,uint256)": "4ea2813c",
							"claimNFTReward(uint256,uint256)": "1d5fbd87",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"enterStaking(uint256)": "41441d3b",
							"enterStakingCompund(uint256,address)": "cf35fddf",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"getPowerBalance(address)": "8c51793b",
							"leaveStaking(uint256)": "1058d281",
							"massUpdatePools()": "630b5ba1",
							"migrate(uint256)": "454b0608",
							"migrator()": "7cd07e47",
							"nftsInfo(uint256)": "61c1b724",
							"owner()": "8da5cb5b",
							"pendingPower(uint256,address)": "f3239ab5",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"powerBalance(address)": "d209db8c",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256,bool)": "64482f79",
							"setMigrator(address)": "23cf3118",
							"startBlock()": "48cd4cb1",
							"totalAllocPoint()": "17caf6f1",
							"transferOwnership(address)": "f2fde38b",
							"updateDDTMasterchefAddress(address)": "56b4685f",
							"updateMultiplier(uint256)": "5ffe6146",
							"updateNFT(uint256,uint256)": "c11490cc",
							"updateNFTStakeAddress(address)": "0ba33a58",
							"updatePool(uint256)": "51eb05a6",
							"updatePowerPerBlock(uint256)": "3df7aff3",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_DDT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_PowerPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DDT\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DDTMasterchefAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFTStakeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PowerPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_NFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"addNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"claimNFTReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"enterStakingCompund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getPowerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftsInfo\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"NFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accPowerPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"powerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_DDTMasterchefAddress\",\"type\":\"address\"}],\"name\":\"updateDDTMasterchefAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"updateNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_NFTStakeAddress\",\"type\":\"address\"}],\"name\":\"updateNFTStakeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"updatePowerPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"NFTMasterChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xadb7e581fb37e6ff5b85a2b2eb1efbe4b3a4c2f62d01e39b14ed92e411a63b87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1f8b8db77bd6dae4584ec4c604c9538291d93a0552d537ba2f1b42555029ff\",\"dweb:/ipfs/QmPYkLmzLV3Kh5pD9z4hyhpJmgA1LjcuPM6Y8Q2LLEUNV8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 967,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "nftsInfo",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(NFTsInfo)963_storage)dyn_storage"
							},
							{
								"astId": 970,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "DDT",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)286"
							},
							{
								"astId": 972,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "PowerPerBlock",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 975,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "BONUS_MULTIPLIER",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 978,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "migrator",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMigratorChef)927"
							},
							{
								"astId": 982,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "poolInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(PoolInfo)957_storage)dyn_storage"
							},
							{
								"astId": 989,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "userInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)947_storage))"
							},
							{
								"astId": 992,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 994,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "startBlock",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 996,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "NFTStakeAddress",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 998,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "DDTMasterchefAddress",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1002,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "powerBalance",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(NFTsInfo)963_storage)dyn_storage": {
								"base": "t_struct(NFTsInfo)963_storage",
								"encoding": "dynamic_array",
								"label": "struct NFTMasterChef.NFTsInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(PoolInfo)957_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)957_storage",
								"encoding": "dynamic_array",
								"label": "struct NFTMasterChef.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)286": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)933": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(IMigratorChef)927": {
								"encoding": "inplace",
								"label": "contract IMigratorChef",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)947_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NFTMasterChef.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)947_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)947_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)947_storage)"
							},
							"t_struct(NFTsInfo)963_storage": {
								"encoding": "inplace",
								"label": "struct NFTMasterChef.NFTsInfo",
								"members": [
									{
										"astId": 960,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "NFT",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC721)933"
									},
									{
										"astId": 962,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "power",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(PoolInfo)957_storage": {
								"encoding": "inplace",
								"label": "struct NFTMasterChef.PoolInfo",
								"members": [
									{
										"astId": 950,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "lpToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)286"
									},
									{
										"astId": 952,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 954,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 956,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "accPowerPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(UserInfo)947_storage": {
								"encoding": "inplace",
								"label": "struct NFTMasterChef.UserInfo",
								"members": [
									{
										"astId": 944,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 946,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xadb7e581fb37e6ff5b85a2b2eb1efbe4b3a4c2f62d01e39b14ed92e411a63b87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1f8b8db77bd6dae4584ec4c604c9538291d93a0552d537ba2f1b42555029ff\",\"dweb:/ipfs/QmPYkLmzLV3Kh5pD9z4hyhpJmgA1LjcuPM6Y8Q2LLEUNV8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTMasterChef.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":16091:19442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":16091:19442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207fab41db5ad77982e7962bd9157c06417caf661316ee786f443c47053aed48ba64736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207fab41db5ad77982e7962bd9157c06417caf661316ee786f443c47053aed48ba64736f6c63430008100033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xAB41DB5AD77982E7962BD9157C06417CAF661316EE786F443C47053AED48BA64 PUSH20 0x6F6C634300081000330000000000000000000000 ",
							"sourceMap": "16091:3351:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207fab41db5ad77982e7962bd9157c06417caf661316ee786f443c47053aed48ba64736f6c63430008100033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xAB41DB5AD77982E7962BD9157C06417CAF661316EE786F443C47053AED48BA64 PUSH20 0x6F6C634300081000330000000000000000000000 ",
							"sourceMap": "16091:3351:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207fab41db5ad77982e7962bd9157c06417caf661316ee786f443c47053aed48ba64736f6c63430008100033",
									".code": [
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTMasterChef.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xadb7e581fb37e6ff5b85a2b2eb1efbe4b3a4c2f62d01e39b14ed92e411a63b87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1f8b8db77bd6dae4584ec4c604c9538291d93a0552d537ba2f1b42555029ff\",\"dweb:/ipfs/QmPYkLmzLV3Kh5pD9z4hyhpJmgA1LjcuPM6Y8Q2LLEUNV8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":130:4978  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":130:4978  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122067fa5e4bc7c74a8aca4ffa35a29d066e3b77c3a6ad197e324db484687bc6c4c764736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122067fa5e4bc7c74a8aca4ffa35a29d066e3b77c3a6ad197e324db484687bc6c4c764736f6c63430008100033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xFA5E4BC7C74A8ACA 0x4F STATICCALL CALLDATALOAD LOG2 SWAP14 MOD PUSH15 0x3B77C3A6AD197E324DB484687BC6C4 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "130:4848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122067fa5e4bc7c74a8aca4ffa35a29d066e3b77c3a6ad197e324db484687bc6c4c764736f6c63430008100033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xFA5E4BC7C74A8ACA 0x4F STATICCALL CALLDATALOAD LOG2 SWAP14 MOD PUSH15 0x3B77C3A6AD197E324DB484687BC6C4 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "130:4848:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122067fa5e4bc7c74a8aca4ffa35a29d066e3b77c3a6ad197e324db484687bc6c4c764736f6c63430008100033",
									".code": [
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTMasterChef.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xadb7e581fb37e6ff5b85a2b2eb1efbe4b3a4c2f62d01e39b14ed92e411a63b87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1f8b8db77bd6dae4584ec4c604c9538291d93a0552d537ba2f1b42555029ff\",\"dweb:/ipfs/QmPYkLmzLV3Kh5pD9z4hyhpJmgA1LjcuPM6Y8Q2LLEUNV8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/NFTMasterChef.sol": {
				"ast": {
					"absolutePath": "contracts/NFTMasterChef.sol",
					"exportedSymbols": {
						"Address": [
							578
						],
						"Context": [
							816
						],
						"IERC20": [
							286
						],
						"IERC721": [
							933
						],
						"IMigratorChef": [
							927
						],
						"NFTMasterChef": [
							2475
						],
						"Ownable": [
							917
						],
						"SafeERC20": [
							797
						],
						"SafeMath": [
							194
						]
					},
					"id": 2476,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "SafeMath",
							"nameLocation": "138:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "452:114:0",
										"statements": [
											{
												"assignments": [
													12
												],
												"declarations": [
													{
														"constant": false,
														"id": 12,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "471:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "463:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 11,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "463:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 13,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 14,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "479:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "475:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "463:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 18,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "499:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 19,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "504:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "499:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "507:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "491:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "491:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "491:46:0"
											},
											{
												"expression": {
													"id": 24,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "557:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 10,
												"id": 25,
												"nodeType": "Return",
												"src": "550:8:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "154:225:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:22:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:9:0"
									},
									"scope": 194,
									"src": "385:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "908:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "930:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 39,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "933:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "936:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 37,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															44,
															72
														],
														"referencedDeclaration": 72,
														"src": "926:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "926:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 36,
												"id": 42,
												"nodeType": "Return",
												"src": "919:50:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "574:261:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "850:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "862:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "854:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "873:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "865:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "853:22:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "899:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:9:0"
									},
									"scope": 194,
									"src": "841:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1409:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 57,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "1428:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 58,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1433:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1428:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 60,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "1436:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1420:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1420:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1420:29:0"
											},
											{
												"assignments": [
													64
												],
												"declarations": [
													{
														"constant": false,
														"id": 64,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1468:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "1460:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 63,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1460:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 65,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1472:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 66,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1476:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1472:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1460:17:0"
											},
											{
												"expression": {
													"id": 69,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 64,
													"src": "1497:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 55,
												"id": 70,
												"nodeType": "Return",
												"src": "1490:8:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "985:323:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1323:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1335:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1327:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1346:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1338:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1363:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1349:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 50,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1349:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:50:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:9:0"
									},
									"scope": 194,
									"src": "1314:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1824:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 82,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2060:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2065:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2060:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 88,
												"nodeType": "IfStatement",
												"src": "2056:47:0",
												"trueBody": {
													"id": 87,
													"nodeType": "Block",
													"src": "2068:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2090:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 81,
															"id": 86,
															"nodeType": "Return",
															"src": "2083:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2123:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "2115:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 89,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 94,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 91,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2127:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 92,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "2131:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2127:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2115:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 96,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "2151:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 97,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "2155:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2151:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 99,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2160:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2151:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2163:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2143:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2143:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2143:56:0"
											},
											{
												"expression": {
													"id": 104,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 90,
													"src": "2219:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 81,
												"id": 105,
												"nodeType": "Return",
												"src": "2212:8:0"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "1514:237:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1766:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1778:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1770:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1789:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1781:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1769:22:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1815:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:9:0"
									},
									"scope": 194,
									"src": "1757:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "2763:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 118,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "2785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 119,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2788:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2791:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 117,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															124,
															152
														],
														"referencedDeclaration": 152,
														"src": "2781:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2781:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 116,
												"id": 122,
												"nodeType": "Return",
												"src": "2774:46:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "2236:454:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2705:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2717:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2709:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2728:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2720:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2708:22:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2754:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:9:0"
									},
									"scope": 194,
									"src": "2696:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "3453:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "3539:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3543:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3539:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 140,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "3546:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3531:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3531:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "3531:28:0"
											},
											{
												"assignments": [
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3578:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 151,
														"src": "3570:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3570:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 145,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "3582:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 146,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3586:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3582:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3570:17:0"
											},
											{
												"expression": {
													"id": 149,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 144,
													"src": "3694:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 135,
												"id": 150,
												"nodeType": "Return",
												"src": "3687:8:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "2836:516:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3367:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3379:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3371:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3390:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3382:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3407:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3393:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3393:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3370:50:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3444:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3443:9:0"
									},
									"scope": 194,
									"src": "3358:345:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "4227:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 163,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4249:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 164,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "4252:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4255:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 162,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															169,
															193
														],
														"referencedDeclaration": 193,
														"src": "4245:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4245:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 161,
												"id": 167,
												"nodeType": "Return",
												"src": "4238:44:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "3711:443:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4169:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4181:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4173:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4192:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4184:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4172:22:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4218:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4217:9:0"
									},
									"scope": 194,
									"src": "4160:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "4904:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "4923:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4928:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4923:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 185,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "4931:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4915:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4915:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "4915:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 188,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "4962:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 189,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "4966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4962:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 180,
												"id": 191,
												"nodeType": "Return",
												"src": "4955:12:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "4298:505:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4818:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4830:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4822:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4841:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4858:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4844:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4844:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:50:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4895:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4894:9:0"
									},
									"scope": 194,
									"src": "4809:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2476,
							"src": "130:4848:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC20",
							"nameLocation": "4992:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "5006:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5089:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5100:2:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "5126:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:9:0"
									},
									"scope": 286,
									"src": "5080:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "5143:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5232:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5250:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5242:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5241:17:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5282:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5281:9:0"
									},
									"scope": 286,
									"src": "5223:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "5299:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5529:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5546:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5538:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5565:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5557:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5537:35:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5591:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5591:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5590:6:0"
									},
									"scope": 286,
									"src": "5520:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5605:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5890:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5908:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5900:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5923:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5915:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:32:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:9:0"
									},
									"scope": 286,
									"src": "5881:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "5972:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6642:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6658:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6650:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6675:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6667:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6649:33:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6701:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6701:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6700:6:0"
									},
									"scope": 286,
									"src": "6633:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "6724:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6737:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6729:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6754:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6746:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:33:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6780:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6780:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6779:6:0"
									},
									"scope": 286,
									"src": "6715:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "6794:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7113:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7144:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7136:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7169:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7161:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7197:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7189:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7125:85:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7229:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7229:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7228:6:0"
									},
									"scope": 286,
									"src": "7104:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "7243:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 268,
									"name": "Transfer",
									"nameLocation": "7418:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7443:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7427:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7465:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7449:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7426:57:0"
									},
									"src": "7412:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7492:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 277,
									"name": "Approval",
									"nameLocation": "7655:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7680:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7664:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7703:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7687:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7720:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7712:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7663:63:0"
									},
									"src": "7649:78:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8",
									"id": 285,
									"name": "Mint",
									"nameLocation": "7741:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"indexed": true,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "7762:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7746:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7786:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7770:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7798:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7790:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7745:60:0"
									},
									"src": "7735:71:0"
								}
							],
							"scope": 2476,
							"src": "4982:2827:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "Address",
							"nameLocation": "7821:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "8887:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 294,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "9116:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9124:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "9116:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9129:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9116:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9138:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9116:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 293,
												"id": 299,
												"nodeType": "Return",
												"src": "9109:30:0"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "7836:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "8830:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8849:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8841:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8840:17:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8881:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8881:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8880:6:0"
									},
									"scope": 578,
									"src": "8821:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "10153:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 312,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10180:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10172:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 310,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10172:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10172:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10186:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "10172:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 315,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10197:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10172:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10205:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10164:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "10164:73:0"
											},
											{
												"assignments": [
													321,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10256:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "10251:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 320,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 328,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10299:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 322,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "10269:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10279:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10269:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 324,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10291:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10269:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10269:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10250:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "10321:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10330:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10313:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "10313:78:0"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "9155:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "10091:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10117:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10101:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10101:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10136:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10128:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10100:43:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10153:0:0"
									},
									"scope": 578,
									"src": "10082:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "11250:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "11281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "11289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11295:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 345,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															352,
															372
														],
														"referencedDeclaration": 372,
														"src": "11268:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11268:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 344,
												"id": 350,
												"nodeType": "Return",
												"src": "11261:67:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "10407:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11170:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11191:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11183:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11212:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11199:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11199:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11182:35:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11236:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11236:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11235:14:0"
									},
									"scope": 578,
									"src": "11161:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "11717:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "11757:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "11765:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11771:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 368,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "11774:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 364,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "11735:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11735:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 363,
												"id": 370,
												"nodeType": "Return",
												"src": "11728:59:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "11344:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11575:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11606:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11598:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11636:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11623:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11623:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11665:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11651:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11651:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11587:97:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11703:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11703:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11702:14:0"
									},
									"scope": 578,
									"src": "11566:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "12317:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "12357:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "12365:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 387,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "12371:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12378:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 384,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "12335:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12335:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 383,
												"id": 390,
												"nodeType": "Return",
												"src": "12328:94:0"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "11803:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12179:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12219:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12211:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12249:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12236:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12236:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12272:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12264:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12200:84:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12303:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12303:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12302:14:0"
									},
									"scope": 578,
									"src": "12170:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "12870:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 409,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12897:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 407,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12889:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12889:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12903:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "12889:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 412,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "12914:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12889:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12921:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12881:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "12881:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 419,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "12992:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 418,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "12981:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12981:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13001:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12973:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "12973:60:0"
											},
											{
												"assignments": [
													425,
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13052:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13047:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 424,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13047:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "13074:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13061:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 426,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13061:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [
														{
															"id": 432,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "13114:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 428,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "13088:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13095:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "13088:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 430,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "13107:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13088:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13088:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13046:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "13154:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 437,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "13163:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 438,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "13175:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 435,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "13137:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13137:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 405,
												"id": 440,
												"nodeType": "Return",
												"src": "13130:58:0"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "12438:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12695:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12735:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12765:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12752:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 396,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12752:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12788:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12780:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12818:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12804:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12804:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12716:121:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12856:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12856:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12855:14:0"
									},
									"scope": 578,
									"src": "12686:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "13481:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "13518:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "13526:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13532:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 452,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															459,
															494
														],
														"referencedDeclaration": 494,
														"src": "13499:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13499:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 457,
												"nodeType": "Return",
												"src": "13492:80:0"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "13204:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13390:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13438:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13425:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13425:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13408:35:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13467:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13467:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13466:14:0"
									},
									"scope": 578,
									"src": "13381:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "13934:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 473,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "13964:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 472,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "13953:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13953:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13973:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13945:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13945:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "13945:67:0"
											},
											{
												"assignments": [
													479,
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14031:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14026:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 478,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "14053:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14040:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 480,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14040:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "14085:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 482,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "14067:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14074:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "14067:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14067:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14025:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "14125:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 489,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "14134:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 490,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "14146:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 487,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "14108:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14108:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 470,
												"id": 492,
												"nodeType": "Return",
												"src": "14101:58:0"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "13588:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13781:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13818:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13848:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13835:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13877:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13863:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13863:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13799:97:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13920:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13919:14:0"
									},
									"scope": 578,
									"src": "13772:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "14451:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14490:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "14498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14504:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 504,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															546
														],
														"referencedDeclaration": 546,
														"src": "14469:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14469:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 503,
												"id": 509,
												"nodeType": "Return",
												"src": "14462:84:0"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "14175:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14363:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14392:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14384:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14413:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14400:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14400:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14383:35:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14437:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 501,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14437:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14436:14:0"
									},
									"scope": 578,
									"src": "14354:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "14907:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 525,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "14937:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 524,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "14926:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14926:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14946:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14918:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "14918:69:0"
											},
											{
												"assignments": [
													531,
													533
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15006:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15001:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 530,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15001:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 533,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "15028:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15015:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 532,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15015:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"arguments": [
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "15062:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 534,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "15042:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15049:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "15042:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15042:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15000:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "15102:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 541,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "15111:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 542,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "15123:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 539,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "15085:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15085:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 522,
												"id": 544,
												"nodeType": "Return",
												"src": "15078:58:0"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "14562:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14757:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14796:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14788:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14788:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14826:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14813:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14813:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14855:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14841:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14841:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14777:97:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14893:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14893:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14892:14:0"
									},
									"scope": 578,
									"src": "14748:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "15536:548:0",
										"statements": [
											{
												"condition": {
													"id": 558,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 549,
													"src": "15551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "15610:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 562,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "15696:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15707:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "15696:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "15696:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 572,
																"nodeType": "Block",
																"src": "16011:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 569,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 553,
																					"src": "16037:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 568,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "16030:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16030:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 571,
																		"nodeType": "ExpressionStatement",
																		"src": "16030:20:0"
																	}
																]
															},
															"id": 573,
															"nodeType": "IfStatement",
															"src": "15692:374:0",
															"trueBody": {
																"id": 567,
																"nodeType": "Block",
																"src": "15719:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "15842:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "15865:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "15894:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "15888:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15888:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "15869:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "15938:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "15942:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15934:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15934:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "15955:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "15927:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15927:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15927:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15894:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15942:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 566,
																		"nodeType": "InlineAssembly",
																		"src": "15833:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 575,
												"nodeType": "IfStatement",
												"src": "15547:530:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "15560:44:0",
													"statements": [
														{
															"expression": {
																"id": 559,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "15582:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 557,
															"id": 560,
															"nodeType": "Return",
															"src": "15575:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "15152:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "15381:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "15413:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15408:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15408:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "15444:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15431:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15431:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "15479:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15465:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15465:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15397:101:0"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15522:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15522:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15521:14:0"
									},
									"scope": 578,
									"src": "15372:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2476,
							"src": "7813:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 797,
							"linearizedBaseContracts": [
								797
							],
							"name": "SafeERC20",
							"nameLocation": "16099:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 581,
									"libraryName": {
										"id": 579,
										"name": "Address",
										"nameLocations": [
											"16122:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "16122:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "16116:26:0",
									"typeName": {
										"id": 580,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16134:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "16256:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 592,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "16287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 595,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "16317:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "16323:8:0",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 218,
																		"src": "16317:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16332:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16317:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 598,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "16342:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "16346:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 593,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16294:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "16298:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16294:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16294:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 591,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16267:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16267:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "16267:86:0"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "16159:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16189:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16182:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 583,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 582,
														"name": "IERC20",
														"nameLocations": [
															"16182:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16182:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16182:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16213:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16205:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16234:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16226:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16171:75:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16256:0:0"
									},
									"scope": 797,
									"src": "16150:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "16502:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 617,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "16533:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 620,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 607,
																			"src": "16563:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "16569:12:0",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 259,
																		"src": "16563:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16582:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16563:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 623,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "16592:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 624,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "16598:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "16602:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 618,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16540:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "16544:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16540:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16540:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 616,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16513:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16513:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "16513:96:0"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "16378:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16412:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16405:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 605,
														"name": "IERC20",
														"nameLocations": [
															"16405:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16405:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16405:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16459:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16451:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16480:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16472:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16394:98:0"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16502:0:0"
									},
									"scope": 797,
									"src": "16369:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "16996:506:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "17250:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17259:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17250:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 645,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17249:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 650,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "17290:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 649,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17282:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 648,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17282:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17282:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 652,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 636,
																					"src": "17297:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 646,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "17266:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "17272:9:0",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 228,
																				"src": "17266:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17266:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17309:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17266:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 656,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17265:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17249:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17326:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17227:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17227:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "17227:166:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "17424:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 665,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 634,
																			"src": "17454:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17460:7:0",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17454:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17468:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17454:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 668,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "17478:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 669,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "17487:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 663,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17431:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "17435:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17431:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17431:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 661,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17404:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17404:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "17404:90:0"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "16625:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "16895:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16924:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16917:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 633,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 632,
														"name": "IERC20",
														"nameLocations": [
															"16917:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16917:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16917:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16948:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16940:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16974:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16966:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16906:80:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16996:0:0"
									},
									"scope": 797,
									"src": "16886:616:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "17630:197:0",
										"statements": [
											{
												"assignments": [
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "17649:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "17641:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17641:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 690,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "17688:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17680:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 688,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17680:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17680:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 692,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "17695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 686,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "17664:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$286",
																	"typeString": "contract IERC20"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17670:9:0",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 228,
															"src": "17664:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17664:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 694,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "17706:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17664:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17641:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "17742:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 701,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 677,
																			"src": "17772:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17778:7:0",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17772:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17786:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17772:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 704,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "17796:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 705,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "17805:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17749:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "17753:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17749:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17749:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 697,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17722:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17722:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "17722:97:0"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "17519:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17558:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17551:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 676,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 675,
														"name": "IERC20",
														"nameLocations": [
															"17551:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17551:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17551:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17608:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17600:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17540:80:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17630:0:0"
									},
									"scope": 797,
									"src": "17510:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "17955:377:0",
										"statements": [
											{
												"id": 756,
												"nodeType": "UncheckedBlock",
												"src": "17966:359:0",
												"statements": [
													{
														"assignments": [
															721
														],
														"declarations": [
															{
																"constant": false,
																"id": 721,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "17999:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "17991:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17991:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 730,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 726,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "18038:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18030:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18030:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18030:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 728,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "18045:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 722,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18014:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18020:9:0",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "18014:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18014:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17991:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 732,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "18076:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 733,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "18092:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18076:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18099:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 731,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "18068:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18068:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 737,
														"nodeType": "ExpressionStatement",
														"src": "18068:75:0"
													},
													{
														"assignments": [
															739
														],
														"declarations": [
															{
																"constant": false,
																"id": 739,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "18166:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "18158:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 738,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18158:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 743,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 740,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "18181:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 741,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "18196:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18181:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18158:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18236:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 748,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "18266:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "18272:7:0",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 238,
																				"src": "18266:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "18280:8:0",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "18266:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 751,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "18290:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 752,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 739,
																			"src": "18299:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 746,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "18243:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "18247:18:0",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "18243:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18243:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 744,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "18216:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18216:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 755,
														"nodeType": "ExpressionStatement",
														"src": "18216:97:0"
													}
												]
											}
										]
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "17844:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17883:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17876:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 712,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 711,
														"name": "IERC20",
														"nameLocations": [
															"17876:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17876:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17876:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17907:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17899:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17933:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17925:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17865:80:0"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17955:0:0"
									},
									"scope": 797,
									"src": "17835:497:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "18793:646:0",
										"statements": [
											{
												"assignments": [
													768
												],
												"declarations": [
													{
														"constant": false,
														"id": 768,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "19160:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "19147:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 767,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "19147:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 774,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "19201:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19207:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 771,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "19181:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19173:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19173:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19173:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19188:12:0",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "19173:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19173:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19147:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 778,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "19257:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19268:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "19257:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19277:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19257:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "19253:179:0",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "19280:152:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 785,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 768,
																				"src": "19354:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 787,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19367:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 786,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "19367:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 788,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19366:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 783,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "19343:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "19347:6:0",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "19343:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19343:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19375:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 782,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "19335:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19335:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 792,
															"nodeType": "ExpressionStatement",
															"src": "19335:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "18340:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "18732:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18759:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18752:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 761,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 760,
														"name": "IERC20",
														"nameLocations": [
															"18752:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "18752:6:0"
													},
													"referencedDeclaration": 286,
													"src": "18752:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18779:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18766:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18766:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18751:33:0"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18793:0:0"
									},
									"scope": 797,
									"src": "18723:716:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2476,
							"src": "16091:3351:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 816,
							"linearizedBaseContracts": [
								816
							],
							"name": "Context",
							"nameLocation": "19464:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "19541:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 802,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19559:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "19563:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "19559:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 801,
												"id": 804,
												"nodeType": "Return",
												"src": "19552:17:0"
											}
										]
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "19488:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19498:2:0"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "19532:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19531:9:0"
									},
									"scope": 816,
									"src": "19479:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "19652:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 811,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19670:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "19674:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "19670:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 810,
												"id": 813,
												"nodeType": "Return",
												"src": "19663:15:0"
											}
										]
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "19594:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19602:2:0"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "19636:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19636:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19635:16:0"
									},
									"scope": 816,
									"src": "19585:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2476,
							"src": "19446:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 817,
										"name": "Context",
										"nameLocations": [
											"19722:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 816,
										"src": "19722:7:0"
									},
									"id": 818,
									"nodeType": "InheritanceSpecifier",
									"src": "19722:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 917,
							"linearizedBaseContracts": [
								917,
								816
							],
							"name": "Ownable",
							"nameLocation": "19711:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "19753:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "19737:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 819,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "19737:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 826,
									"name": "OwnershipTransferred",
									"nameLocation": "19774:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "19811:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19795:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19794:57:0"
									},
									"src": "19768:84:0"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "19973:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 831,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "20003:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20003:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 830,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "19984:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19984:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "19984:32:0"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "19860:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 836,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19970:2:0"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19973:0:0"
									},
									"scope": 917,
									"src": "19959:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "20160:32:0",
										"statements": [
											{
												"expression": {
													"id": 842,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "20178:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 841,
												"id": 843,
												"nodeType": "Return",
												"src": "20171:13:0"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "20032:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "20114:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20119:2:0"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "20151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20150:9:0"
									},
									"scope": 917,
									"src": "20105:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "20306:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 849,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "20325:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20325:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 851,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "20336:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20336:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20325:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20350:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20317:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "20317:68:0"
											},
											{
												"id": 857,
												"nodeType": "PlaceholderStatement",
												"src": "20396:1:0"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "20200:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 859,
									"name": "onlyOwner",
									"nameLocation": "20294:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20303:2:0"
									},
									"src": "20285:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "20810:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20848:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20840:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 866,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20840:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20840:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 865,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "20821:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20821:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "20821:30:0"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "20413:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 863,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 862,
												"name": "onlyOwner",
												"nameLocations": [
													"20800:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "20800:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20800:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "20765:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20782:2:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20810:0:0"
									},
									"scope": 917,
									"src": "20756:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "21084:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 882,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "21103:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21123:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21115:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 883,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21115:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21115:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21103:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21127:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21095:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21095:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "21095:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "21198:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 891,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "21179:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21179:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "21179:28:0"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "20867:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 879,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 878,
												"name": "onlyOwner",
												"nameLocations": [
													"21074:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "21074:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21074:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "21023:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21049:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "21041:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21040:18:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21084:0:0"
									},
									"scope": 917,
									"src": "21014:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "21438:128:0",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "21457:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "21449:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 902,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21449:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"id": 904,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "21468:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21449:25:0"
											},
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 906,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "21485:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 907,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "21494:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21485:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "21485:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 911,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "21539:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "21549:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 910,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "21518:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21518:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "EmitStatement",
												"src": "21513:45:0"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "21223:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "21384:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21411:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "21403:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21402:18:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21438:0:0"
									},
									"scope": 917,
									"src": "21375:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2476,
							"src": "19693:1876:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMigratorChef",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 927,
							"linearizedBaseContracts": [
								927
							],
							"name": "IMigratorChef",
							"nameLocation": "21583:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ce5494bb",
									"id": 926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nameLocation": "21613:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21628:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21621:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 918,
														"name": "IERC20",
														"nameLocations": [
															"21621:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21621:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21621:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21620:14:0"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21653:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 923,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 922,
														"name": "IERC20",
														"nameLocations": [
															"21653:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21653:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21653:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21652:8:0"
									},
									"scope": 927,
									"src": "21604:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2476,
							"src": "21573:91:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "IERC721",
							"nameLocation": "21678:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "17e5883c",
									"id": 932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createNFT",
									"nameLocation": "21702:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21720:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "21712:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21711:12:0"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21732:0:0"
									},
									"scope": 933,
									"src": "21693:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2476,
							"src": "21668:68:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 934,
										"name": "Ownable",
										"nameLocations": [
											"22137:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 917,
										"src": "22137:7:0"
									},
									"id": 935,
									"nodeType": "InheritanceSpecifier",
									"src": "22137:7:0"
								}
							],
							"canonicalName": "NFTMasterChef",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2475,
							"linearizedBaseContracts": [
								2475,
								917,
								816
							],
							"name": "NFTMasterChef",
							"nameLocation": "22120:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 938,
									"libraryName": {
										"id": 936,
										"name": "SafeMath",
										"nameLocations": [
											"22158:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "22158:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22152:27:0",
									"typeName": {
										"id": 937,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22171:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 942,
									"libraryName": {
										"id": 939,
										"name": "SafeERC20",
										"nameLocations": [
											"22191:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 797,
										"src": "22191:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22185:27:0",
									"typeName": {
										"id": 941,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 940,
											"name": "IERC20",
											"nameLocations": [
												"22205:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "22205:6:0"
										},
										"referencedDeclaration": 286,
										"src": "22205:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "NFTMasterChef.UserInfo",
									"id": 947,
									"members": [
										{
											"constant": false,
											"id": 944,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "22280:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 947,
											"src": "22272:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 943,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "22272:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 946,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "22350:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 947,
											"src": "22342:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 945,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "22342:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "22252:8:0",
									"nodeType": "StructDefinition",
									"scope": 2475,
									"src": "22245:794:0",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMasterChef.PoolInfo",
									"id": 957,
									"members": [
										{
											"constant": false,
											"id": 950,
											"mutability": "mutable",
											"name": "lpToken",
											"nameLocation": "23106:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23099:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$286",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 949,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 948,
													"name": "IERC20",
													"nameLocations": [
														"23099:6:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 286,
													"src": "23099:6:0"
												},
												"referencedDeclaration": 286,
												"src": "23099:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 952,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "23165:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23157:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 951,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23157:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 954,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nameLocation": "23279:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23271:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 953,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23271:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 956,
											"mutability": "mutable",
											"name": "accPowerPerShare",
											"nameLocation": "23367:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23359:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 955,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23359:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "23079:8:0",
									"nodeType": "StructDefinition",
									"scope": 2475,
									"src": "23072:375:0",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMasterChef.NFTsInfo",
									"id": 963,
									"members": [
										{
											"constant": false,
											"id": 960,
											"mutability": "mutable",
											"name": "NFT",
											"nameLocation": "23490:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 963,
											"src": "23482:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC721_$933",
												"typeString": "contract IERC721"
											},
											"typeName": {
												"id": 959,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 958,
													"name": "IERC721",
													"nameLocations": [
														"23482:7:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 933,
													"src": "23482:7:0"
												},
												"referencedDeclaration": 933,
												"src": "23482:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$933",
													"typeString": "contract IERC721"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 962,
											"mutability": "mutable",
											"name": "power",
											"nameLocation": "23512:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 963,
											"src": "23504:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 961,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23504:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFTsInfo",
									"nameLocation": "23462:8:0",
									"nodeType": "StructDefinition",
									"scope": 2475,
									"src": "23455:70:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61c1b724",
									"id": 967,
									"mutability": "mutable",
									"name": "nftsInfo",
									"nameLocation": "23551:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "23533:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
										"typeString": "struct NFTMasterChef.NFTsInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 965,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 964,
												"name": "NFTsInfo",
												"nameLocations": [
													"23533:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 963,
												"src": "23533:8:0"
											},
											"referencedDeclaration": 963,
											"src": "23533:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
												"typeString": "struct NFTMasterChef.NFTsInfo"
											}
										},
										"id": 966,
										"nodeType": "ArrayTypeName",
										"src": "23533:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage_ptr",
											"typeString": "struct NFTMasterChef.NFTsInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb3cba55",
									"id": 970,
									"mutability": "mutable",
									"name": "DDT",
									"nameLocation": "23607:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "23593:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$286",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 969,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 968,
											"name": "IERC20",
											"nameLocations": [
												"23593:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "23593:6:0"
										},
										"referencedDeclaration": 286,
										"src": "23593:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5990c569",
									"id": 972,
									"mutability": "mutable",
									"name": "PowerPerBlock",
									"nameLocation": "23672:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "23657:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 971,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23657:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8aa28550",
									"id": 975,
									"mutability": "mutable",
									"name": "BONUS_MULTIPLIER",
									"nameLocation": "23755:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "23740:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 973,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23740:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 974,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23774:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cd07e47",
									"id": 978,
									"mutability": "mutable",
									"name": "migrator",
									"nameLocation": "23901:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "23880:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMigratorChef_$927",
										"typeString": "contract IMigratorChef"
									},
									"typeName": {
										"id": 977,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 976,
											"name": "IMigratorChef",
											"nameLocations": [
												"23880:13:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 927,
											"src": "23880:13:0"
										},
										"referencedDeclaration": 927,
										"src": "23880:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMigratorChef_$927",
											"typeString": "contract IMigratorChef"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 982,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "23961:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "23943:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
										"typeString": "struct NFTMasterChef.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 980,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 979,
												"name": "PoolInfo",
												"nameLocations": [
													"23943:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 957,
												"src": "23943:8:0"
											},
											"referencedDeclaration": 957,
											"src": "23943:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
												"typeString": "struct NFTMasterChef.PoolInfo"
											}
										},
										"id": 981,
										"nodeType": "ArrayTypeName",
										"src": "23943:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr",
											"typeString": "struct NFTMasterChef.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 989,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "24081:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "24025:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo))"
									},
									"typeName": {
										"id": 988,
										"keyType": {
											"id": 983,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24033:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "24025:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo))"
										},
										"valueType": {
											"id": 987,
											"keyType": {
												"id": 984,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "24052:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "24044:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
												"typeString": "mapping(address => struct NFTMasterChef.UserInfo)"
											},
											"valueType": {
												"id": 986,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 985,
													"name": "UserInfo",
													"nameLocations": [
														"24063:8:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 947,
													"src": "24063:8:0"
												},
												"referencedDeclaration": 947,
												"src": "24063:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
													"typeString": "struct NFTMasterChef.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 992,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "24199:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "24184:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 990,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24184:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 991,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24217:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 994,
									"mutability": "mutable",
									"name": "startBlock",
									"nameLocation": "24291:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "24276:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 993,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24276:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "83e32135",
									"id": 996,
									"mutability": "mutable",
									"name": "NFTStakeAddress",
									"nameLocation": "24325:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "24310:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 995,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24310:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "22f58541",
									"id": 998,
									"mutability": "mutable",
									"name": "DDTMasterchefAddress",
									"nameLocation": "24362:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "24347:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 997,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24347:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d209db8c",
									"id": 1002,
									"mutability": "mutable",
									"name": "powerBalance",
									"nameLocation": "24426:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2475,
									"src": "24391:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1001,
										"keyType": {
											"id": 999,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24399:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24391:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1000,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24410:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
									"id": 1010,
									"name": "Deposit",
									"nameLocation": "24453:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24477:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "24461:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "24499:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "24483:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24512:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "24504:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24460:59:0"
									},
									"src": "24447:73:0"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 1018,
									"name": "Withdraw",
									"nameLocation": "24532:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24557:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "24541:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "24579:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "24563:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24592:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "24584:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24540:59:0"
									},
									"src": "24526:74:0"
								},
								{
									"anonymous": false,
									"eventSelector": "bb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595",
									"id": 1026,
									"name": "EmergencyWithdraw",
									"nameLocation": "24612:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24656:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "24640:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "24687:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "24671:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24709:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "24701:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24629:93:0"
									},
									"src": "24606:117:0"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "24835:358:0",
										"statements": [
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1036,
														"name": "DDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "24846:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1037,
														"name": "_DDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "24852:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"src": "24846:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "24846:10:0"
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1040,
														"name": "PowerPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "24867:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1041,
														"name": "_PowerPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "24883:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24867:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "24867:30:0"
											},
											{
												"expression": {
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1044,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "24908:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1045,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "24921:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24908:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "24908:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1052,
																	"name": "DDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "25025:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25055:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																{
																	"id": 1054,
																	"name": "startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "25091:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25134:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1051,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "24992:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$957_storage_ptr_$",
																	"typeString": "type(struct NFTMasterChef.PoolInfo storage pointer)"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"25016:7:0",
																"25043:10:0",
																"25074:15:0",
																"25116:16:0"
															],
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardBlock",
																"accPowerPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "24992:155:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1048,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "24978:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24987:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "24978:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$957_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTMasterChef.PoolInfo storage ref[] storage pointer,struct NFTMasterChef.PoolInfo storage ref)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24978:170:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "24978:170:0"
											},
											{
												"expression": {
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1059,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "25161:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25179:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "25161:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "25161:22:0"
											}
										]
									},
									"id": 1064,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "_DDT",
												"nameLocation": "24760:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "24753:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1028,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1027,
														"name": "IERC20",
														"nameLocations": [
															"24753:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "24753:6:0"
													},
													"referencedDeclaration": 286,
													"src": "24753:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "_PowerPerBlock",
												"nameLocation": "24783:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "24775:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "24816:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "24808:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24742:92:0"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24835:0:0"
									},
									"scope": 2475,
									"src": "24731:462:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "25274:53:0",
										"statements": [
											{
												"expression": {
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1071,
														"name": "NFTStakeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "25285:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1072,
														"name": "_NFTStakeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "25303:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25285:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "25285:34:0"
											}
										]
									},
									"functionSelector": "0ba33a58",
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1069,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1068,
												"name": "onlyOwner",
												"nameLocations": [
													"25265:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "25265:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25265:9:0"
										}
									],
									"name": "updateNFTStakeAddress",
									"nameLocation": "25210:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "_NFTStakeAddress",
												"nameLocation": "25240:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "25232:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25231:26:0"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25274:0:0"
									},
									"scope": 2475,
									"src": "25201:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "25418:63:0",
										"statements": [
											{
												"expression": {
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1083,
														"name": "DDTMasterchefAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "25429:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1084,
														"name": "_DDTMasterchefAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "25452:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25429:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "25429:44:0"
											}
										]
									},
									"functionSelector": "56b4685f",
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1081,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1080,
												"name": "onlyOwner",
												"nameLocations": [
													"25409:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "25409:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25409:9:0"
										}
									],
									"name": "updateDDTMasterchefAddress",
									"nameLocation": "25344:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "_DDTMasterchefAddress",
												"nameLocation": "25379:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "25371:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25371:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25370:31:0"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25418:0:0"
									},
									"scope": 2475,
									"src": "25335:146:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "25560:47:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1095,
														"name": "powerBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "25578:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1097,
													"indexExpression": {
														"id": 1096,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "25591:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25578:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1094,
												"id": 1098,
												"nodeType": "Return",
												"src": "25571:28:0"
											}
										]
									},
									"functionSelector": "8c51793b",
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPowerBalance",
									"nameLocation": "25498:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25522:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "25514:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25513:17:0"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "25551:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25550:9:0"
									},
									"scope": 2475,
									"src": "25489:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "25678:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1114,
																	"name": "_NFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "25750:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$933",
																		"typeString": "contract IERC721"
																	}
																},
																{
																	"id": 1115,
																	"name": "_power",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "25780:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC721_$933",
																		"typeString": "contract IERC721"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1113,
																"name": "NFTsInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "25717:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_NFTsInfo_$963_storage_ptr_$",
																	"typeString": "type(struct NFTMasterChef.NFTsInfo storage pointer)"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"25745:3:0",
																"25773:5:0"
															],
															"names": [
																"NFT",
																"power"
															],
															"nodeType": "FunctionCall",
															"src": "25717:85:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_memory_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_NFTsInfo_$963_memory_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo memory"
															}
														],
														"expression": {
															"id": 1110,
															"name": "nftsInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "25689:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
																"typeString": "struct NFTMasterChef.NFTsInfo storage ref[] storage ref"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "25698:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "25689:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage_ptr_$_t_struct$_NFTsInfo_$963_storage_$returns$__$bound_to$_t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTMasterChef.NFTsInfo storage ref[] storage pointer,struct NFTMasterChef.NFTsInfo storage ref)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25689:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "25689:124:0"
											}
										]
									},
									"functionSelector": "4ea2813c",
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1108,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1107,
												"name": "onlyOwner",
												"nameLocations": [
													"25668:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "25668:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25668:9:0"
										}
									],
									"name": "addNFT",
									"nameLocation": "25624:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "_NFT",
												"nameLocation": "25639:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "25631:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$933",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 1102,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1101,
														"name": "IERC721",
														"nameLocations": [
															"25631:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 933,
														"src": "25631:7:0"
													},
													"referencedDeclaration": 933,
													"src": "25631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$933",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "25653:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "25645:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25630:30:0"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25678:0:0"
									},
									"scope": 2475,
									"src": "25615:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "25896:49:0",
										"statements": [
											{
												"expression": {
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1129,
																"name": "nftsInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "25907:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
																	"typeString": "struct NFTMasterChef.NFTsInfo storage ref[] storage ref"
																}
															},
															"id": 1131,
															"indexExpression": {
																"id": 1130,
																"name": "level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1122,
																"src": "25916:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25907:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_storage",
																"typeString": "struct NFTMasterChef.NFTsInfo storage ref"
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "25923:5:0",
														"memberName": "power",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 962,
														"src": "25907:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1133,
														"name": "_power",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "25931:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25907:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "25907:30:0"
											}
										]
									},
									"functionSelector": "c11490cc",
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1127,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1126,
												"name": "onlyOwner",
												"nameLocations": [
													"25886:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "25886:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25886:9:0"
										}
									],
									"name": "updateNFT",
									"nameLocation": "25838:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "25856:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "25848:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "25871:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "25863:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25847:31:0"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25896:0:0"
									},
									"scope": 2475,
									"src": "25829:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "26013:1208:0",
										"statements": [
											{
												"assignments": [
													1146
												],
												"declarations": [
													{
														"constant": false,
														"id": 1146,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "26041:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "26024:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1145,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1144,
																"name": "PoolInfo",
																"nameLocations": [
																	"26024:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "26024:8:0"
															},
															"referencedDeclaration": 957,
															"src": "26024:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1150,
												"initialValue": {
													"baseExpression": {
														"id": 1147,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "26048:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1149,
													"indexExpression": {
														"id": 1148,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "26057:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26048:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26024:38:0"
											},
											{
												"assignments": [
													1153
												],
												"declarations": [
													{
														"constant": false,
														"id": 1153,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "26090:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "26073:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1152,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1151,
																"name": "UserInfo",
																"nameLocations": [
																	"26073:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "26073:8:0"
															},
															"referencedDeclaration": 947,
															"src": "26073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1160,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1154,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "26097:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1156,
														"indexExpression": {
															"id": 1155,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "26106:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "26097:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1159,
													"indexExpression": {
														"expression": {
															"id": 1157,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "26112:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26116:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "26112:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26097:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26073:50:0"
											},
											{
												"assignments": [
													1162
												],
												"declarations": [
													{
														"constant": false,
														"id": 1162,
														"mutability": "mutable",
														"name": "accPowerPerShare",
														"nameLocation": "26142:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "26134:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1161,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26134:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1165,
												"initialValue": {
													"expression": {
														"id": 1163,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "26161:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "26166:16:0",
													"memberName": "accPowerPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 956,
													"src": "26161:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26134:48:0"
											},
											{
												"assignments": [
													1167
												],
												"declarations": [
													{
														"constant": false,
														"id": 1167,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "26201:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "26193:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1166,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26193:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1176,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1173,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "26243:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26235:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1171,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26235:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26235:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1168,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "26212:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26217:7:0",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "26212:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26225:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "26212:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26212:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26193:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1177,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "26264:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26270:6:0",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "26264:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1179,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "26279:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26284:15:0",
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "26279:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "26264:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1182,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "26303:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26315:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "26303:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "26264:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "IfStatement",
												"src": "26260:354:0",
												"trueBody": {
													"id": 1222,
													"nodeType": "Block",
													"src": "26318:296:0",
													"statements": [
														{
															"assignments": [
																1187
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1187,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "26341:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1222,
																	"src": "26333:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1186,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "26333:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1194,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1189,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "26368:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "26373:15:0",
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "26368:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1191,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "26390:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "26396:6:0",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "26390:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1188,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "26354:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26354:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "26333:70:0"
														},
														{
															"assignments": [
																1196
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1196,
																	"mutability": "mutable",
																	"name": "PowerReward",
																	"nameLocation": "26426:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1222,
																	"src": "26418:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1195,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "26418:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1208,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1206,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "26495:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1202,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1146,
																					"src": "26474:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																						"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																					}
																				},
																				"id": 1203,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "26479:10:0",
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 952,
																				"src": "26474:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1199,
																						"name": "PowerPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 972,
																						"src": "26455:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1197,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1187,
																						"src": "26440:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "26451:3:0",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "26440:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "26440:29:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "26470:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "26440:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26440:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26491:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "26440:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26440:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "26418:93:0"
														},
														{
															"expression": {
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1209,
																	"name": "accPowerPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "26526:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1217,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1167,
																					"src": "26592:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1214,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "26582:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1212,
																							"name": "PowerReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1196,
																							"src": "26566:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1213,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "26578:3:0",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "26566:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1215,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26566:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1216,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "26588:3:0",
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "26566:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26566:35:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1210,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1162,
																			"src": "26545:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "26562:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "26545:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26545:57:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26526:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1221,
															"nodeType": "ExpressionStatement",
															"src": "26526:76:0"
														}
													]
												}
											},
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "26632:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "26624:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1224,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26624:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1238,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1235,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "26690:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26695:10:0",
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "26690:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26680:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1229,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1162,
																			"src": "26658:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1226,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1153,
																				"src": "26642:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "26647:6:0",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "26642:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "26654:3:0",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "26642:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26642:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26676:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "26642:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26642:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26686:3:0",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "26642:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26642:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26624:82:0"
											},
											{
												"assignments": [
													1241
												],
												"declarations": [
													{
														"constant": false,
														"id": 1241,
														"mutability": "mutable",
														"name": "nft",
														"nameLocation": "26734:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "26717:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
															"typeString": "struct NFTMasterChef.NFTsInfo"
														},
														"typeName": {
															"id": 1240,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1239,
																"name": "NFTsInfo",
																"nameLocations": [
																	"26717:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 963,
																"src": "26717:8:0"
															},
															"referencedDeclaration": 963,
															"src": "26717:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1245,
												"initialValue": {
													"baseExpression": {
														"id": 1242,
														"name": "nftsInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "26740:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.NFTsInfo storage ref[] storage ref"
														}
													},
													"id": 1244,
													"indexExpression": {
														"id": 1243,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "26749:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26740:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTsInfo_$963_storage",
														"typeString": "struct NFTMasterChef.NFTsInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26717:38:0"
											},
											{
												"assignments": [
													1247
												],
												"declarations": [
													{
														"constant": false,
														"id": 1247,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "26774:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "26766:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1246,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26766:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1255,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1250,
																"name": "powerBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "26794:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1253,
															"indexExpression": {
																"expression": {
																	"id": 1251,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "26807:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26811:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "26807:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26794:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1248,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "26782:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26790:3:0",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "26782:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26782:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26766:53:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1256,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "26833:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1257,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "26841:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26845:5:0",
														"memberName": "power",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 962,
														"src": "26841:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26833:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1280,
												"nodeType": "IfStatement",
												"src": "26830:188:0",
												"trueBody": {
													"id": 1279,
													"nodeType": "Block",
													"src": "26851:167:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1260,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "26869:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26877:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "26869:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1268,
															"nodeType": "IfStatement",
															"src": "26866:63:0",
															"trueBody": {
																"id": 1267,
																"nodeType": "Block",
																"src": "26879:50:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1264,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26911:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1263,
																				"name": "leaveStaking",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2405,
																				"src": "26898:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26898:15:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1266,
																		"nodeType": "ExpressionStatement",
																		"src": "26898:15:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1269,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "26946:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26954:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "26946:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1278,
															"nodeType": "IfStatement",
															"src": "26943:64:0",
															"trueBody": {
																"id": 1277,
																"nodeType": "Block",
																"src": "26956:51:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1273,
																					"name": "_pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "26984:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1274,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26989:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1272,
																				"name": "withdraw",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2004,
																				"src": "26975:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26975:16:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1276,
																		"nodeType": "ExpressionStatement",
																		"src": "26975:16:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1282,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "27036:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																		"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
																	}
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27040:5:0",
																"memberName": "power",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 962,
																"src": "27036:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"baseExpression": {
																	"id": 1284,
																	"name": "powerBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "27048:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1287,
																"indexExpression": {
																	"expression": {
																		"id": 1285,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "27061:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27065:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "27061:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27048:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27036:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f776572206973206e6f7420656e6f756768",
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27074:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
																"typeString": "literal_string \"Power is not enough\""
															},
															"value": "Power is not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
																"typeString": "literal_string \"Power is not enough\""
															}
														],
														"id": 1281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27028:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27028:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "27028:68:0"
											},
											{
												"expression": {
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1292,
															"name": "powerBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "27107:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1295,
														"indexExpression": {
															"expression": {
																"id": 1293,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "27120:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27124:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "27120:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27107:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1301,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "27163:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																		"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27167:5:0",
																"memberName": "power",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 962,
																"src": "27163:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1296,
																	"name": "powerBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "27134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1299,
																"indexExpression": {
																	"expression": {
																		"id": 1297,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "27147:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27151:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "27147:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27134:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27159:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "27134:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27134:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27107:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "27107:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1311,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "27202:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27206:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "27202:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1306,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "27184:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																	"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
																}
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27188:3:0",
															"memberName": "NFT",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 960,
															"src": "27184:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$933",
																"typeString": "contract IERC721"
															}
														},
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "27192:9:0",
														"memberName": "createNFT",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 932,
														"src": "27184:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27184:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "27184:29:0"
											}
										]
									},
									"functionSelector": "1d5fbd87",
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimNFTReward",
									"nameLocation": "25962:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "25985:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "25977:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "26000:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "25992:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25976:29:0"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26013:0:0"
									},
									"scope": 2475,
									"src": "25953:1268:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "27298:54:0",
										"statements": [
											{
												"expression": {
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1323,
														"name": "BONUS_MULTIPLIER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "27309:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1324,
														"name": "multiplierNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "27328:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27309:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "27309:35:0"
											}
										]
									},
									"functionSelector": "5ffe6146",
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1321,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1320,
												"name": "onlyOwner",
												"nameLocations": [
													"27288:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "27288:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27288:9:0"
										}
									],
									"name": "updateMultiplier",
									"nameLocation": "27238:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "multiplierNumber",
												"nameLocation": "27263:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "27255:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27254:26:0"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27298:0:0"
									},
									"scope": 2475,
									"src": "27229:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "27414:41:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1333,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "27432:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "27441:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "27432:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1332,
												"id": 1335,
												"nodeType": "Return",
												"src": "27425:22:0"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "27369:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27379:2:0"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "27405:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27404:9:0"
									},
									"scope": 2475,
									"src": "27360:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "27712:472:0",
										"statements": [
											{
												"condition": {
													"id": 1349,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1344,
													"src": "27727:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "27723:61:0",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "27740:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1350,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "27755:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27755:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1352,
															"nodeType": "ExpressionStatement",
															"src": "27755:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													1356
												],
												"declarations": [
													{
														"constant": false,
														"id": 1356,
														"mutability": "mutable",
														"name": "lastRewardBlock",
														"nameLocation": "27802:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1384,
														"src": "27794:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27794:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1365,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1357,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "27820:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27826:6:0",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "27820:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1359,
															"name": "startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "27835:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27820:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1363,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "27863:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "27820:53:0",
													"trueExpression": {
														"expression": {
															"id": 1361,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "27848:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "27854:6:0",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "27848:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27794:79:0"
											},
											{
												"expression": {
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1366,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "27884:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1369,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "27922:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1367,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "27902:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27918:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "27902:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27902:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27884:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "27884:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1377,
																	"name": "_lpToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "28010:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1378,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1339,
																	"src": "28049:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1379,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1356,
																	"src": "28096:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28148:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1376,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "27973:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$957_storage_ptr_$",
																	"typeString": "type(struct NFTMasterChef.PoolInfo storage pointer)"
																}
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"28001:7:0",
																"28037:10:0",
																"28079:15:0",
																"28130:16:0"
															],
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardBlock",
																"accPowerPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "27973:192:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1373,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "27945:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "27954:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "27945:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$957_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTMasterChef.PoolInfo storage ref[] storage pointer,struct NFTMasterChef.PoolInfo storage ref)"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27945:231:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "27945:231:0"
											}
										]
									},
									"functionSelector": "1eaaa045",
									"id": 1385,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1347,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1346,
												"name": "onlyOwner",
												"nameLocations": [
													"27702:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "27702:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27702:9:0"
										}
									],
									"name": "add",
									"nameLocation": "27633:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "27646:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "27638:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "_lpToken",
												"nameLocation": "27666:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "27659:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1340,
														"name": "IERC20",
														"nameLocations": [
															"27659:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "27659:6:0"
													},
													"referencedDeclaration": 286,
													"src": "27659:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "27681:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "27676:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27676:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27636:58:0"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27712:0:0"
									},
									"scope": 2475,
									"src": "27624:560:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "28365:221:0",
										"statements": [
											{
												"condition": {
													"id": 1396,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1391,
													"src": "28380:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1401,
												"nodeType": "IfStatement",
												"src": "28376:61:0",
												"trueBody": {
													"id": 1400,
													"nodeType": "Block",
													"src": "28393:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1397,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "28408:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28408:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1399,
															"nodeType": "ExpressionStatement",
															"src": "28408:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1402,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "28447:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1411,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "28516:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1405,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 982,
																				"src": "28485:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																					"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1407,
																			"indexExpression": {
																				"id": 1406,
																				"name": "_pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1387,
																				"src": "28494:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "28485:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
																				"typeString": "struct NFTMasterChef.PoolInfo storage ref"
																			}
																		},
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "28500:10:0",
																		"memberName": "allocPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 952,
																		"src": "28485:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1403,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "28465:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "28481:3:0",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "28465:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28465:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28512:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "28465:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28465:63:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28447:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "28447:81:0"
											},
											{
												"expression": {
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1415,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "28539:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																	"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1417,
															"indexExpression": {
																"id": 1416,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1387,
																"src": "28548:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28539:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
																"typeString": "struct NFTMasterChef.PoolInfo storage ref"
															}
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "28554:10:0",
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 952,
														"src": "28539:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1419,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "28567:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28539:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "28539:39:0"
											}
										]
									},
									"functionSelector": "64482f79",
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1394,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1393,
												"name": "onlyOwner",
												"nameLocations": [
													"28355:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "28355:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28355:9:0"
										}
									],
									"name": "set",
									"nameLocation": "28290:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "28303:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "28295:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "28317:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "28309:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "28335:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "28330:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28330:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28293:54:0"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28365:0:0"
									},
									"scope": 2475,
									"src": "28281:305:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1435,
										"nodeType": "Block",
										"src": "28725:39:0",
										"statements": [
											{
												"expression": {
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1431,
														"name": "migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "28736:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1432,
														"name": "_migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "28747:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"src": "28736:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "28736:20:0"
											}
										]
									},
									"functionSelector": "23cf3118",
									"id": 1436,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1429,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1428,
												"name": "onlyOwner",
												"nameLocations": [
													"28715:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "28715:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28715:9:0"
										}
									],
									"name": "setMigrator",
									"nameLocation": "28671:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "_migrator",
												"nameLocation": "28697:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "28683:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMigratorChef_$927",
													"typeString": "contract IMigratorChef"
												},
												"typeName": {
													"id": 1425,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1424,
														"name": "IMigratorChef",
														"nameLocations": [
															"28683:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 927,
														"src": "28683:13:0"
													},
													"referencedDeclaration": 927,
													"src": "28683:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28682:25:0"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28725:0:0"
									},
									"scope": 2475,
									"src": "28662:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "28925:453:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1444,
																		"name": "migrator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "28952:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMigratorChef_$927",
																			"typeString": "contract IMigratorChef"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IMigratorChef_$927",
																			"typeString": "contract IMigratorChef"
																		}
																	],
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28944:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1442,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28944:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28944:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28973:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28965:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1446,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28965:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28965:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28944:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6967726174653a206e6f206d69677261746f72",
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28977:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
																"typeString": "literal_string \"migrate: no migrator\""
															},
															"value": "migrate: no migrator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
																"typeString": "literal_string \"migrate: no migrator\""
															}
														],
														"id": 1441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28936:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28936:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "28936:64:0"
											},
											{
												"assignments": [
													1456
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "29028:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "29011:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1455,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1454,
																"name": "PoolInfo",
																"nameLocations": [
																	"29011:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "29011:8:0"
															},
															"referencedDeclaration": 957,
															"src": "29011:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"baseExpression": {
														"id": 1457,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "29035:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1459,
													"indexExpression": {
														"id": 1458,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "29044:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29035:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29011:38:0"
											},
											{
												"assignments": [
													1463
												],
												"declarations": [
													{
														"constant": false,
														"id": 1463,
														"mutability": "mutable",
														"name": "lpToken",
														"nameLocation": "29067:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "29060:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1462,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1461,
																"name": "IERC20",
																"nameLocations": [
																	"29060:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 286,
																"src": "29060:6:0"
															},
															"referencedDeclaration": 286,
															"src": "29060:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1466,
												"initialValue": {
													"expression": {
														"id": 1464,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "29077:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "29082:7:0",
													"memberName": "lpToken",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 950,
													"src": "29077:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29060:29:0"
											},
											{
												"assignments": [
													1468
												],
												"declarations": [
													{
														"constant": false,
														"id": 1468,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "29108:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "29100:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1467,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29100:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1476,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1473,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "29140:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29132:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1471,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29132:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29132:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1469,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "29114:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29122:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "29114:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29114:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29100:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1482,
																	"name": "migrator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "29185:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMigratorChef_$927",
																		"typeString": "contract IMigratorChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IMigratorChef_$927",
																		"typeString": "contract IMigratorChef"
																	}
																],
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29177:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1480,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29177:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29177:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1484,
															"name": "bal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "29196:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1477,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "29157:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29165:11:0",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 674,
														"src": "29157:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29157:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "29157:43:0"
											},
											{
												"assignments": [
													1489
												],
												"declarations": [
													{
														"constant": false,
														"id": 1489,
														"mutability": "mutable",
														"name": "newLpToken",
														"nameLocation": "29218:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "29211:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1488,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1487,
																"name": "IERC20",
																"nameLocations": [
																	"29211:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 286,
																"src": "29211:6:0"
															},
															"referencedDeclaration": 286,
															"src": "29211:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1494,
												"initialValue": {
													"arguments": [
														{
															"id": 1492,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "29248:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														],
														"expression": {
															"id": 1490,
															"name": "migrator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "29231:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMigratorChef_$927",
																"typeString": "contract IMigratorChef"
															}
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29240:7:0",
														"memberName": "migrate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 926,
														"src": "29231:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$286_$returns$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20) external returns (contract IERC20)"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29231:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29211:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1496,
																"name": "bal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "29275:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1501,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "29311:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																					"typeString": "contract NFTMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																					"typeString": "contract NFTMasterChef"
																				}
																			],
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29303:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "29303:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29303:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1497,
																		"name": "newLpToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "29282:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "29293:9:0",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 208,
																	"src": "29282:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29282:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29275:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6967726174653a20626164",
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29319:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
																"typeString": "literal_string \"migrate: bad\""
															},
															"value": "migrate: bad"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
																"typeString": "literal_string \"migrate: bad\""
															}
														],
														"id": 1495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29267:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29267:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "ExpressionStatement",
												"src": "29267:67:0"
											},
											{
												"expression": {
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1508,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "29345:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1510,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "29350:7:0",
														"memberName": "lpToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "29345:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1511,
														"name": "newLpToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "29360:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"src": "29345:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"id": 1513,
												"nodeType": "ExpressionStatement",
												"src": "29345:25:0"
											}
										]
									},
									"functionSelector": "454b0608",
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nameLocation": "28896:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "28912:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "28904:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28903:14:0"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28925:0:0"
									},
									"scope": 2475,
									"src": "28887:491:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "29535:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1529,
															"name": "BONUS_MULTIPLIER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "29573:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1526,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "29562:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1524,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "29554:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "29558:3:0",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "29554:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29554:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29569:3:0",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 107,
														"src": "29554:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29554:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1523,
												"id": 1531,
												"nodeType": "Return",
												"src": "29547:43:0"
											}
										]
									},
									"functionSelector": "8dbb1e3a",
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "29463:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "29485:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "29477:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "29500:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "29492:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29476:28:0"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "29526:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29525:9:0"
									},
									"scope": 2475,
									"src": "29454:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "29745:685:0",
										"statements": [
											{
												"assignments": [
													1544
												],
												"declarations": [
													{
														"constant": false,
														"id": 1544,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "29773:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "29756:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1543,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1542,
																"name": "PoolInfo",
																"nameLocations": [
																	"29756:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "29756:8:0"
															},
															"referencedDeclaration": 957,
															"src": "29756:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1548,
												"initialValue": {
													"baseExpression": {
														"id": 1545,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "29780:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1547,
													"indexExpression": {
														"id": 1546,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "29789:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29780:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29756:38:0"
											},
											{
												"assignments": [
													1551
												],
												"declarations": [
													{
														"constant": false,
														"id": 1551,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "29822:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "29805:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1550,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1549,
																"name": "UserInfo",
																"nameLocations": [
																	"29805:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "29805:8:0"
															},
															"referencedDeclaration": 947,
															"src": "29805:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1557,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1552,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "29829:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1554,
														"indexExpression": {
															"id": 1553,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "29838:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "29829:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1556,
													"indexExpression": {
														"id": 1555,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1537,
														"src": "29844:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29829:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29805:45:0"
											},
											{
												"assignments": [
													1559
												],
												"declarations": [
													{
														"constant": false,
														"id": 1559,
														"mutability": "mutable",
														"name": "accPowerPerShare",
														"nameLocation": "29869:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "29861:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1558,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29861:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1562,
												"initialValue": {
													"expression": {
														"id": 1560,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "29888:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "29893:16:0",
													"memberName": "accPowerPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 956,
													"src": "29888:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29861:48:0"
											},
											{
												"assignments": [
													1564
												],
												"declarations": [
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "29928:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "29920:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1573,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1570,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "29970:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29962:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1568,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29962:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29962:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1565,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "29939:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29944:7:0",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "29939:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29952:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "29939:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29939:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29920:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1574,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "29991:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29997:6:0",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "29991:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1576,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "30006:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1577,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30011:15:0",
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "30006:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29991:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1579,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "30030:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30042:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "30030:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "29991:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1620,
												"nodeType": "IfStatement",
												"src": "29987:354:0",
												"trueBody": {
													"id": 1619,
													"nodeType": "Block",
													"src": "30045:296:0",
													"statements": [
														{
															"assignments": [
																1584
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1584,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "30068:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1619,
																	"src": "30060:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1583,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30060:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1591,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1586,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "30095:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1587,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "30100:15:0",
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "30095:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1588,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "30117:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "30123:6:0",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "30117:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1585,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "30081:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30081:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30060:70:0"
														},
														{
															"assignments": [
																1593
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1593,
																	"mutability": "mutable",
																	"name": "PowerReward",
																	"nameLocation": "30153:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1619,
																	"src": "30145:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1592,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30145:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1605,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1603,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "30222:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1599,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1544,
																					"src": "30201:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																						"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																					}
																				},
																				"id": 1600,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "30206:10:0",
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 952,
																				"src": "30201:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1596,
																						"name": "PowerPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 972,
																						"src": "30182:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1594,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1584,
																						"src": "30167:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1595,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "30178:3:0",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "30167:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "30167:29:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "30197:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "30167:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30167:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "30218:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "30167:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30167:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30145:93:0"
														},
														{
															"expression": {
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1606,
																	"name": "accPowerPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1559,
																	"src": "30253:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1614,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1564,
																					"src": "30319:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1611,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "30309:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1609,
																							"name": "PowerReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1593,
																							"src": "30293:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1610,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "30305:3:0",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "30293:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1612,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "30293:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "30315:3:0",
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "30293:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30293:35:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1607,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1559,
																			"src": "30272:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "30289:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "30272:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30272:57:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30253:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1618,
															"nodeType": "ExpressionStatement",
															"src": "30253:76:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1630,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1551,
																"src": "30406:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30411:10:0",
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "30406:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30396:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1624,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1559,
																			"src": "30374:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1621,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1551,
																				"src": "30358:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "30363:6:0",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "30358:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "30370:3:0",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "30358:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30358:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30392:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "30358:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30358:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "30402:3:0",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "30358:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30358:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1541,
												"id": 1633,
												"nodeType": "Return",
												"src": "30351:71:0"
											}
										]
									},
									"functionSelector": "f3239ab5",
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingPower",
									"nameLocation": "29672:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "29693:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "29685:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "29707:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "29699:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29684:29:0"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "29737:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29736:9:0"
									},
									"scope": 2475,
									"src": "29663:767:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "30547:146:0",
										"statements": [
											{
												"assignments": [
													1639
												],
												"declarations": [
													{
														"constant": false,
														"id": 1639,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "30566:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1659,
														"src": "30558:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30558:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1642,
												"initialValue": {
													"expression": {
														"id": 1640,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "30575:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "30584:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "30575:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30558:32:0"
											},
											{
												"body": {
													"id": 1657,
													"nodeType": "Block",
													"src": "30644:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1654,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "30670:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1653,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "30659:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30659:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1656,
															"nodeType": "ExpressionStatement",
															"src": "30659:15:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1647,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "30623:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1648,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "30629:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30623:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1658,
												"initializationExpression": {
													"assignments": [
														1644
													],
													"declarations": [
														{
															"constant": false,
															"id": 1644,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "30614:3:0",
															"nodeType": "VariableDeclaration",
															"scope": 1658,
															"src": "30606:11:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1643,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "30606:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1646,
													"initialValue": {
														"hexValue": "30",
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30620:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "30606:15:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "30637:5:0",
														"subExpression": {
															"id": 1650,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "30639:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1652,
													"nodeType": "ExpressionStatement",
													"src": "30637:5:0"
												},
												"nodeType": "ForStatement",
												"src": "30601:85:0"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "30522:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30537:2:0"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30547:0:0"
									},
									"scope": 2475,
									"src": "30513:180:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "30810:649:0",
										"statements": [
											{
												"assignments": [
													1667
												],
												"declarations": [
													{
														"constant": false,
														"id": 1667,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "30838:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1750,
														"src": "30821:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1666,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1665,
																"name": "PoolInfo",
																"nameLocations": [
																	"30821:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "30821:8:0"
															},
															"referencedDeclaration": 957,
															"src": "30821:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1671,
												"initialValue": {
													"baseExpression": {
														"id": 1668,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "30845:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1670,
													"indexExpression": {
														"id": 1669,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "30854:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30845:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30821:38:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1672,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "30874:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "30880:6:0",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "30874:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1674,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "30890:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1675,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "30895:15:0",
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "30890:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30874:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1679,
												"nodeType": "IfStatement",
												"src": "30870:75:0",
												"trueBody": {
													"id": 1678,
													"nodeType": "Block",
													"src": "30912:33:0",
													"statements": [
														{
															"functionReturnParameters": 1664,
															"id": 1677,
															"nodeType": "Return",
															"src": "30927:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1681
												],
												"declarations": [
													{
														"constant": false,
														"id": 1681,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "30963:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1750,
														"src": "30955:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1680,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30955:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1690,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1687,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "31005:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30997:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1685,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30997:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30997:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1682,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "30974:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30979:7:0",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "30974:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "30987:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "30974:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30974:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30955:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1691,
														"name": "lpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "31026:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31038:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31026:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1703,
												"nodeType": "IfStatement",
												"src": "31022:102:0",
												"trueBody": {
													"id": 1702,
													"nodeType": "Block",
													"src": "31041:83:0",
													"statements": [
														{
															"expression": {
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1694,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "31056:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																			"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																		}
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "31061:15:0",
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 954,
																	"src": "31056:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1697,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "31079:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31085:6:0",
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "31079:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31056:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1700,
															"nodeType": "ExpressionStatement",
															"src": "31056:35:0"
														},
														{
															"functionReturnParameters": 1664,
															"id": 1701,
															"nodeType": "Return",
															"src": "31106:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1705
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "31142:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1750,
														"src": "31134:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31134:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1712,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1707,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "31169:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31174:15:0",
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "31169:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1709,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "31191:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31197:6:0",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "31191:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1706,
														"name": "getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "31155:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31155:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31134:70:0"
											},
											{
												"assignments": [
													1714
												],
												"declarations": [
													{
														"constant": false,
														"id": 1714,
														"mutability": "mutable",
														"name": "PowerReward",
														"nameLocation": "31223:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1750,
														"src": "31215:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1713,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31215:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1726,
												"initialValue": {
													"arguments": [
														{
															"id": 1724,
															"name": "totalAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "31292:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1720,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "31271:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																			"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																		}
																	},
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31276:10:0",
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 952,
																	"src": "31271:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1717,
																			"name": "PowerPerBlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 972,
																			"src": "31252:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1715,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "31237:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "31248:3:0",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "31237:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31237:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31267:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 107,
																"src": "31237:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31237:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31288:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "31237:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31237:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31215:93:0"
											},
											{
												"expression": {
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1727,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "31319:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1729,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "31324:16:0",
														"memberName": "accPowerPerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 956,
														"src": "31319:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1738,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "31395:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31385:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"id": 1733,
																				"name": "PowerReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1714,
																				"src": "31369:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "31381:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "31369:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31369:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31391:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "31369:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31369:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1730,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "31343:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																		"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																	}
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31348:16:0",
																"memberName": "accPowerPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 956,
																"src": "31343:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31365:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "31343:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31343:62:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31319:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "31319:86:0"
											},
											{
												"expression": {
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1743,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "31416:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1745,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "31421:15:0",
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "31416:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1746,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31439:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31445:6:0",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "31439:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31416:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "31416:35:0"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "30778:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "30797:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "30789:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30788:14:0"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30810:0:0"
									},
									"scope": 2475,
									"src": "30769:690:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "31584:788:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1759,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1753,
																"src": "31604:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31612:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31604:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6465706f73697420506f776572206279207374616b696e67",
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31615:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
																"typeString": "literal_string \"deposit Power by staking\""
															},
															"value": "deposit Power by staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
																"typeString": "literal_string \"deposit Power by staking\""
															}
														],
														"id": 1758,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31595:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31595:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "31595:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1766,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1755,
																"src": "31661:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31671:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31661:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206973207a65726f",
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31674:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															},
															"value": "Amount is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															}
														],
														"id": 1765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31653:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31653:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "31653:38:0"
											},
											{
												"assignments": [
													1774
												],
												"declarations": [
													{
														"constant": false,
														"id": 1774,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "31721:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1881,
														"src": "31704:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1773,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1772,
																"name": "PoolInfo",
																"nameLocations": [
																	"31704:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "31704:8:0"
															},
															"referencedDeclaration": 957,
															"src": "31704:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1778,
												"initialValue": {
													"baseExpression": {
														"id": 1775,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "31728:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1777,
													"indexExpression": {
														"id": 1776,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "31737:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31728:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31704:38:0"
											},
											{
												"assignments": [
													1781
												],
												"declarations": [
													{
														"constant": false,
														"id": 1781,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "31770:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1881,
														"src": "31753:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1780,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1779,
																"name": "UserInfo",
																"nameLocations": [
																	"31753:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "31753:8:0"
															},
															"referencedDeclaration": 947,
															"src": "31753:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1788,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1782,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "31777:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1784,
														"indexExpression": {
															"id": 1783,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "31786:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31777:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1787,
													"indexExpression": {
														"expression": {
															"id": 1785,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "31792:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31796:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "31792:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31777:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31753:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1790,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "31825:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1789,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "31814:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31814:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "31814:16:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1793,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "31845:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31850:6:0",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "31845:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1795,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31859:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31845:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1832,
												"nodeType": "IfStatement",
												"src": "31841:263:0",
												"trueBody": {
													"id": 1831,
													"nodeType": "Block",
													"src": "31862:242:0",
													"statements": [
														{
															"assignments": [
																1798
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1798,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "31885:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1831,
																	"src": "31877:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1797,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31877:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1812,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1809,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1781,
																			"src": "31948:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "31953:10:0",
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "31948:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31938:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1802,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1774,
																							"src": "31911:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																								"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																							}
																						},
																						"id": 1803,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "31916:16:0",
																						"memberName": "accPowerPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 956,
																						"src": "31911:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1799,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1781,
																							"src": "31895:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																								"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 1800,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "31900:6:0",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 944,
																						"src": "31895:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1801,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "31907:3:0",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "31895:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1804,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31895:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "31934:3:0",
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "31895:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31895:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31944:3:0",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "31895:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31895:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "31877:87:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1813,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1798,
																	"src": "31982:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31992:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "31982:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1830,
															"nodeType": "IfStatement",
															"src": "31979:114:0",
															"trueBody": {
																"id": 1829,
																"nodeType": "Block",
																"src": "31994:99:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1816,
																					"name": "powerBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "32013:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1819,
																				"indexExpression": {
																					"expression": {
																						"id": 1817,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "32026:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1818,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "32030:6:0",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "32026:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "32013:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1825,
																						"name": "pending",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1798,
																						"src": "32069:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"id": 1820,
																							"name": "powerBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1002,
																							"src": "32040:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1823,
																						"indexExpression": {
																							"expression": {
																								"id": 1821,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "32053:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 1822,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "32057:6:0",
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "32053:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "32040:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1824,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "32065:3:0",
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "32040:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "32040:37:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32013:64:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1828,
																		"nodeType": "ExpressionStatement",
																		"src": "32013:64:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1840,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "32152:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "32156:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "32152:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32144:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1838,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32144:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32144:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1845,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "32173:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32165:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1843,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32165:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32165:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1847,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "32180:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1833,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1774,
																"src": "32114:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "32119:7:0",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "32114:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "32127:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 630,
														"src": "32114:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32114:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1849,
												"nodeType": "ExpressionStatement",
												"src": "32114:74:0"
											},
											{
												"expression": {
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1850,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "32199:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1852,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "32204:6:0",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "32199:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1856,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1755,
																"src": "32229:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1853,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "32213:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1854,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32218:6:0",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "32213:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "32225:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "32213:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32213:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32199:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "32199:38:0"
											},
											{
												"expression": {
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1860,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "32248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1862,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "32253:10:0",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "32248:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32309:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1866,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1774,
																			"src": "32282:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "32287:16:0",
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "32282:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1863,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1781,
																			"src": "32266:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "32271:6:0",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "32266:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "32278:3:0",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "32266:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32266:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "32305:3:0",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "32266:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32266:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32248:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1873,
												"nodeType": "ExpressionStatement",
												"src": "32248:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1875,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32338:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "32342:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32338:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1877,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "32350:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1878,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "32356:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1874,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "32330:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32330:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1880,
												"nodeType": "EmitStatement",
												"src": "32325:39:0"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "31538:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "31554:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "31546:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "31568:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "31560:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31545:31:0"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31584:0:0"
									},
									"scope": 2475,
									"src": "31529:843:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2003,
										"nodeType": "Block",
										"src": "32480:731:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1890,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "32502:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32510:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32502:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "776974686472617720506f77657220627920756e7374616b696e67",
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32513:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
																"typeString": "literal_string \"withdraw Power by unstaking\""
															},
															"value": "withdraw Power by unstaking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
																"typeString": "literal_string \"withdraw Power by unstaking\""
															}
														],
														"id": 1889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32493:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1895,
												"nodeType": "ExpressionStatement",
												"src": "32493:50:0"
											},
											{
												"assignments": [
													1898
												],
												"declarations": [
													{
														"constant": false,
														"id": 1898,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "32573:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2003,
														"src": "32556:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1897,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1896,
																"name": "PoolInfo",
																"nameLocations": [
																	"32556:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "32556:8:0"
															},
															"referencedDeclaration": 957,
															"src": "32556:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1902,
												"initialValue": {
													"baseExpression": {
														"id": 1899,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "32580:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1901,
													"indexExpression": {
														"id": 1900,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "32589:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32580:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32556:38:0"
											},
											{
												"assignments": [
													1905
												],
												"declarations": [
													{
														"constant": false,
														"id": 1905,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "32622:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2003,
														"src": "32605:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1904,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1903,
																"name": "UserInfo",
																"nameLocations": [
																	"32605:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "32605:8:0"
															},
															"referencedDeclaration": 947,
															"src": "32605:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1912,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1906,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "32629:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1908,
														"indexExpression": {
															"id": 1907,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "32638:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32629:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1911,
													"indexExpression": {
														"expression": {
															"id": 1909,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "32644:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "32648:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "32644:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32629:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32605:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1914,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1905,
																	"src": "32674:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1915,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32679:6:0",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "32674:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1916,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1886,
																"src": "32689:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32674:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32698:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32666:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32666:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1920,
												"nodeType": "ExpressionStatement",
												"src": "32666:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1922,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "32741:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1921,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "32730:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32730:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1924,
												"nodeType": "ExpressionStatement",
												"src": "32730:16:0"
											},
											{
												"assignments": [
													1926
												],
												"declarations": [
													{
														"constant": false,
														"id": 1926,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "32765:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2003,
														"src": "32757:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1925,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1940,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1937,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1905,
																"src": "32828:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "32833:10:0",
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "32828:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32818:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1930,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1898,
																				"src": "32791:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																					"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																				}
																			},
																			"id": 1931,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "32796:16:0",
																			"memberName": "accPowerPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 956,
																			"src": "32791:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1927,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1905,
																				"src": "32775:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1928,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "32780:6:0",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "32775:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "32787:3:0",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "32775:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32775:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32814:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "32775:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32775:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "32824:3:0",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "32775:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32775:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32757:87:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1941,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1926,
														"src": "32858:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32868:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32858:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1958,
												"nodeType": "IfStatement",
												"src": "32855:106:0",
												"trueBody": {
													"id": 1957,
													"nodeType": "Block",
													"src": "32870:91:0",
													"statements": [
														{
															"expression": {
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1944,
																		"name": "powerBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "32885:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1947,
																	"indexExpression": {
																		"expression": {
																			"id": 1945,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "32898:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "32902:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "32898:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "32885:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1953,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1926,
																			"src": "32941:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1948,
																				"name": "powerBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "32912:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1951,
																			"indexExpression": {
																				"expression": {
																					"id": 1949,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "32925:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "32929:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "32925:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "32912:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "32937:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "32912:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32912:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32885:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1956,
															"nodeType": "ExpressionStatement",
															"src": "32885:64:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1959,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "32971:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1961,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "32976:6:0",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "32971:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1965,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1886,
																"src": "33001:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1962,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1905,
																	"src": "32985:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32990:6:0",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "32985:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "32997:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "32985:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32985:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32971:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1968,
												"nodeType": "ExpressionStatement",
												"src": "32971:38:0"
											},
											{
												"expression": {
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1969,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "33020:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1971,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "33025:10:0",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "33020:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33081:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1975,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1898,
																			"src": "33054:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1976,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "33059:16:0",
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "33054:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1972,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1905,
																			"src": "33038:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1973,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "33043:6:0",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "33038:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "33050:3:0",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "33038:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33038:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "33077:3:0",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "33038:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33038:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33020:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "33020:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1990,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "33131:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "33135:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "33131:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33123:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1988,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33123:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33123:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1993,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "33144:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1983,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "33097:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "33102:7:0",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "33097:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33110:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 604,
														"src": "33097:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33097:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1995,
												"nodeType": "ExpressionStatement",
												"src": "33097:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1997,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33177:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "33181:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33177:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1999,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "33189:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2000,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "33195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1996,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "33168:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33168:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2002,
												"nodeType": "EmitStatement",
												"src": "33163:40:0"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 2004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "32433:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "32450:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "32442:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "32464:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "32456:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32441:31:0"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32480:0:0"
									},
									"scope": 2475,
									"src": "32424:787:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2139,
										"nodeType": "Block",
										"src": "33310:802:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2010,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "33329:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33339:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33329:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206973207a65726f",
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33342:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															},
															"value": "Amount is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															}
														],
														"id": 2009,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33321:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33321:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2015,
												"nodeType": "ExpressionStatement",
												"src": "33321:38:0"
											},
											{
												"assignments": [
													2018
												],
												"declarations": [
													{
														"constant": false,
														"id": 2018,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "33389:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2139,
														"src": "33372:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 2017,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2016,
																"name": "PoolInfo",
																"nameLocations": [
																	"33372:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "33372:8:0"
															},
															"referencedDeclaration": 957,
															"src": "33372:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2022,
												"initialValue": {
													"baseExpression": {
														"id": 2019,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "33396:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2021,
													"indexExpression": {
														"hexValue": "30",
														"id": 2020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33405:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33396:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33372:35:0"
											},
											{
												"assignments": [
													2025
												],
												"declarations": [
													{
														"constant": false,
														"id": 2025,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "33435:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2139,
														"src": "33418:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 2024,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2023,
																"name": "UserInfo",
																"nameLocations": [
																	"33418:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "33418:8:0"
															},
															"referencedDeclaration": 947,
															"src": "33418:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2035,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2026,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "33442:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2028,
														"indexExpression": {
															"hexValue": "30",
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33451:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "33442:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2034,
													"indexExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 2031,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "33462:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33466:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "33462:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2029,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33454:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33454:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33442:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33418:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33506:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2036,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "33495:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33495:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2039,
												"nodeType": "ExpressionStatement",
												"src": "33495:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2040,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "33523:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2041,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33528:6:0",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "33523:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33537:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33523:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2085,
												"nodeType": "IfStatement",
												"src": "33519:282:0",
												"trueBody": {
													"id": 2084,
													"nodeType": "Block",
													"src": "33540:261:0",
													"statements": [
														{
															"assignments": [
																2045
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2045,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "33563:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2084,
																	"src": "33555:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2044,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33555:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2059,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2056,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2025,
																			"src": "33626:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2057,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "33631:10:0",
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "33626:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 2053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33616:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2049,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2018,
																							"src": "33589:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																								"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																							}
																						},
																						"id": 2050,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "33594:16:0",
																						"memberName": "accPowerPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 956,
																						"src": "33589:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 2046,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2025,
																							"src": "33573:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																								"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 2047,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "33578:6:0",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 944,
																						"src": "33573:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2048,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "33585:3:0",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "33573:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "33573:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "33612:3:0",
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "33573:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33573:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "33622:3:0",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "33573:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33573:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33555:87:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2060,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2045,
																	"src": "33660:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33670:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "33660:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2083,
															"nodeType": "IfStatement",
															"src": "33657:133:0",
															"trueBody": {
																"id": 2082,
																"nodeType": "Block",
																"src": "33673:117:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2063,
																					"name": "powerBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "33692:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2069,
																				"indexExpression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 2066,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "33713:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 2067,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "33717:6:0",
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "33713:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2065,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "33705:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2064,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "33705:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2068,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33705:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "33692:33:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2078,
																						"name": "pending",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2045,
																						"src": "33766:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"id": 2070,
																							"name": "powerBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1002,
																							"src": "33728:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 2076,
																						"indexExpression": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 2073,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "33749:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 2074,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "33753:6:0",
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "33749:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 2072,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "33741:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2071,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "33741:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2075,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "33741:19:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "33728:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2077,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "33762:3:0",
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "33728:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2079,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "33728:46:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "33692:82:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2081,
																		"nodeType": "ExpressionStatement",
																		"src": "33692:82:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2086,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "33814:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33824:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33814:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2117,
												"nodeType": "IfStatement",
												"src": "33811:170:0",
												"trueBody": {
													"id": 2116,
													"nodeType": "Block",
													"src": "33827:154:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2096,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "33880:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "33884:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "33880:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33872:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2094,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33872:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33872:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2101,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "33901:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																					"typeString": "contract NFTMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																					"typeString": "contract NFTMasterChef"
																				}
																			],
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33893:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2099,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33893:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33893:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2103,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2006,
																		"src": "33908:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2089,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2018,
																			"src": "33842:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2092,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "33847:7:0",
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 950,
																		"src": "33842:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "33855:16:0",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 630,
																	"src": "33842:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33842:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2105,
															"nodeType": "ExpressionStatement",
															"src": "33842:74:0"
														},
														{
															"expression": {
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2106,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "33931:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																			"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "33936:6:0",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "33931:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2112,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2006,
																			"src": "33961:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2109,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2025,
																				"src": "33945:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2110,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "33950:6:0",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "33945:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "33957:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "33945:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33945:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33931:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2115,
															"nodeType": "ExpressionStatement",
															"src": "33931:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2118,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "33991:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2120,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "33996:10:0",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "33991:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34052:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2124,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2018,
																			"src": "34025:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2125,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "34030:16:0",
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "34025:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2121,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2025,
																			"src": "34009:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "34014:6:0",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "34009:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "34021:3:0",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "34009:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34009:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "34048:3:0",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "34009:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34009:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33991:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2131,
												"nodeType": "ExpressionStatement",
												"src": "33991:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2133,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "34081:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "34085:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34081:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34093:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2136,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2006,
															"src": "34096:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2132,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "34073:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34073:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2138,
												"nodeType": "EmitStatement",
												"src": "34068:36:0"
											}
										]
									},
									"functionSelector": "41441d3b",
									"id": 2140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enterStaking",
									"nameLocation": "33273:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "33294:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "33286:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33286:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33285:17:0"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33310:0:0"
									},
									"scope": 2475,
									"src": "33264:848:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2286,
										"nodeType": "Block",
										"src": "34191:903:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2148,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "34210:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34220:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34210:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206973207a65726f",
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34223:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															},
															"value": "Amount is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															}
														],
														"id": 2147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34202:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34202:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2153,
												"nodeType": "ExpressionStatement",
												"src": "34202:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2155,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "34259:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "34263:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "34259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2157,
																	"name": "NFTStakeAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "34273:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "34259:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2159,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "34292:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "34296:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "34292:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2161,
																	"name": "DDTMasterchefAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "34306:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "34292:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "34259:67:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742066616d696c79",
															"id": 2164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34328:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64",
																"typeString": "literal_string \"Caller is not family\""
															},
															"value": "Caller is not family"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64",
																"typeString": "literal_string \"Caller is not family\""
															}
														],
														"id": 2154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34251:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34251:100:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2166,
												"nodeType": "ExpressionStatement",
												"src": "34251:100:0"
											},
											{
												"assignments": [
													2169
												],
												"declarations": [
													{
														"constant": false,
														"id": 2169,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "34379:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2286,
														"src": "34362:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 2168,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2167,
																"name": "PoolInfo",
																"nameLocations": [
																	"34362:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "34362:8:0"
															},
															"referencedDeclaration": 957,
															"src": "34362:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2173,
												"initialValue": {
													"baseExpression": {
														"id": 2170,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "34386:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2172,
													"indexExpression": {
														"hexValue": "30",
														"id": 2171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34395:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34386:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34362:35:0"
											},
											{
												"assignments": [
													2176
												],
												"declarations": [
													{
														"constant": false,
														"id": 2176,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "34425:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2286,
														"src": "34408:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 2175,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2174,
																"name": "UserInfo",
																"nameLocations": [
																	"34408:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "34408:8:0"
															},
															"referencedDeclaration": 947,
															"src": "34408:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2185,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2177,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "34432:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2179,
														"indexExpression": {
															"hexValue": "30",
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34441:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "34432:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2184,
													"indexExpression": {
														"arguments": [
															{
																"id": 2182,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "34452:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34444:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2180,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "34444:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34444:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34432:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34408:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34494:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2186,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "34483:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34483:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2189,
												"nodeType": "ExpressionStatement",
												"src": "34483:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2190,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "34511:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2191,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "34516:6:0",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "34511:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34525:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34511:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2233,
												"nodeType": "IfStatement",
												"src": "34507:278:0",
												"trueBody": {
													"id": 2232,
													"nodeType": "Block",
													"src": "34528:257:0",
													"statements": [
														{
															"assignments": [
																2195
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2195,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "34551:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2232,
																	"src": "34543:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2194,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "34543:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2209,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2206,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "34614:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2207,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "34619:10:0",
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "34614:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 2203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "34604:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2199,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2169,
																							"src": "34577:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																								"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																							}
																						},
																						"id": 2200,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "34582:16:0",
																						"memberName": "accPowerPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 956,
																						"src": "34577:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 2196,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2176,
																							"src": "34561:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																								"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 2197,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "34566:6:0",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 944,
																						"src": "34561:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "34573:3:0",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "34561:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "34561:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "34600:3:0",
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "34561:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34561:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "34610:3:0",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "34561:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34561:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "34543:87:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2210,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2195,
																	"src": "34648:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34658:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "34648:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2231,
															"nodeType": "IfStatement",
															"src": "34645:129:0",
															"trueBody": {
																"id": 2230,
																"nodeType": "Block",
																"src": "34661:113:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2213,
																					"name": "powerBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "34680:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2218,
																				"indexExpression": {
																					"arguments": [
																						{
																							"id": 2216,
																							"name": "_account",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2144,
																							"src": "34701:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2215,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "34693:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2214,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "34693:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2217,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "34693:17:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "34680:31:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2226,
																						"name": "pending",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2195,
																						"src": "34750:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"id": 2219,
																							"name": "powerBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1002,
																							"src": "34714:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 2224,
																						"indexExpression": {
																							"arguments": [
																								{
																									"id": 2222,
																									"name": "_account",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2144,
																									"src": "34735:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 2221,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "34727:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2220,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "34727:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2223,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "34727:17:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "34714:31:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2225,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "34746:3:0",
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "34714:35:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "34714:44:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "34680:78:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2229,
																		"nodeType": "ExpressionStatement",
																		"src": "34680:78:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2234,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2142,
														"src": "34798:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34808:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34798:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2265,
												"nodeType": "IfStatement",
												"src": "34795:170:0",
												"trueBody": {
													"id": 2264,
													"nodeType": "Block",
													"src": "34811:154:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2244,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "34864:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "34868:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "34864:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34856:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2242,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "34856:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34856:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2249,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "34885:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																					"typeString": "contract NFTMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2475",
																					"typeString": "contract NFTMasterChef"
																				}
																			],
																			"id": 2248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34877:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2247,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "34877:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34877:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2251,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "34892:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2237,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2169,
																			"src": "34826:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2240,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "34831:7:0",
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 950,
																		"src": "34826:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "34839:16:0",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 630,
																	"src": "34826:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34826:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2253,
															"nodeType": "ExpressionStatement",
															"src": "34826:74:0"
														},
														{
															"expression": {
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2254,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2176,
																		"src": "34915:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																			"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 2256,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "34920:6:0",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "34915:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2260,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2142,
																			"src": "34945:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2257,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2176,
																				"src": "34929:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2258,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "34934:6:0",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "34929:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "34941:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "34929:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34929:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34915:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2263,
															"nodeType": "ExpressionStatement",
															"src": "34915:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2266,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "34975:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "34980:10:0",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "34975:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35036:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2272,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2169,
																			"src": "35009:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "35014:16:0",
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "35009:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2269,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "34993:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2270,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "34998:6:0",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "34993:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "35005:3:0",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "34993:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34993:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "35032:3:0",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "34993:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34993:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34975:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2279,
												"nodeType": "ExpressionStatement",
												"src": "34975:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2281,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "35065:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35075:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2283,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "35078:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2280,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "35057:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35057:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2285,
												"nodeType": "EmitStatement",
												"src": "35052:34:0"
											}
										]
									},
									"functionSelector": "cf35fddf",
									"id": 2287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enterStakingCompund",
									"nameLocation": "34129:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "34157:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "34149:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "34174:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "34166:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34148:35:0"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34191:0:0"
									},
									"scope": 2475,
									"src": "34120:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2404,
										"nodeType": "Block",
										"src": "35192:703:0",
										"statements": [
											{
												"assignments": [
													2294
												],
												"declarations": [
													{
														"constant": false,
														"id": 2294,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "35220:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2404,
														"src": "35203:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 2293,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2292,
																"name": "PoolInfo",
																"nameLocations": [
																	"35203:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "35203:8:0"
															},
															"referencedDeclaration": 957,
															"src": "35203:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2298,
												"initialValue": {
													"baseExpression": {
														"id": 2295,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "35227:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2297,
													"indexExpression": {
														"hexValue": "30",
														"id": 2296,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35236:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35227:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35203:35:0"
											},
											{
												"assignments": [
													2301
												],
												"declarations": [
													{
														"constant": false,
														"id": 2301,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "35266:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2404,
														"src": "35249:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 2300,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2299,
																"name": "UserInfo",
																"nameLocations": [
																	"35249:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "35249:8:0"
															},
															"referencedDeclaration": 947,
															"src": "35249:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2308,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2302,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "35273:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2304,
														"indexExpression": {
															"hexValue": "30",
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35282:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "35273:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2307,
													"indexExpression": {
														"expression": {
															"id": 2305,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "35285:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "35289:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "35285:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35273:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35249:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2310,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2301,
																	"src": "35317:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 2311,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "35322:6:0",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "35317:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2312,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "35332:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35317:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35341:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 2309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35309:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2316,
												"nodeType": "ExpressionStatement",
												"src": "35309:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35384:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2317,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "35373:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35373:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2320,
												"nodeType": "ExpressionStatement",
												"src": "35373:13:0"
											},
											{
												"assignments": [
													2322
												],
												"declarations": [
													{
														"constant": false,
														"id": 2322,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "35405:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2404,
														"src": "35397:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35397:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2336,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2333,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2301,
																"src": "35468:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 2334,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "35473:10:0",
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "35468:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 2330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35458:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2326,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2294,
																				"src": "35431:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																					"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																				}
																			},
																			"id": 2327,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "35436:16:0",
																			"memberName": "accPowerPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 956,
																			"src": "35431:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2323,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2301,
																				"src": "35415:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "35420:6:0",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "35415:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "35427:3:0",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "35415:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35415:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "35454:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "35415:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35415:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "35464:3:0",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "35415:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35415:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35397:87:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2337,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "35498:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35508:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35498:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2354,
												"nodeType": "IfStatement",
												"src": "35495:107:0",
												"trueBody": {
													"id": 2353,
													"nodeType": "Block",
													"src": "35511:91:0",
													"statements": [
														{
															"expression": {
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2340,
																		"name": "powerBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "35526:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2343,
																	"indexExpression": {
																		"expression": {
																			"id": 2341,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "35539:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "35543:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "35539:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "35526:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2349,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2322,
																			"src": "35582:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 2344,
																				"name": "powerBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "35553:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2347,
																			"indexExpression": {
																				"expression": {
																					"id": 2345,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "35566:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2346,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "35570:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "35566:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "35553:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "35578:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "35553:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35553:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35526:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2352,
															"nodeType": "ExpressionStatement",
															"src": "35526:64:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2355,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2289,
														"src": "35615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35625:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35615:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2382,
												"nodeType": "IfStatement",
												"src": "35612:151:0",
												"trueBody": {
													"id": 2381,
													"nodeType": "Block",
													"src": "35628:135:0",
													"statements": [
														{
															"expression": {
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2358,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2301,
																		"src": "35643:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																			"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 2360,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "35648:6:0",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "35643:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2364,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2289,
																			"src": "35673:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2361,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2301,
																				"src": "35657:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2362,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "35662:6:0",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "35657:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "35669:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "35657:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35657:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35643:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2367,
															"nodeType": "ExpressionStatement",
															"src": "35643:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2375,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "35730:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2376,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "35734:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "35730:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "35722:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2373,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "35722:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35722:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2378,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2289,
																		"src": "35743:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2368,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2294,
																			"src": "35696:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2371,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "35701:7:0",
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 950,
																		"src": "35696:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "35709:12:0",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 604,
																	"src": "35696:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35696:55:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2380,
															"nodeType": "ExpressionStatement",
															"src": "35696:55:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2383,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2301,
															"src": "35773:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2385,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "35778:10:0",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "35773:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35834:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2389,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2294,
																			"src": "35807:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2390,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "35812:16:0",
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "35807:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2386,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2301,
																			"src": "35791:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "35796:6:0",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "35791:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "35803:3:0",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "35791:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35791:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "35830:3:0",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "35791:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35791:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35773:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2396,
												"nodeType": "ExpressionStatement",
												"src": "35773:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2398,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "35864:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "35868:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "35864:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35876:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2401,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2289,
															"src": "35879:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2397,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "35855:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35855:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2403,
												"nodeType": "EmitStatement",
												"src": "35850:37:0"
											}
										]
									},
									"functionSelector": "1058d281",
									"id": 2405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leaveStaking",
									"nameLocation": "35155:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "35176:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "35168:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35167:17:0"
									},
									"returnParameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35192:0:0"
									},
									"scope": 2475,
									"src": "35146:749:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2461,
										"nodeType": "Block",
										"src": "36022:308:0",
										"statements": [
											{
												"assignments": [
													2412
												],
												"declarations": [
													{
														"constant": false,
														"id": 2412,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "36050:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2461,
														"src": "36033:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 2411,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2410,
																"name": "PoolInfo",
																"nameLocations": [
																	"36033:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "36033:8:0"
															},
															"referencedDeclaration": 957,
															"src": "36033:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2416,
												"initialValue": {
													"baseExpression": {
														"id": 2413,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "36057:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2415,
													"indexExpression": {
														"id": 2414,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2407,
														"src": "36066:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "36057:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36033:38:0"
											},
											{
												"assignments": [
													2419
												],
												"declarations": [
													{
														"constant": false,
														"id": 2419,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "36099:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2461,
														"src": "36082:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 2418,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2417,
																"name": "UserInfo",
																"nameLocations": [
																	"36082:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "36082:8:0"
															},
															"referencedDeclaration": 947,
															"src": "36082:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2426,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2420,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "36106:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2422,
														"indexExpression": {
															"id": 2421,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "36115:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "36106:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2425,
													"indexExpression": {
														"expression": {
															"id": 2423,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "36121:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "36125:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "36121:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "36106:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36082:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2434,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "36177:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "36181:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "36177:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36169:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2432,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36169:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36169:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2437,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2419,
																"src": "36190:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "36195:6:0",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 944,
															"src": "36190:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2427,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "36143:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "36148:7:0",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "36143:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 2431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "36156:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 604,
														"src": "36143:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36143:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2440,
												"nodeType": "ExpressionStatement",
												"src": "36143:59:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2442,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "36236:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "36240:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "36236:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2444,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "36248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2445,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2419,
																"src": "36254:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "36259:6:0",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 944,
															"src": "36254:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2441,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "36218:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36218:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2448,
												"nodeType": "EmitStatement",
												"src": "36213:53:0"
											},
											{
												"expression": {
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2449,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "36277:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2451,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "36282:6:0",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "36277:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36291:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "36277:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2454,
												"nodeType": "ExpressionStatement",
												"src": "36277:15:0"
											},
											{
												"expression": {
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2455,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "36303:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2457,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "36308:10:0",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "36303:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36321:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "36303:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2460,
												"nodeType": "ExpressionStatement",
												"src": "36303:19:0"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 2462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nameLocation": "35983:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "36009:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "36001:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36000:14:0"
									},
									"returnParameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36022:0:0"
									},
									"scope": 2475,
									"src": "35974:356:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2473,
										"nodeType": "Block",
										"src": "36407:44:0",
										"statements": [
											{
												"expression": {
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2469,
														"name": "PowerPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "36418:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2470,
														"name": "newAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2464,
														"src": "36434:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36418:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2472,
												"nodeType": "ExpressionStatement",
												"src": "36418:25:0"
											}
										]
									},
									"functionSelector": "3df7aff3",
									"id": 2474,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2467,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2466,
												"name": "onlyOwner",
												"nameLocations": [
													"36397:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "36397:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "36397:9:0"
										}
									],
									"name": "updatePowerPerBlock",
									"nameLocation": "36351:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "36379:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "36371:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36370:19:0"
									},
									"returnParameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36407:0:0"
									},
									"scope": 2475,
									"src": "36342:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2476,
							"src": "22111:14343:0",
							"usedErrors": []
						}
					],
					"src": "103:36351:0"
				},
				"id": 0
			}
		}
	}
}
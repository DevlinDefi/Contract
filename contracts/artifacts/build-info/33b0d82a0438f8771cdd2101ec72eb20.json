{
	"id": "33b0d82a0438f8771cdd2101ec72eb20",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LpPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ninterface Router {\r\n    function getAmountsOut(uint amountIn, address[] memory path) external\r\n        view\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract LpUtils {\r\n    address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\r\n    address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7;\r\n    uint256 amount = 1000000000000000000;\r\n\r\n    function price(Router routerAddress, address token) internal view returns(uint256){\r\n        address[] memory path = new address[](3);\r\n        path[0] = token;\r\n        path[1] = WBNB;\r\n        path[2] = BUSD;\r\n        return routerAddress.getAmountsOut(amount,path)[2];\r\n    }\r\n\r\n    function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r\n\r\n        // uint256 phase1 = (lpAddress.balanceOf(lpAddress.token0())*price(routerAddress,lpAddress.token0()));\r\n        // uint256 phase2 = (lpAddress.balanceOf(lpAddress.token1())*price(routerAddress,lpAddress.token1()));\r\n        address token0 = lpAddress.token0();\r\n        return (price(routerAddress,lpAddress.token0()));\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LpPrice.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122022b1417b0be42fc2ca57da81812baf50ab4269cc15f4eeaae43686b214d8400d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022b1417b0be42fc2ca57da81812baf50ab4269cc15f4eeaae43686b214d8400d64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xB1 COINBASE PUSH28 0xBE42FC2CA57DA81812BAF50AB4269CC15F4EEAAE43686B214D8400D PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022b1417b0be42fc2ca57da81812baf50ab4269cc15f4eeaae43686b214d8400d64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xB1 COINBASE PUSH28 0xBE42FC2CA57DA81812BAF50AB4269CC15F4EEAAE43686B214D8400D PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122022b1417b0be42fc2ca57da81812baf50ab4269cc15f4eeaae43686b214d8400d64736f6c63430008070033",
									".code": [
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x92b8f4153c899ad3658b54992b2852268c8b727a6df27f9148e5abf46efd4f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a12ade63ba2334c3ddacb8824436ae83d95acdc29bb46204e4f40115f027c7\",\"dweb:/ipfs/QmYBp1YrgeFtaLryKSiErGxzgYeBMnmEh43uwsgwABB5xd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x92b8f4153c899ad3658b54992b2852268c8b727a6df27f9148e5abf46efd4f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a12ade63ba2334c3ddacb8824436ae83d95acdc29bb46204e4f40115f027c7\",\"dweb:/ipfs/QmYBp1YrgeFtaLryKSiErGxzgYeBMnmEh43uwsgwABB5xd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LpUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "BUSD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								},
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								}
							],
							"name": "CalcLpPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WBNB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":8846:9776  contract LpUtils {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LpPrice.sol\":8892:8934  0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0xae13d989dac2f0debff460ac112a837c89baa7cd\n    /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":8963:9005  0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x78867bbeef44f2326bf8ddd1941a4439382ef2a7\n    /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":9029:9048  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/LpPrice.sol\":9012:9048  uint256 amount = 1000000000000000000 */\n  0x02\n  sstore\n    /* \"contracts/LpPrice.sol\":8846:9776  contract LpUtils {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":8846:9776  contract LpUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x344e49d9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x484f4ea9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8dd95002\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LpPrice.sol\":9343:9773  function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9343:9773  function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r... */\n    tag_9:\n        /* \"contracts/LpPrice.sol\":9426:9433  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9671:9685  address token0 */\n      dup1\n        /* \"contracts/LpPrice.sol\":9688:9697  lpAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":9688:9704  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":9688:9706  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"contracts/LpPrice.sol\":9671:9706  address token0 = lpAddress.token0() */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9725:9764  price(routerAddress,lpAddress.token0()) */\n      tag_25\n        /* \"contracts/LpPrice.sol\":9731:9744  routerAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":9745:9754  lpAddress */\n      dup6\n        /* \"contracts/LpPrice.sol\":9745:9761  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":9745:9763  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_29:\n        /* \"contracts/LpPrice.sol\":9725:9730  price */\n      tag_30\n        /* \"contracts/LpPrice.sol\":9725:9764  price(routerAddress,lpAddress.token0()) */\n      jump\t// in\n    tag_25:\n        /* \"contracts/LpPrice.sol\":9717:9765  return (price(routerAddress,lpAddress.token0())) */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9343:9773  function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_13:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_17:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9057:9335  function price(Router routerAddress, address token) internal view returns(uint256){\r... */\n    tag_30:\n        /* \"contracts/LpPrice.sol\":9131:9138  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9150:9171  address[] memory path */\n      dup1\n        /* \"contracts/LpPrice.sol\":9188:9189  3 */\n      0x03\n        /* \"contracts/LpPrice.sol\":9174:9190  new address[](3) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_32\n      jumpi\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n    tag_32:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_35\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_35:\n      pop\n        /* \"contracts/LpPrice.sol\":9150:9190  address[] memory path = new address[](3) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9211:9216  token */\n      dup3\n        /* \"contracts/LpPrice.sol\":9201:9205  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":9206:9207  0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9201:9208  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_36\n      jumpi\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n    tag_36:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":9201:9216  path[0] = token */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9237:9241  WBNB */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":9227:9231  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":9232:9233  1 */\n      0x01\n        /* \"contracts/LpPrice.sol\":9227:9234  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_39\n      jumpi\n      tag_40\n      tag_38\n      jump\t// in\n    tag_40:\n    tag_39:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":9227:9241  path[1] = WBNB */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9262:9266  BUSD */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":9252:9256  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":9257:9258  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":9252:9259  path[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_41\n      jumpi\n      tag_42\n      tag_38\n      jump\t// in\n    tag_42:\n    tag_41:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":9252:9266  path[2] = BUSD */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9284:9297  routerAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":9284:9311  routerAddress.getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd06ca61f\n        /* \"contracts/LpPrice.sol\":9312:9318  amount */\n      sload(0x02)\n        /* \"contracts/LpPrice.sol\":9319:9323  path */\n      dup4\n        /* \"contracts/LpPrice.sol\":9284:9324  routerAddress.getAmountsOut(amount,path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap3\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"contracts/LpPrice.sol\":9325:9326  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":9284:9327  routerAddress.getAmountsOut(amount,path)[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_50\n      jumpi\n      tag_51\n      tag_38\n      jump\t// in\n    tag_51:\n    tag_50:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/LpPrice.sol\":9277:9327  return routerAddress.getAmountsOut(amount,path)[2] */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9057:9335  function price(Router routerAddress, address token) internal view returns(uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:768   */\n    tag_53:\n        /* \"#utility.yul\":131:136   */\n      0x00\n        /* \"#utility.yul\":156:237   */\n      tag_55\n        /* \"#utility.yul\":172:236   */\n      tag_56\n        /* \"#utility.yul\":229:235   */\n      dup5\n        /* \"#utility.yul\":172:236   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":156:237   */\n      tag_58\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":147:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":257:262   */\n      dup1\n        /* \"#utility.yul\":286:292   */\n      dup4\n        /* \"#utility.yul\":279:284   */\n      dup3\n        /* \"#utility.yul\":272:293   */\n      mstore\n        /* \"#utility.yul\":320:324   */\n      0x20\n        /* \"#utility.yul\":313:318   */\n      dup3\n        /* \"#utility.yul\":309:325   */\n      add\n        /* \"#utility.yul\":302:325   */\n      swap1\n      pop\n        /* \"#utility.yul\":346:352   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":388:392   */\n      0x20\n        /* \"#utility.yul\":380:386   */\n      dup7\n        /* \"#utility.yul\":376:393   */\n      mul\n        /* \"#utility.yul\":371:374   */\n      dup3\n        /* \"#utility.yul\":367:394   */\n      add\n        /* \"#utility.yul\":364:400   */\n      gt\n        /* \"#utility.yul\":361:504   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":361:504   */\n    tag_59:\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":513:762   */\n    tag_62:\n        /* \"#utility.yul\":538:544   */\n      dup6\n        /* \"#utility.yul\":535:536   */\n      dup2\n        /* \"#utility.yul\":532:545   */\n      lt\n        /* \"#utility.yul\":513:762   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":606:609   */\n      dup2\n        /* \"#utility.yul\":635:683   */\n      tag_65\n        /* \"#utility.yul\":679:682   */\n      dup9\n        /* \"#utility.yul\":667:677   */\n      dup3\n        /* \"#utility.yul\":635:683   */\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":630:633   */\n      dup5\n        /* \"#utility.yul\":623:684   */\n      mstore\n        /* \"#utility.yul\":713:717   */\n      0x20\n        /* \"#utility.yul\":708:711   */\n      dup5\n        /* \"#utility.yul\":704:718   */\n      add\n        /* \"#utility.yul\":697:718   */\n      swap4\n      pop\n        /* \"#utility.yul\":747:751   */\n      0x20\n        /* \"#utility.yul\":742:745   */\n      dup4\n        /* \"#utility.yul\":738:752   */\n      add\n        /* \"#utility.yul\":731:752   */\n      swap3\n      pop\n        /* \"#utility.yul\":573:762   */\n      pop\n        /* \"#utility.yul\":560:561   */\n      0x01\n        /* \"#utility.yul\":557:558   */\n      dup2\n        /* \"#utility.yul\":553:562   */\n      add\n        /* \"#utility.yul\":548:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":513:762   */\n      jump(tag_62)\n    tag_64:\n        /* \"#utility.yul\":517:531   */\n      pop\n        /* \"#utility.yul\":137:768   */\n      pop\n      pop\n        /* \"#utility.yul\":24:768   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:917   */\n    tag_67:\n        /* \"#utility.yul\":831:836   */\n      0x00\n        /* \"#utility.yul\":862:868   */\n      dup2\n        /* \"#utility.yul\":856:869   */\n      mload\n        /* \"#utility.yul\":847:869   */\n      swap1\n      pop\n        /* \"#utility.yul\":878:911   */\n      tag_69\n        /* \"#utility.yul\":905:910   */\n      dup2\n        /* \"#utility.yul\":878:911   */\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":774:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":940:1325   */\n    tag_71:\n        /* \"#utility.yul\":1022:1027   */\n      0x00\n        /* \"#utility.yul\":1071:1074   */\n      dup3\n        /* \"#utility.yul\":1064:1068   */\n      0x1f\n        /* \"#utility.yul\":1056:1062   */\n      dup4\n        /* \"#utility.yul\":1052:1069   */\n      add\n        /* \"#utility.yul\":1048:1075   */\n      slt\n        /* \"#utility.yul\":1038:1160   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1079:1158   */\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1038:1160   */\n    tag_73:\n        /* \"#utility.yul\":1189:1195   */\n      dup2\n        /* \"#utility.yul\":1183:1196   */\n      mload\n        /* \"#utility.yul\":1214:1319   */\n      tag_76\n        /* \"#utility.yul\":1315:1318   */\n      dup5\n        /* \"#utility.yul\":1307:1313   */\n      dup3\n        /* \"#utility.yul\":1300:1304   */\n      0x20\n        /* \"#utility.yul\":1292:1298   */\n      dup7\n        /* \"#utility.yul\":1288:1305   */\n      add\n        /* \"#utility.yul\":1214:1319   */\n      tag_53\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1205:1319   */\n      swap2\n      pop\n        /* \"#utility.yul\":1028:1325   */\n      pop\n        /* \"#utility.yul\":940:1325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1331:1498   */\n    tag_77:\n        /* \"#utility.yul\":1391:1396   */\n      0x00\n        /* \"#utility.yul\":1429:1435   */\n      dup2\n        /* \"#utility.yul\":1416:1436   */\n      calldataload\n        /* \"#utility.yul\":1407:1436   */\n      swap1\n      pop\n        /* \"#utility.yul\":1445:1492   */\n      tag_79\n        /* \"#utility.yul\":1486:1491   */\n      dup2\n        /* \"#utility.yul\":1445:1492   */\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1331:1498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1504:1671   */\n    tag_81:\n        /* \"#utility.yul\":1564:1569   */\n      0x00\n        /* \"#utility.yul\":1602:1608   */\n      dup2\n        /* \"#utility.yul\":1589:1609   */\n      calldataload\n        /* \"#utility.yul\":1580:1609   */\n      swap1\n      pop\n        /* \"#utility.yul\":1618:1665   */\n      tag_83\n        /* \"#utility.yul\":1659:1664   */\n      dup2\n        /* \"#utility.yul\":1618:1665   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1504:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1820   */\n    tag_66:\n        /* \"#utility.yul\":1734:1739   */\n      0x00\n        /* \"#utility.yul\":1765:1771   */\n      dup2\n        /* \"#utility.yul\":1759:1772   */\n      mload\n        /* \"#utility.yul\":1750:1772   */\n      swap1\n      pop\n        /* \"#utility.yul\":1781:1814   */\n      tag_86\n        /* \"#utility.yul\":1808:1813   */\n      dup2\n        /* \"#utility.yul\":1781:1814   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1677:1820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1826:2177   */\n    tag_24:\n        /* \"#utility.yul\":1896:1902   */\n      0x00\n        /* \"#utility.yul\":1945:1947   */\n      0x20\n        /* \"#utility.yul\":1933:1942   */\n      dup3\n        /* \"#utility.yul\":1924:1931   */\n      dup5\n        /* \"#utility.yul\":1920:1943   */\n      sub\n        /* \"#utility.yul\":1916:1948   */\n      slt\n        /* \"#utility.yul\":1913:2032   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":1951:2030   */\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1913:2032   */\n    tag_89:\n        /* \"#utility.yul\":2071:2072   */\n      0x00\n        /* \"#utility.yul\":2096:2160   */\n      tag_92\n        /* \"#utility.yul\":2152:2159   */\n      dup5\n        /* \"#utility.yul\":2143:2149   */\n      dup3\n        /* \"#utility.yul\":2132:2141   */\n      dup6\n        /* \"#utility.yul\":2128:2150   */\n      add\n        /* \"#utility.yul\":2096:2160   */\n      tag_67\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2086:2160   */\n      swap2\n      pop\n        /* \"#utility.yul\":2042:2170   */\n      pop\n        /* \"#utility.yul\":1826:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2737   */\n    tag_49:\n        /* \"#utility.yul\":2278:2284   */\n      0x00\n        /* \"#utility.yul\":2327:2329   */\n      0x20\n        /* \"#utility.yul\":2315:2324   */\n      dup3\n        /* \"#utility.yul\":2306:2313   */\n      dup5\n        /* \"#utility.yul\":2302:2325   */\n      sub\n        /* \"#utility.yul\":2298:2330   */\n      slt\n        /* \"#utility.yul\":2295:2414   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":2333:2412   */\n      tag_95\n      tag_91\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2295:2414   */\n    tag_94:\n        /* \"#utility.yul\":2474:2475   */\n      0x00\n        /* \"#utility.yul\":2463:2472   */\n      dup3\n        /* \"#utility.yul\":2459:2476   */\n      add\n        /* \"#utility.yul\":2453:2477   */\n      mload\n        /* \"#utility.yul\":2504:2522   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2496:2502   */\n      dup2\n        /* \"#utility.yul\":2493:2523   */\n      gt\n        /* \"#utility.yul\":2490:2607   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":2526:2605   */\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2490:2607   */\n    tag_96:\n        /* \"#utility.yul\":2631:2720   */\n      tag_99\n        /* \"#utility.yul\":2712:2719   */\n      dup5\n        /* \"#utility.yul\":2703:2709   */\n      dup3\n        /* \"#utility.yul\":2692:2701   */\n      dup6\n        /* \"#utility.yul\":2688:2710   */\n      add\n        /* \"#utility.yul\":2631:2720   */\n      tag_71\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2621:2720   */\n      swap2\n      pop\n        /* \"#utility.yul\":2424:2730   */\n      pop\n        /* \"#utility.yul\":2183:2737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2743:3273   */\n    tag_8:\n        /* \"#utility.yul\":2839:2845   */\n      0x00\n        /* \"#utility.yul\":2847:2853   */\n      dup1\n        /* \"#utility.yul\":2896:2898   */\n      0x40\n        /* \"#utility.yul\":2884:2893   */\n      dup4\n        /* \"#utility.yul\":2875:2882   */\n      dup6\n        /* \"#utility.yul\":2871:2894   */\n      sub\n        /* \"#utility.yul\":2867:2899   */\n      slt\n        /* \"#utility.yul\":2864:2983   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":2902:2981   */\n      tag_102\n      tag_91\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2864:2983   */\n    tag_101:\n        /* \"#utility.yul\":3022:3023   */\n      0x00\n        /* \"#utility.yul\":3047:3114   */\n      tag_103\n        /* \"#utility.yul\":3106:3113   */\n      dup6\n        /* \"#utility.yul\":3097:3103   */\n      dup3\n        /* \"#utility.yul\":3086:3095   */\n      dup7\n        /* \"#utility.yul\":3082:3104   */\n      add\n        /* \"#utility.yul\":3047:3114   */\n      tag_77\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3037:3114   */\n      swap3\n      pop\n        /* \"#utility.yul\":2993:3124   */\n      pop\n        /* \"#utility.yul\":3163:3165   */\n      0x20\n        /* \"#utility.yul\":3189:3256   */\n      tag_104\n        /* \"#utility.yul\":3248:3255   */\n      dup6\n        /* \"#utility.yul\":3239:3245   */\n      dup3\n        /* \"#utility.yul\":3228:3237   */\n      dup7\n        /* \"#utility.yul\":3224:3246   */\n      add\n        /* \"#utility.yul\":3189:3256   */\n      tag_81\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":3179:3256   */\n      swap2\n      pop\n        /* \"#utility.yul\":3134:3266   */\n      pop\n        /* \"#utility.yul\":2743:3273   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3279:3458   */\n    tag_105:\n        /* \"#utility.yul\":3348:3358   */\n      0x00\n        /* \"#utility.yul\":3369:3415   */\n      tag_107\n        /* \"#utility.yul\":3411:3414   */\n      dup4\n        /* \"#utility.yul\":3403:3409   */\n      dup4\n        /* \"#utility.yul\":3369:3415   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3447:3451   */\n      0x20\n        /* \"#utility.yul\":3442:3445   */\n      dup4\n        /* \"#utility.yul\":3438:3452   */\n      add\n        /* \"#utility.yul\":3424:3452   */\n      swap1\n      pop\n        /* \"#utility.yul\":3279:3458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3464:3572   */\n    tag_108:\n        /* \"#utility.yul\":3541:3565   */\n      tag_110\n        /* \"#utility.yul\":3559:3564   */\n      dup2\n        /* \"#utility.yul\":3541:3565   */\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3536:3539   */\n      dup3\n        /* \"#utility.yul\":3529:3566   */\n      mstore\n        /* \"#utility.yul\":3464:3572   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3578:3696   */\n    tag_112:\n        /* \"#utility.yul\":3665:3689   */\n      tag_114\n        /* \"#utility.yul\":3683:3688   */\n      dup2\n        /* \"#utility.yul\":3665:3689   */\n      tag_111\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3660:3663   */\n      dup3\n        /* \"#utility.yul\":3653:3690   */\n      mstore\n        /* \"#utility.yul\":3578:3696   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3732:4464   */\n    tag_115:\n        /* \"#utility.yul\":3851:3854   */\n      0x00\n        /* \"#utility.yul\":3880:3934   */\n      tag_117\n        /* \"#utility.yul\":3928:3933   */\n      dup3\n        /* \"#utility.yul\":3880:3934   */\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":3950:4036   */\n      tag_119\n        /* \"#utility.yul\":4029:4035   */\n      dup2\n        /* \"#utility.yul\":4024:4027   */\n      dup6\n        /* \"#utility.yul\":3950:4036   */\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3943:4036   */\n      swap4\n      pop\n        /* \"#utility.yul\":4060:4116   */\n      tag_121\n        /* \"#utility.yul\":4110:4115   */\n      dup4\n        /* \"#utility.yul\":4060:4116   */\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4139:4146   */\n      dup1\n        /* \"#utility.yul\":4170:4171   */\n      0x00\n        /* \"#utility.yul\":4155:4439   */\n    tag_123:\n        /* \"#utility.yul\":4180:4186   */\n      dup4\n        /* \"#utility.yul\":4177:4178   */\n      dup2\n        /* \"#utility.yul\":4174:4187   */\n      lt\n        /* \"#utility.yul\":4155:4439   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":4256:4262   */\n      dup2\n        /* \"#utility.yul\":4250:4263   */\n      mload\n        /* \"#utility.yul\":4283:4346   */\n      tag_126\n        /* \"#utility.yul\":4342:4345   */\n      dup9\n        /* \"#utility.yul\":4327:4340   */\n      dup3\n        /* \"#utility.yul\":4283:4346   */\n      tag_105\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":4276:4346   */\n      swap8\n      pop\n        /* \"#utility.yul\":4369:4429   */\n      tag_127\n        /* \"#utility.yul\":4422:4428   */\n      dup4\n        /* \"#utility.yul\":4369:4429   */\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4359:4429   */\n      swap3\n      pop\n        /* \"#utility.yul\":4215:4439   */\n      pop\n        /* \"#utility.yul\":4202:4203   */\n      0x01\n        /* \"#utility.yul\":4199:4200   */\n      dup2\n        /* \"#utility.yul\":4195:4204   */\n      add\n        /* \"#utility.yul\":4190:4204   */\n      swap1\n      pop\n        /* \"#utility.yul\":4155:4439   */\n      jump(tag_123)\n    tag_125:\n        /* \"#utility.yul\":4159:4173   */\n      pop\n        /* \"#utility.yul\":4455:4458   */\n      dup6\n        /* \"#utility.yul\":4448:4458   */\n      swap4\n      pop\n        /* \"#utility.yul\":3856:4464   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3732:4464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4470:4588   */\n    tag_129:\n        /* \"#utility.yul\":4557:4581   */\n      tag_131\n        /* \"#utility.yul\":4575:4580   */\n      dup2\n        /* \"#utility.yul\":4557:4581   */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":4552:4555   */\n      dup3\n        /* \"#utility.yul\":4545:4582   */\n      mstore\n        /* \"#utility.yul\":4470:4588   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4594:4816   */\n    tag_15:\n        /* \"#utility.yul\":4687:4691   */\n      0x00\n        /* \"#utility.yul\":4725:4727   */\n      0x20\n        /* \"#utility.yul\":4714:4723   */\n      dup3\n        /* \"#utility.yul\":4710:4728   */\n      add\n        /* \"#utility.yul\":4702:4728   */\n      swap1\n      pop\n        /* \"#utility.yul\":4738:4809   */\n      tag_134\n        /* \"#utility.yul\":4806:4807   */\n      0x00\n        /* \"#utility.yul\":4795:4804   */\n      dup4\n        /* \"#utility.yul\":4791:4808   */\n      add\n        /* \"#utility.yul\":4782:4788   */\n      dup5\n        /* \"#utility.yul\":4738:4809   */\n      tag_112\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4594:4816   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4822:5044   */\n    tag_11:\n        /* \"#utility.yul\":4915:4919   */\n      0x00\n        /* \"#utility.yul\":4953:4955   */\n      0x20\n        /* \"#utility.yul\":4942:4951   */\n      dup3\n        /* \"#utility.yul\":4938:4956   */\n      add\n        /* \"#utility.yul\":4930:4956   */\n      swap1\n      pop\n        /* \"#utility.yul\":4966:5037   */\n      tag_136\n        /* \"#utility.yul\":5034:5035   */\n      0x00\n        /* \"#utility.yul\":5023:5032   */\n      dup4\n        /* \"#utility.yul\":5019:5036   */\n      add\n        /* \"#utility.yul\":5010:5016   */\n      dup5\n        /* \"#utility.yul\":4966:5037   */\n      tag_129\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4822:5044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5050:5533   */\n    tag_44:\n        /* \"#utility.yul\":5221:5225   */\n      0x00\n        /* \"#utility.yul\":5259:5261   */\n      0x40\n        /* \"#utility.yul\":5248:5257   */\n      dup3\n        /* \"#utility.yul\":5244:5262   */\n      add\n        /* \"#utility.yul\":5236:5262   */\n      swap1\n      pop\n        /* \"#utility.yul\":5272:5343   */\n      tag_138\n        /* \"#utility.yul\":5340:5341   */\n      0x00\n        /* \"#utility.yul\":5329:5338   */\n      dup4\n        /* \"#utility.yul\":5325:5342   */\n      add\n        /* \"#utility.yul\":5316:5322   */\n      dup6\n        /* \"#utility.yul\":5272:5343   */\n      tag_129\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":5390:5399   */\n      dup2\n        /* \"#utility.yul\":5384:5388   */\n      dup2\n        /* \"#utility.yul\":5380:5400   */\n      sub\n        /* \"#utility.yul\":5375:5377   */\n      0x20\n        /* \"#utility.yul\":5364:5373   */\n      dup4\n        /* \"#utility.yul\":5360:5378   */\n      add\n        /* \"#utility.yul\":5353:5401   */\n      mstore\n        /* \"#utility.yul\":5418:5526   */\n      tag_139\n        /* \"#utility.yul\":5521:5525   */\n      dup2\n        /* \"#utility.yul\":5512:5518   */\n      dup5\n        /* \"#utility.yul\":5418:5526   */\n      tag_115\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":5410:5526   */\n      swap1\n      pop\n        /* \"#utility.yul\":5050:5533   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5539:5668   */\n    tag_58:\n        /* \"#utility.yul\":5573:5579   */\n      0x00\n        /* \"#utility.yul\":5600:5620   */\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":5590:5620   */\n      swap1\n      pop\n        /* \"#utility.yul\":5629:5662   */\n      tag_143\n        /* \"#utility.yul\":5657:5661   */\n      dup3\n        /* \"#utility.yul\":5649:5655   */\n      dup3\n        /* \"#utility.yul\":5629:5662   */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":5539:5668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5674:5749   */\n    tag_142:\n        /* \"#utility.yul\":5707:5713   */\n      0x00\n        /* \"#utility.yul\":5740:5742   */\n      0x40\n        /* \"#utility.yul\":5734:5743   */\n      mload\n        /* \"#utility.yul\":5724:5743   */\n      swap1\n      pop\n        /* \"#utility.yul\":5674:5749   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5755:6066   */\n    tag_57:\n        /* \"#utility.yul\":5832:5836   */\n      0x00\n        /* \"#utility.yul\":5922:5940   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5914:5920   */\n      dup3\n        /* \"#utility.yul\":5911:5941   */\n      gt\n        /* \"#utility.yul\":5908:5964   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":5944:5962   */\n      tag_148\n      tag_34\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":5908:5964   */\n    tag_147:\n        /* \"#utility.yul\":5994:5998   */\n      0x20\n        /* \"#utility.yul\":5986:5992   */\n      dup3\n        /* \"#utility.yul\":5982:5999   */\n      mul\n        /* \"#utility.yul\":5974:5999   */\n      swap1\n      pop\n        /* \"#utility.yul\":6054:6058   */\n      0x20\n        /* \"#utility.yul\":6048:6052   */\n      dup2\n        /* \"#utility.yul\":6044:6059   */\n      add\n        /* \"#utility.yul\":6036:6059   */\n      swap1\n      pop\n        /* \"#utility.yul\":5755:6066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6072:6204   */\n    tag_122:\n        /* \"#utility.yul\":6139:6143   */\n      0x00\n        /* \"#utility.yul\":6162:6165   */\n      dup2\n        /* \"#utility.yul\":6154:6165   */\n      swap1\n      pop\n        /* \"#utility.yul\":6192:6196   */\n      0x20\n        /* \"#utility.yul\":6187:6190   */\n      dup3\n        /* \"#utility.yul\":6183:6197   */\n      add\n        /* \"#utility.yul\":6175:6197   */\n      swap1\n      pop\n        /* \"#utility.yul\":6072:6204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6210:6324   */\n    tag_118:\n        /* \"#utility.yul\":6277:6283   */\n      0x00\n        /* \"#utility.yul\":6311:6316   */\n      dup2\n        /* \"#utility.yul\":6305:6317   */\n      mload\n        /* \"#utility.yul\":6295:6317   */\n      swap1\n      pop\n        /* \"#utility.yul\":6210:6324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6330:6443   */\n    tag_128:\n        /* \"#utility.yul\":6400:6404   */\n      0x00\n        /* \"#utility.yul\":6432:6436   */\n      0x20\n        /* \"#utility.yul\":6427:6430   */\n      dup3\n        /* \"#utility.yul\":6423:6437   */\n      add\n        /* \"#utility.yul\":6415:6437   */\n      swap1\n      pop\n        /* \"#utility.yul\":6330:6443   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6449:6633   */\n    tag_120:\n        /* \"#utility.yul\":6548:6559   */\n      0x00\n        /* \"#utility.yul\":6582:6588   */\n      dup3\n        /* \"#utility.yul\":6577:6580   */\n      dup3\n        /* \"#utility.yul\":6570:6589   */\n      mstore\n        /* \"#utility.yul\":6622:6626   */\n      0x20\n        /* \"#utility.yul\":6617:6620   */\n      dup3\n        /* \"#utility.yul\":6613:6627   */\n      add\n        /* \"#utility.yul\":6598:6627   */\n      swap1\n      pop\n        /* \"#utility.yul\":6449:6633   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6639:6735   */\n    tag_111:\n        /* \"#utility.yul\":6676:6683   */\n      0x00\n        /* \"#utility.yul\":6705:6729   */\n      tag_154\n        /* \"#utility.yul\":6723:6728   */\n      dup3\n        /* \"#utility.yul\":6705:6729   */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":6694:6729   */\n      swap1\n      pop\n        /* \"#utility.yul\":6639:6735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6741:6851   */\n    tag_156:\n        /* \"#utility.yul\":6792:6799   */\n      0x00\n        /* \"#utility.yul\":6821:6845   */\n      tag_158\n        /* \"#utility.yul\":6839:6844   */\n      dup3\n        /* \"#utility.yul\":6821:6845   */\n      tag_111\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":6810:6845   */\n      swap1\n      pop\n        /* \"#utility.yul\":6741:6851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6857:6967   */\n    tag_159:\n        /* \"#utility.yul\":6908:6915   */\n      0x00\n        /* \"#utility.yul\":6937:6961   */\n      tag_161\n        /* \"#utility.yul\":6955:6960   */\n      dup3\n        /* \"#utility.yul\":6937:6961   */\n      tag_111\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":6926:6961   */\n      swap1\n      pop\n        /* \"#utility.yul\":6857:6967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6973:7099   */\n    tag_155:\n        /* \"#utility.yul\":7010:7017   */\n      0x00\n        /* \"#utility.yul\":7050:7092   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7043:7048   */\n      dup3\n        /* \"#utility.yul\":7039:7093   */\n      and\n        /* \"#utility.yul\":7028:7093   */\n      swap1\n      pop\n        /* \"#utility.yul\":6973:7099   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7105:7182   */\n    tag_132:\n        /* \"#utility.yul\":7142:7149   */\n      0x00\n        /* \"#utility.yul\":7171:7176   */\n      dup2\n        /* \"#utility.yul\":7160:7176   */\n      swap1\n      pop\n        /* \"#utility.yul\":7105:7182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7188:7469   */\n    tag_144:\n        /* \"#utility.yul\":7271:7298   */\n      tag_165\n        /* \"#utility.yul\":7293:7297   */\n      dup3\n        /* \"#utility.yul\":7271:7298   */\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":7263:7269   */\n      dup2\n        /* \"#utility.yul\":7259:7299   */\n      add\n        /* \"#utility.yul\":7401:7407   */\n      dup2\n        /* \"#utility.yul\":7389:7399   */\n      dup2\n        /* \"#utility.yul\":7386:7408   */\n      lt\n        /* \"#utility.yul\":7365:7383   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7353:7363   */\n      dup3\n        /* \"#utility.yul\":7350:7384   */\n      gt\n        /* \"#utility.yul\":7347:7409   */\n      or\n        /* \"#utility.yul\":7344:7432   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":7412:7430   */\n      tag_168\n      tag_34\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":7344:7432   */\n    tag_167:\n        /* \"#utility.yul\":7452:7462   */\n      dup1\n        /* \"#utility.yul\":7448:7450   */\n      0x40\n        /* \"#utility.yul\":7441:7463   */\n      mstore\n        /* \"#utility.yul\":7231:7469   */\n      pop\n        /* \"#utility.yul\":7188:7469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7475:7655   */\n    tag_38:\n        /* \"#utility.yul\":7523:7600   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7520:7521   */\n      0x00\n        /* \"#utility.yul\":7513:7601   */\n      mstore\n        /* \"#utility.yul\":7620:7624   */\n      0x32\n        /* \"#utility.yul\":7617:7618   */\n      0x04\n        /* \"#utility.yul\":7610:7625   */\n      mstore\n        /* \"#utility.yul\":7644:7648   */\n      0x24\n        /* \"#utility.yul\":7641:7642   */\n      0x00\n        /* \"#utility.yul\":7634:7649   */\n      revert\n        /* \"#utility.yul\":7661:7841   */\n    tag_34:\n        /* \"#utility.yul\":7709:7786   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7706:7707   */\n      0x00\n        /* \"#utility.yul\":7699:7787   */\n      mstore\n        /* \"#utility.yul\":7806:7810   */\n      0x41\n        /* \"#utility.yul\":7803:7804   */\n      0x04\n        /* \"#utility.yul\":7796:7811   */\n      mstore\n        /* \"#utility.yul\":7830:7834   */\n      0x24\n        /* \"#utility.yul\":7827:7828   */\n      0x00\n        /* \"#utility.yul\":7820:7835   */\n      revert\n        /* \"#utility.yul\":7847:7964   */\n    tag_75:\n        /* \"#utility.yul\":7956:7957   */\n      0x00\n        /* \"#utility.yul\":7953:7954   */\n      dup1\n        /* \"#utility.yul\":7946:7958   */\n      revert\n        /* \"#utility.yul\":7970:8087   */\n    tag_61:\n        /* \"#utility.yul\":8079:8080   */\n      0x00\n        /* \"#utility.yul\":8076:8077   */\n      dup1\n        /* \"#utility.yul\":8069:8081   */\n      revert\n        /* \"#utility.yul\":8093:8210   */\n    tag_98:\n        /* \"#utility.yul\":8202:8203   */\n      0x00\n        /* \"#utility.yul\":8199:8200   */\n      dup1\n        /* \"#utility.yul\":8192:8204   */\n      revert\n        /* \"#utility.yul\":8216:8333   */\n    tag_91:\n        /* \"#utility.yul\":8325:8326   */\n      0x00\n        /* \"#utility.yul\":8322:8323   */\n      dup1\n        /* \"#utility.yul\":8315:8327   */\n      revert\n        /* \"#utility.yul\":8339:8441   */\n    tag_166:\n        /* \"#utility.yul\":8380:8386   */\n      0x00\n        /* \"#utility.yul\":8431:8433   */\n      0x1f\n        /* \"#utility.yul\":8427:8434   */\n      not\n        /* \"#utility.yul\":8422:8424   */\n      0x1f\n        /* \"#utility.yul\":8415:8420   */\n      dup4\n        /* \"#utility.yul\":8411:8425   */\n      add\n        /* \"#utility.yul\":8407:8435   */\n      and\n        /* \"#utility.yul\":8397:8435   */\n      swap1\n      pop\n        /* \"#utility.yul\":8339:8441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8447:8569   */\n    tag_70:\n        /* \"#utility.yul\":8520:8544   */\n      tag_177\n        /* \"#utility.yul\":8538:8543   */\n      dup2\n        /* \"#utility.yul\":8520:8544   */\n      tag_111\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":8513:8518   */\n      dup2\n        /* \"#utility.yul\":8510:8545   */\n      eq\n        /* \"#utility.yul\":8500:8563   */\n      tag_178\n      jumpi\n        /* \"#utility.yul\":8559:8560   */\n      0x00\n        /* \"#utility.yul\":8556:8557   */\n      dup1\n        /* \"#utility.yul\":8549:8561   */\n      revert\n        /* \"#utility.yul\":8500:8563   */\n    tag_178:\n        /* \"#utility.yul\":8447:8569   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8575:8725   */\n    tag_80:\n        /* \"#utility.yul\":8662:8700   */\n      tag_180\n        /* \"#utility.yul\":8694:8699   */\n      dup2\n        /* \"#utility.yul\":8662:8700   */\n      tag_156\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":8655:8660   */\n      dup2\n        /* \"#utility.yul\":8652:8701   */\n      eq\n        /* \"#utility.yul\":8642:8719   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":8715:8716   */\n      0x00\n        /* \"#utility.yul\":8712:8713   */\n      dup1\n        /* \"#utility.yul\":8705:8717   */\n      revert\n        /* \"#utility.yul\":8642:8719   */\n    tag_181:\n        /* \"#utility.yul\":8575:8725   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8731:8881   */\n    tag_84:\n        /* \"#utility.yul\":8818:8856   */\n      tag_183\n        /* \"#utility.yul\":8850:8855   */\n      dup2\n        /* \"#utility.yul\":8818:8856   */\n      tag_159\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":8811:8816   */\n      dup2\n        /* \"#utility.yul\":8808:8857   */\n      eq\n        /* \"#utility.yul\":8798:8875   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":8871:8872   */\n      0x00\n        /* \"#utility.yul\":8868:8869   */\n      dup1\n        /* \"#utility.yul\":8861:8873   */\n      revert\n        /* \"#utility.yul\":8798:8875   */\n    tag_184:\n        /* \"#utility.yul\":8731:8881   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8887:9009   */\n    tag_87:\n        /* \"#utility.yul\":8960:8984   */\n      tag_186\n        /* \"#utility.yul\":8978:8983   */\n      dup2\n        /* \"#utility.yul\":8960:8984   */\n      tag_132\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":8953:8958   */\n      dup2\n        /* \"#utility.yul\":8950:8985   */\n      eq\n        /* \"#utility.yul\":8940:9003   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":8999:9000   */\n      0x00\n        /* \"#utility.yul\":8996:8997   */\n      dup1\n        /* \"#utility.yul\":8989:9001   */\n      revert\n        /* \"#utility.yul\":8940:9003   */\n    tag_187:\n        /* \"#utility.yul\":8887:9009   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f00c79924a8db52893dbc66728fc97cc018cb547c2aabb36556d3c8ece71d0c864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ae13d989dac2f0debff460ac112a837c89baa7cd6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507378867bbeef44f2326bf8ddd1941a4439382ef2a7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002553480156100c557600080fd5b50610924806100d56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063344e49d914610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b91906105ab565b6100b2565b60405161006d91906106a9565b60405180910390f35b61007e6101c5565b60405161008b919061068e565b60405180910390f35b61009c6101eb565b6040516100a9919061068e565b60405180910390f35b6000808373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156100fb57600080fd5b505afa15801561010f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101339190610535565b90506101bc838573ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561017f57600080fd5b505afa158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b79190610535565b61020f565b91505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600367ffffffffffffffff81111561022d5761022c61083e565b5b60405190808252806020026020018201604052801561025b5781602001602082028036833780820191505090505b50905082816000815181106102735761027261080f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001815181106102e2576102e161080f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816002815181106103535761035261080f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b81526004016103ca9291906106c4565b60006040518083038186803b1580156103e257600080fd5b505afa1580156103f6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061041f9190610562565b6002815181106104325761043161080f565b5b602002602001015191505092915050565b600061045661045184610719565b6106f4565b9050808382526020820190508285602086028201111561047957610478610872565b5b60005b858110156104a9578161048f8882610520565b84526020840193506020830192505060018101905061047c565b5050509392505050565b6000815190506104c281610892565b92915050565b600082601f8301126104dd576104dc61086d565b5b81516104ed848260208601610443565b91505092915050565b600081359050610505816108a9565b92915050565b60008135905061051a816108c0565b92915050565b60008151905061052f816108d7565b92915050565b60006020828403121561054b5761054a61087c565b5b6000610559848285016104b3565b91505092915050565b6000602082840312156105785761057761087c565b5b600082015167ffffffffffffffff81111561059657610595610877565b5b6105a2848285016104c8565b91505092915050565b600080604083850312156105c2576105c161087c565b5b60006105d0858286016104f6565b92505060206105e18582860161050b565b9150509250929050565b60006105f78383610603565b60208301905092915050565b61060c8161077e565b82525050565b61061b8161077e565b82525050565b600061062c82610755565b610636818561076d565b935061064183610745565b8060005b8381101561067257815161065988826105eb565b975061066483610760565b925050600181019050610645565b5085935050505092915050565b610688816107d4565b82525050565b60006020820190506106a36000830184610612565b92915050565b60006020820190506106be600083018461067f565b92915050565b60006040820190506106d9600083018561067f565b81810360208301526106eb8184610621565b90509392505050565b60006106fe61070f565b905061070a82826107de565b919050565b6000604051905090565b600067ffffffffffffffff8211156107345761073361083e565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b6000610789826107b4565b9050919050565b600061079b8261077e565b9050919050565b60006107ad8261077e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6107e782610881565b810181811067ffffffffffffffff821117156108065761080561083e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61089b8161077e565b81146108a657600080fd5b50565b6108b281610790565b81146108bd57600080fd5b50565b6108c9816107a2565b81146108d457600080fd5b50565b6108e0816107d4565b81146108eb57600080fd5b5056fea2646970667358221220f00c79924a8db52893dbc66728fc97cc018cb547c2aabb36556d3c8ece71d0c864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAE13D989DAC2F0DEBFF460AC112A837C89BAA7CD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x78867BBEEF44F2326BF8DDD1941A4439382EF2A7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x924 DUP1 PUSH2 0xD5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x344E49D9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x5AB JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x535 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BC DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x193 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x535 JUMP JUMPDEST PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22D JUMPI PUSH2 0x22C PUSH2 0x83E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x25B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x273 JUMPI PUSH2 0x272 PUSH2 0x80F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2E2 JUMPI PUSH2 0x2E1 PUSH2 0x80F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x353 JUMPI PUSH2 0x352 PUSH2 0x80F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CA SWAP3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x562 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x432 JUMPI PUSH2 0x431 PUSH2 0x80F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 PUSH2 0x451 DUP5 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x479 JUMPI PUSH2 0x478 PUSH2 0x872 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4A9 JUMPI DUP2 PUSH2 0x48F DUP9 DUP3 PUSH2 0x520 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x47C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4C2 DUP2 PUSH2 0x892 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4DD JUMPI PUSH2 0x4DC PUSH2 0x86D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x443 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x505 DUP2 PUSH2 0x8A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x51A DUP2 PUSH2 0x8C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x52F DUP2 PUSH2 0x8D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54B JUMPI PUSH2 0x54A PUSH2 0x87C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x559 DUP5 DUP3 DUP6 ADD PUSH2 0x4B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x578 JUMPI PUSH2 0x577 PUSH2 0x87C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x596 JUMPI PUSH2 0x595 PUSH2 0x877 JUMP JUMPDEST JUMPDEST PUSH2 0x5A2 DUP5 DUP3 DUP6 ADD PUSH2 0x4C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5C2 JUMPI PUSH2 0x5C1 PUSH2 0x87C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5D0 DUP6 DUP3 DUP7 ADD PUSH2 0x4F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5E1 DUP6 DUP3 DUP7 ADD PUSH2 0x50B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 DUP4 DUP4 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x60C DUP2 PUSH2 0x77E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x61B DUP2 PUSH2 0x77E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62C DUP3 PUSH2 0x755 JUMP JUMPDEST PUSH2 0x636 DUP2 DUP6 PUSH2 0x76D JUMP JUMPDEST SWAP4 POP PUSH2 0x641 DUP4 PUSH2 0x745 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x672 JUMPI DUP2 MLOAD PUSH2 0x659 DUP9 DUP3 PUSH2 0x5EB JUMP JUMPDEST SWAP8 POP PUSH2 0x664 DUP4 PUSH2 0x760 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x645 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x688 DUP2 PUSH2 0x7D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x612 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x67F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6D9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x67F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x6EB DUP2 DUP5 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FE PUSH2 0x70F JUMP JUMPDEST SWAP1 POP PUSH2 0x70A DUP3 DUP3 PUSH2 0x7DE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x734 JUMPI PUSH2 0x733 PUSH2 0x83E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x789 DUP3 PUSH2 0x7B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79B DUP3 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AD DUP3 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E7 DUP3 PUSH2 0x881 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x806 JUMPI PUSH2 0x805 PUSH2 0x83E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x89B DUP2 PUSH2 0x77E JUMP JUMPDEST DUP2 EQ PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8B2 DUP2 PUSH2 0x790 JUMP JUMPDEST DUP2 EQ PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8C9 DUP2 PUSH2 0x7A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E0 DUP2 PUSH2 0x7D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x8EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xC PUSH26 0x924A8DB52893DBC66728FC97CC018CB547C2AABB36556D3C8ECE PUSH18 0xD0C864736F6C634300080700330000000000 ",
							"sourceMap": "8846:930:0:-:0;;;8892:42;8870:64;;;;;;;;;;;;;;;;;;;;8963:42;8941:64;;;;;;;;;;;;;;;;;;;;9029:19;9012:36;;8846:930;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUSD_335": {
									"entryPoint": 453,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CalcLpPrice_412": {
									"entryPoint": 178,
									"id": 412,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@WBNB_332": {
									"entryPoint": 491,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@price_386": {
									"entryPoint": 527,
									"id": 386,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$317": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Router_$329": {
									"entryPoint": 1291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$317t_contract$_Router_$329": {
									"entryPoint": 1451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 1515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$317": {
									"entryPoint": 1936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Router_$329": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2157,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2162,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2167,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$317": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Router_$329": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9012:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "137:631:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "147:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "229:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "172:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "156:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "147:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "257:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "250:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "286:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "272:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "313:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "302:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "335:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "346:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "339:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "401:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "371:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "388:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "376:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "376:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "364:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "364:36:1"
															},
															"nodeType": "YulIf",
															"src": "361:143:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "573:189:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "588:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "592:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "630:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "667:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "635:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "635:48:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "623:61:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "623:61:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "697:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "704:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "697:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "731:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "742:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "731:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "535:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "532:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "546:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "548:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "557:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "560:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "553:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "553:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "548:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "517:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "519:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "528:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "523:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "513:249:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "107:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "123:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "131:5:1",
														"type": ""
													}
												],
												"src": "24:744:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "837:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "847:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "862:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "856:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "847:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "905:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "878:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "878:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "815:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "823:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "831:5:1",
														"type": ""
													}
												],
												"src": "774:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1028:297:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1077:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1079:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1079:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1079:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1056:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1064:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1052:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1052:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1071:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1048:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1048:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1041:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1041:35:1"
															},
															"nodeType": "YulIf",
															"src": "1038:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1169:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1189:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1183:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1173:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1205:114:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1292:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1300:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1315:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1214:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:105:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1205:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1006:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1014:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1022:5:1",
														"type": ""
													}
												],
												"src": "940:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1397:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1407:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1429:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1416:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1407:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1486:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$317",
																	"nodeType": "YulIdentifier",
																	"src": "1445:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1445:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1445:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1375:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1383:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1391:5:1",
														"type": ""
													}
												],
												"src": "1331:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1570:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1580:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1602:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1589:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1580:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1659:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Router_$329",
																	"nodeType": "YulIdentifier",
																	"src": "1618:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1618:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1618:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1548:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1556:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1564:5:1",
														"type": ""
													}
												],
												"src": "1504:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1740:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1750:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1765:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1759:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1759:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1750:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1808:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1781:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1781:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1781:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1718:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1726:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1734:5:1",
														"type": ""
													}
												],
												"src": "1677:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1903:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1949:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1951:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1951:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1951:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1924:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1933:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:32:1"
															},
															"nodeType": "YulIf",
															"src": "1913:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2042:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2057:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2071:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2061:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2086:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2132:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2143:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2128:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2128:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2152:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2096:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2096:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2086:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1873:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1884:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1896:6:1",
														"type": ""
													}
												],
												"src": "1826:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2285:452:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2331:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2306:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2315:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2302:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2327:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2298:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2298:32:1"
															},
															"nodeType": "YulIf",
															"src": "2295:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2424:306:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2439:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2463:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2474:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2459:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2459:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2453:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2453:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2443:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2524:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2526:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2526:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2526:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2496:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2504:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2493:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2493:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2490:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2621:99:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2692:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2703:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2688:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2688:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2712:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2631:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2631:89:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2621:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2255:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2266:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2278:6:1",
														"type": ""
													}
												],
												"src": "2183:554:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2854:419:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2900:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2902:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2902:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2902:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2875:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2884:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2871:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2896:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2867:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2867:32:1"
															},
															"nodeType": "YulIf",
															"src": "2864:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2993:131:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3008:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3022:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3012:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3037:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3086:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3097:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3082:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3082:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3106:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$317",
																			"nodeType": "YulIdentifier",
																			"src": "3047:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3037:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3134:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3149:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3163:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3153:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3179:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3228:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3239:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3224:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3224:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3248:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$329",
																			"nodeType": "YulIdentifier",
																			"src": "3189:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3179:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$317t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2816:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2827:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2839:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2847:6:1",
														"type": ""
													}
												],
												"src": "2743:530:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3359:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3403:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3411:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3369:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3369:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3369:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3424:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3442:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3438:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3438:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "3424:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3332:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3340:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3348:10:1",
														"type": ""
													}
												],
												"src": "3279:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3519:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3536:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3559:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3541:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3541:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3529:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3529:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3507:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3514:3:1",
														"type": ""
													}
												],
												"src": "3464:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3643:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3660:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3683:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3665:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3653:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3653:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3631:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3638:3:1",
														"type": ""
													}
												],
												"src": "3578:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3856:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3866:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3928:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3880:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3870:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3943:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4024:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4029:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3950:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3943:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4045:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4110:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4060:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4049:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4125:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4139:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4129:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4215:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4229:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4256:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4250:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4250:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "4233:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4276:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4327:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4342:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "4283:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4283:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4276:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4359:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4422:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4369:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4369:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4359:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4177:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4180:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4174:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4174:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4188:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4190:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4199:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4202:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4195:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4195:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4190:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4159:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4161:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4170:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4165:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4155:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4448:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4455:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4448:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3835:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3842:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3851:3:1",
														"type": ""
													}
												],
												"src": "3732:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4535:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4552:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4575:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4557:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4557:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4545:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4545:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4545:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4523:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4530:3:1",
														"type": ""
													}
												],
												"src": "4470:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4692:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4702:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4714:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4725:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4710:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4710:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4702:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4782:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4795:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4806:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4791:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4791:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4738:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4738:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4738:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4664:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4676:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4687:4:1",
														"type": ""
													}
												],
												"src": "4594:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4920:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4930:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4942:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4953:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4938:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4930:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5010:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5023:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5034:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5019:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5019:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4966:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4966:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4966:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4892:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4904:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4915:4:1",
														"type": ""
													}
												],
												"src": "4822:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5226:307:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5236:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5248:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5259:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5244:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5244:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5236:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5316:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5329:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5340:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5325:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5325:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5272:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5272:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5272:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5364:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5375:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5360:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5360:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5384:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5390:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5380:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5380:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5353:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5353:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5353:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5410:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5512:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5521:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5418:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5418:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5410:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5190:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5202:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5210:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5221:4:1",
														"type": ""
													}
												],
												"src": "5050:483:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5580:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5590:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5600:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5590:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5649:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5657:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5629:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5629:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5629:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5564:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5573:6:1",
														"type": ""
													}
												],
												"src": "5539:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5714:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5724:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5740:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5734:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5724:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5707:6:1",
														"type": ""
													}
												],
												"src": "5674:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5837:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5942:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5944:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5944:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5944:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5914:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5922:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5911:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5911:30:1"
															},
															"nodeType": "YulIf",
															"src": "5908:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5974:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5986:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5994:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5982:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5982:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5974:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6036:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6048:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6054:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6044:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6044:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6036:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5821:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5832:4:1",
														"type": ""
													}
												],
												"src": "5755:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6144:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6154:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "6162:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6154:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6175:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6187:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6192:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6183:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6183:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6175:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6131:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6139:4:1",
														"type": ""
													}
												],
												"src": "6072:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6284:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6295:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6311:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6305:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6305:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6295:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6267:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6277:6:1",
														"type": ""
													}
												],
												"src": "6210:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6405:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6415:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6427:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6432:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6423:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6423:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "6415:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6392:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "6400:4:1",
														"type": ""
													}
												],
												"src": "6330:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6560:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6577:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6582:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6570:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6570:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6570:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6598:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6617:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6622:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6613:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6613:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6598:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6532:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6537:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6548:11:1",
														"type": ""
													}
												],
												"src": "6449:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6684:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6694:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6723:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6705:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6705:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6694:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6666:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6676:7:1",
														"type": ""
													}
												],
												"src": "6639:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6800:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6810:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6839:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6821:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6821:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6810:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6782:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6792:7:1",
														"type": ""
													}
												],
												"src": "6741:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6916:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6926:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6955:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6937:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6937:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6926:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6908:7:1",
														"type": ""
													}
												],
												"src": "6857:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7018:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7028:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7043:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7050:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7039:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7039:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7028:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7000:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7010:7:1",
														"type": ""
													}
												],
												"src": "6973:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7150:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7160:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7171:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7160:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7132:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7142:7:1",
														"type": ""
													}
												],
												"src": "7105:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7231:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7241:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7263:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7293:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7271:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7271:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7259:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7259:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7245:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7410:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7412:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7412:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7412:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7353:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7365:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7350:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7350:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7389:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7401:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7386:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7386:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7347:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7347:62:1"
															},
															"nodeType": "YulIf",
															"src": "7344:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7448:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7452:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7441:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7441:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7441:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7217:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7225:4:1",
														"type": ""
													}
												],
												"src": "7188:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7503:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7520:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7523:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7513:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7513:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7513:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7617:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7620:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7610:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7610:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7641:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7644:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7634:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7634:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "7475:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7689:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7706:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7709:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7699:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7699:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7699:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7803:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7806:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7796:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7796:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7796:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7827:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7830:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7820:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7820:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7820:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7661:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7936:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7953:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7956:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7946:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7946:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "7847:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8059:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8076:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8079:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8069:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8069:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8069:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "7970:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8182:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8199:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8202:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8192:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8192:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8192:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "8093:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8305:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8322:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8325:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8315:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8315:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8315:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "8216:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8387:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8397:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8415:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8422:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8411:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8431:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8427:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8427:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8407:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8407:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "8397:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8370:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "8380:6:1",
														"type": ""
													}
												],
												"src": "8339:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8490:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8547:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8556:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8559:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8549:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8549:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8549:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8513:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8538:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "8520:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8520:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8510:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8510:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8503:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8503:43:1"
															},
															"nodeType": "YulIf",
															"src": "8500:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8483:5:1",
														"type": ""
													}
												],
												"src": "8447:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8632:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8703:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8712:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8715:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8705:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8705:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8705:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8655:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8694:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$317",
																					"nodeType": "YulIdentifier",
																					"src": "8662:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8662:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8652:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8652:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8645:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8645:57:1"
															},
															"nodeType": "YulIf",
															"src": "8642:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8625:5:1",
														"type": ""
													}
												],
												"src": "8575:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8788:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8859:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8868:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8871:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8861:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8861:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8861:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8811:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8850:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Router_$329",
																					"nodeType": "YulIdentifier",
																					"src": "8818:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8818:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8808:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8808:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8801:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8801:57:1"
															},
															"nodeType": "YulIf",
															"src": "8798:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8781:5:1",
														"type": ""
													}
												],
												"src": "8731:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8930:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8987:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8996:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8999:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8989:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8989:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8989:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8953:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8978:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8960:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8960:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8950:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8950:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8943:43:1"
															},
															"nodeType": "YulIf",
															"src": "8940:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8923:5:1",
														"type": ""
													}
												],
												"src": "8887:122:1"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_IERC20_$317(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$317(value)\n    }\n\n    function abi_decode_t_contract$_Router_$329(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Router_$329(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$317t_contract$_Router_$329(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$317(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Router_$329(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$317(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Router_$329(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$317(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$317(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Router_$329(value) {\n        if iszero(eq(value, cleanup_t_contract$_Router_$329(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063344e49d914610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b91906105ab565b6100b2565b60405161006d91906106a9565b60405180910390f35b61007e6101c5565b60405161008b919061068e565b60405180910390f35b61009c6101eb565b6040516100a9919061068e565b60405180910390f35b6000808373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156100fb57600080fd5b505afa15801561010f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101339190610535565b90506101bc838573ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561017f57600080fd5b505afa158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b79190610535565b61020f565b91505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600367ffffffffffffffff81111561022d5761022c61083e565b5b60405190808252806020026020018201604052801561025b5781602001602082028036833780820191505090505b50905082816000815181106102735761027261080f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001815181106102e2576102e161080f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816002815181106103535761035261080f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b81526004016103ca9291906106c4565b60006040518083038186803b1580156103e257600080fd5b505afa1580156103f6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061041f9190610562565b6002815181106104325761043161080f565b5b602002602001015191505092915050565b600061045661045184610719565b6106f4565b9050808382526020820190508285602086028201111561047957610478610872565b5b60005b858110156104a9578161048f8882610520565b84526020840193506020830192505060018101905061047c565b5050509392505050565b6000815190506104c281610892565b92915050565b600082601f8301126104dd576104dc61086d565b5b81516104ed848260208601610443565b91505092915050565b600081359050610505816108a9565b92915050565b60008135905061051a816108c0565b92915050565b60008151905061052f816108d7565b92915050565b60006020828403121561054b5761054a61087c565b5b6000610559848285016104b3565b91505092915050565b6000602082840312156105785761057761087c565b5b600082015167ffffffffffffffff81111561059657610595610877565b5b6105a2848285016104c8565b91505092915050565b600080604083850312156105c2576105c161087c565b5b60006105d0858286016104f6565b92505060206105e18582860161050b565b9150509250929050565b60006105f78383610603565b60208301905092915050565b61060c8161077e565b82525050565b61061b8161077e565b82525050565b600061062c82610755565b610636818561076d565b935061064183610745565b8060005b8381101561067257815161065988826105eb565b975061066483610760565b925050600181019050610645565b5085935050505092915050565b610688816107d4565b82525050565b60006020820190506106a36000830184610612565b92915050565b60006020820190506106be600083018461067f565b92915050565b60006040820190506106d9600083018561067f565b81810360208301526106eb8184610621565b90509392505050565b60006106fe61070f565b905061070a82826107de565b919050565b6000604051905090565b600067ffffffffffffffff8211156107345761073361083e565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b6000610789826107b4565b9050919050565b600061079b8261077e565b9050919050565b60006107ad8261077e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6107e782610881565b810181811067ffffffffffffffff821117156108065761080561083e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61089b8161077e565b81146108a657600080fd5b50565b6108b281610790565b81146108bd57600080fd5b50565b6108c9816107a2565b81146108d457600080fd5b50565b6108e0816107d4565b81146108eb57600080fd5b5056fea2646970667358221220f00c79924a8db52893dbc66728fc97cc018cb547c2aabb36556d3c8ece71d0c864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x344E49D9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x5AB JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x535 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BC DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x193 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x535 JUMP JUMPDEST PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22D JUMPI PUSH2 0x22C PUSH2 0x83E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x25B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x273 JUMPI PUSH2 0x272 PUSH2 0x80F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2E2 JUMPI PUSH2 0x2E1 PUSH2 0x80F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x353 JUMPI PUSH2 0x352 PUSH2 0x80F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CA SWAP3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x562 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x432 JUMPI PUSH2 0x431 PUSH2 0x80F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 PUSH2 0x451 DUP5 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x479 JUMPI PUSH2 0x478 PUSH2 0x872 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4A9 JUMPI DUP2 PUSH2 0x48F DUP9 DUP3 PUSH2 0x520 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x47C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4C2 DUP2 PUSH2 0x892 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4DD JUMPI PUSH2 0x4DC PUSH2 0x86D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x443 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x505 DUP2 PUSH2 0x8A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x51A DUP2 PUSH2 0x8C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x52F DUP2 PUSH2 0x8D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54B JUMPI PUSH2 0x54A PUSH2 0x87C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x559 DUP5 DUP3 DUP6 ADD PUSH2 0x4B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x578 JUMPI PUSH2 0x577 PUSH2 0x87C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x596 JUMPI PUSH2 0x595 PUSH2 0x877 JUMP JUMPDEST JUMPDEST PUSH2 0x5A2 DUP5 DUP3 DUP6 ADD PUSH2 0x4C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5C2 JUMPI PUSH2 0x5C1 PUSH2 0x87C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5D0 DUP6 DUP3 DUP7 ADD PUSH2 0x4F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5E1 DUP6 DUP3 DUP7 ADD PUSH2 0x50B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 DUP4 DUP4 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x60C DUP2 PUSH2 0x77E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x61B DUP2 PUSH2 0x77E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62C DUP3 PUSH2 0x755 JUMP JUMPDEST PUSH2 0x636 DUP2 DUP6 PUSH2 0x76D JUMP JUMPDEST SWAP4 POP PUSH2 0x641 DUP4 PUSH2 0x745 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x672 JUMPI DUP2 MLOAD PUSH2 0x659 DUP9 DUP3 PUSH2 0x5EB JUMP JUMPDEST SWAP8 POP PUSH2 0x664 DUP4 PUSH2 0x760 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x645 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x688 DUP2 PUSH2 0x7D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x612 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x67F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6D9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x67F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x6EB DUP2 DUP5 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FE PUSH2 0x70F JUMP JUMPDEST SWAP1 POP PUSH2 0x70A DUP3 DUP3 PUSH2 0x7DE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x734 JUMPI PUSH2 0x733 PUSH2 0x83E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x789 DUP3 PUSH2 0x7B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79B DUP3 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AD DUP3 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E7 DUP3 PUSH2 0x881 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x806 JUMPI PUSH2 0x805 PUSH2 0x83E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x89B DUP2 PUSH2 0x77E JUMP JUMPDEST DUP2 EQ PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8B2 DUP2 PUSH2 0x790 JUMP JUMPDEST DUP2 EQ PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8C9 DUP2 PUSH2 0x7A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E0 DUP2 PUSH2 0x7D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x8EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xC PUSH26 0x924A8DB52893DBC66728FC97CC018CB547C2AABB36556D3C8ECE PUSH18 0xD0C864736F6C634300080700330000000000 ",
							"sourceMap": "8846:930:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9343:430;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8941:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8870;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9343:430;9426:7;9671:14;9688:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9671:35;;9725:39;9731:13;9745:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9725:5;:39::i;:::-;9717:48;;;9343:430;;;;:::o;8941:64::-;;;;;;;;;;;;;:::o;8870:::-;;;;;;;;;;;;:::o;9057:278::-;9131:7;9150:21;9188:1;9174:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9150:40;;9211:5;9201:4;9206:1;9201:7;;;;;;;;:::i;:::-;;;;;;;:15;;;;;;;;;;;9237:4;;;;;;;;;;9227;9232:1;9227:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;9262:4;;;;;;;;;;;9252;9257:1;9252:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;9284:13;:27;;;9312:6;;9319:4;9284:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9325:1;9284:43;;;;;;;;:::i;:::-;;;;;;;;9277:50;;;9057:278;;;;:::o;24:744:1:-;131:5;156:81;172:64;229:6;172:64;:::i;:::-;156:81;:::i;:::-;147:90;;257:5;286:6;279:5;272:21;320:4;313:5;309:16;302:23;;346:6;396:3;388:4;380:6;376:17;371:3;367:27;364:36;361:143;;;415:79;;:::i;:::-;361:143;528:1;513:249;538:6;535:1;532:13;513:249;;;606:3;635:48;679:3;667:10;635:48;:::i;:::-;630:3;623:61;713:4;708:3;704:14;697:21;;747:4;742:3;738:14;731:21;;573:189;560:1;557;553:9;548:14;;513:249;;;517:14;137:631;;24:744;;;;;:::o;774:143::-;831:5;862:6;856:13;847:22;;878:33;905:5;878:33;:::i;:::-;774:143;;;;:::o;940:385::-;1022:5;1071:3;1064:4;1056:6;1052:17;1048:27;1038:122;;1079:79;;:::i;:::-;1038:122;1189:6;1183:13;1214:105;1315:3;1307:6;1300:4;1292:6;1288:17;1214:105;:::i;:::-;1205:114;;1028:297;940:385;;;;:::o;1331:167::-;1391:5;1429:6;1416:20;1407:29;;1445:47;1486:5;1445:47;:::i;:::-;1331:167;;;;:::o;1504:::-;1564:5;1602:6;1589:20;1580:29;;1618:47;1659:5;1618:47;:::i;:::-;1504:167;;;;:::o;1677:143::-;1734:5;1765:6;1759:13;1750:22;;1781:33;1808:5;1781:33;:::i;:::-;1677:143;;;;:::o;1826:351::-;1896:6;1945:2;1933:9;1924:7;1920:23;1916:32;1913:119;;;1951:79;;:::i;:::-;1913:119;2071:1;2096:64;2152:7;2143:6;2132:9;2128:22;2096:64;:::i;:::-;2086:74;;2042:128;1826:351;;;;:::o;2183:554::-;2278:6;2327:2;2315:9;2306:7;2302:23;2298:32;2295:119;;;2333:79;;:::i;:::-;2295:119;2474:1;2463:9;2459:17;2453:24;2504:18;2496:6;2493:30;2490:117;;;2526:79;;:::i;:::-;2490:117;2631:89;2712:7;2703:6;2692:9;2688:22;2631:89;:::i;:::-;2621:99;;2424:306;2183:554;;;;:::o;2743:530::-;2839:6;2847;2896:2;2884:9;2875:7;2871:23;2867:32;2864:119;;;2902:79;;:::i;:::-;2864:119;3022:1;3047:67;3106:7;3097:6;3086:9;3082:22;3047:67;:::i;:::-;3037:77;;2993:131;3163:2;3189:67;3248:7;3239:6;3228:9;3224:22;3189:67;:::i;:::-;3179:77;;3134:132;2743:530;;;;;:::o;3279:179::-;3348:10;3369:46;3411:3;3403:6;3369:46;:::i;:::-;3447:4;3442:3;3438:14;3424:28;;3279:179;;;;:::o;3464:108::-;3541:24;3559:5;3541:24;:::i;:::-;3536:3;3529:37;3464:108;;:::o;3578:118::-;3665:24;3683:5;3665:24;:::i;:::-;3660:3;3653:37;3578:118;;:::o;3732:732::-;3851:3;3880:54;3928:5;3880:54;:::i;:::-;3950:86;4029:6;4024:3;3950:86;:::i;:::-;3943:93;;4060:56;4110:5;4060:56;:::i;:::-;4139:7;4170:1;4155:284;4180:6;4177:1;4174:13;4155:284;;;4256:6;4250:13;4283:63;4342:3;4327:13;4283:63;:::i;:::-;4276:70;;4369:60;4422:6;4369:60;:::i;:::-;4359:70;;4215:224;4202:1;4199;4195:9;4190:14;;4155:284;;;4159:14;4455:3;4448:10;;3856:608;;;3732:732;;;;:::o;4470:118::-;4557:24;4575:5;4557:24;:::i;:::-;4552:3;4545:37;4470:118;;:::o;4594:222::-;4687:4;4725:2;4714:9;4710:18;4702:26;;4738:71;4806:1;4795:9;4791:17;4782:6;4738:71;:::i;:::-;4594:222;;;;:::o;4822:::-;4915:4;4953:2;4942:9;4938:18;4930:26;;4966:71;5034:1;5023:9;5019:17;5010:6;4966:71;:::i;:::-;4822:222;;;;:::o;5050:483::-;5221:4;5259:2;5248:9;5244:18;5236:26;;5272:71;5340:1;5329:9;5325:17;5316:6;5272:71;:::i;:::-;5390:9;5384:4;5380:20;5375:2;5364:9;5360:18;5353:48;5418:108;5521:4;5512:6;5418:108;:::i;:::-;5410:116;;5050:483;;;;;:::o;5539:129::-;5573:6;5600:20;;:::i;:::-;5590:30;;5629:33;5657:4;5649:6;5629:33;:::i;:::-;5539:129;;;:::o;5674:75::-;5707:6;5740:2;5734:9;5724:19;;5674:75;:::o;5755:311::-;5832:4;5922:18;5914:6;5911:30;5908:56;;;5944:18;;:::i;:::-;5908:56;5994:4;5986:6;5982:17;5974:25;;6054:4;6048;6044:15;6036:23;;5755:311;;;:::o;6072:132::-;6139:4;6162:3;6154:11;;6192:4;6187:3;6183:14;6175:22;;6072:132;;;:::o;6210:114::-;6277:6;6311:5;6305:12;6295:22;;6210:114;;;:::o;6330:113::-;6400:4;6432;6427:3;6423:14;6415:22;;6330:113;;;:::o;6449:184::-;6548:11;6582:6;6577:3;6570:19;6622:4;6617:3;6613:14;6598:29;;6449:184;;;;:::o;6639:96::-;6676:7;6705:24;6723:5;6705:24;:::i;:::-;6694:35;;6639:96;;;:::o;6741:110::-;6792:7;6821:24;6839:5;6821:24;:::i;:::-;6810:35;;6741:110;;;:::o;6857:::-;6908:7;6937:24;6955:5;6937:24;:::i;:::-;6926:35;;6857:110;;;:::o;6973:126::-;7010:7;7050:42;7043:5;7039:54;7028:65;;6973:126;;;:::o;7105:77::-;7142:7;7171:5;7160:16;;7105:77;;;:::o;7188:281::-;7271:27;7293:4;7271:27;:::i;:::-;7263:6;7259:40;7401:6;7389:10;7386:22;7365:18;7353:10;7350:34;7347:62;7344:88;;;7412:18;;:::i;:::-;7344:88;7452:10;7448:2;7441:22;7231:238;7188:281;;:::o;7475:180::-;7523:77;7520:1;7513:88;7620:4;7617:1;7610:15;7644:4;7641:1;7634:15;7661:180;7709:77;7706:1;7699:88;7806:4;7803:1;7796:15;7830:4;7827:1;7820:15;7847:117;7956:1;7953;7946:12;7970:117;8079:1;8076;8069:12;8093:117;8202:1;8199;8192:12;8216:117;8325:1;8322;8315:12;8339:102;8380:6;8431:2;8427:7;8422:2;8415:5;8411:14;8407:28;8397:38;;8339:102;;;:::o;8447:122::-;8520:24;8538:5;8520:24;:::i;:::-;8513:5;8510:35;8500:63;;8559:1;8556;8549:12;8500:63;8447:122;:::o;8575:150::-;8662:38;8694:5;8662:38;:::i;:::-;8655:5;8652:49;8642:77;;8715:1;8712;8705:12;8642:77;8575:150;:::o;8731:::-;8818:38;8850:5;8818:38;:::i;:::-;8811:5;8808:49;8798:77;;8871:1;8868;8861:12;8798:77;8731:150;:::o;8887:122::-;8960:24;8978:5;8960:24;:::i;:::-;8953:5;8950:35;8940:63;;8999:1;8996;8989:12;8940:63;8887:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "468000",
								"executionCost": "71145",
								"totalCost": "539145"
							},
							"external": {
								"BUSD()": "2514",
								"CalcLpPrice(address,address)": "infinite",
								"WBNB()": "2533"
							},
							"internal": {
								"price(contract Router,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8846,
									"end": 9776,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8892,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "AE13D989DAC2F0DEBFF460AC112A837C89BAA7CD"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8963,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "78867BBEEF44F2326BF8DDD1941A4439382EF2A7"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9029,
									"end": 9048,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 9012,
									"end": 9048,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 9012,
									"end": 9048,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9776,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f00c79924a8db52893dbc66728fc97cc018cb547c2aabb36556d3c8ece71d0c864736f6c63430008070033",
									".code": [
										{
											"begin": 8846,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "344E49D9"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "484F4EA9"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "8DD95002"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9776,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9697,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9688,
											"end": 9704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9704,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9725,
											"end": 9764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9731,
											"end": 9744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9754,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9745,
											"end": 9761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9761,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9725,
											"end": 9730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9725,
											"end": 9764,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9725,
											"end": 9764,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9725,
											"end": 9764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9717,
											"end": 9765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9717,
											"end": 9765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9717,
											"end": 9765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9773,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9057,
											"end": 9335,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9057,
											"end": 9335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9131,
											"end": 9138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9150,
											"end": 9171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9189,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9211,
											"end": 9216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9201,
											"end": 9216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9201,
											"end": 9216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9233,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9227,
											"end": 9241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9227,
											"end": 9241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9262,
											"end": 9266,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9262,
											"end": 9266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9262,
											"end": 9266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9262,
											"end": 9266,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9262,
											"end": 9266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9262,
											"end": 9266,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9262,
											"end": 9266,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9262,
											"end": 9266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9262,
											"end": 9266,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9262,
											"end": 9266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9262,
											"end": 9266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9258,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9252,
											"end": 9266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9252,
											"end": 9266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9297,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9311,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9284,
											"end": 9311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9311,
											"name": "PUSH",
											"source": 0,
											"value": "D06CA61F"
										},
										{
											"begin": 9312,
											"end": 9318,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9312,
											"end": 9318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9323,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9284,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9325,
											"end": 9326,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9277,
											"end": 9327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9277,
											"end": 9327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9277,
											"end": 9327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9335,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9335,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 272,
											"end": 293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 309,
											"end": 325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 376,
											"end": 393,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 367,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 400,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 535,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 545,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 679,
											"end": 682,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 623,
											"end": 684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 713,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 704,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 738,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 774,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 831,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 856,
											"end": 869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 847,
											"end": 869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 847,
											"end": 869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 878,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 878,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 878,
											"end": 911,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 878,
											"end": 911,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 878,
											"end": 911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 774,
											"end": 917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 774,
											"end": 917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 774,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 917,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1068,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1038,
											"end": 1160,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1079,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1079,
											"end": 1158,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1158,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1079,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1160,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1038,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1315,
											"end": 1318,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1304,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1214,
											"end": 1319,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1319,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1214,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1319,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1436,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1486,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1445,
											"end": 1492,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1445,
											"end": 1492,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1445,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1602,
											"end": 1608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1609,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1659,
											"end": 1664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1618,
											"end": 1665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1618,
											"end": 1665,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1618,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1808,
											"end": 1813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1781,
											"end": 1814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1781,
											"end": 1814,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1781,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1943,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1948,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2152,
											"end": 2159,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2141,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2096,
											"end": 2160,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2096,
											"end": 2160,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2096,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2160,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2313,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2330,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2414,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2295,
											"end": 2414,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2333,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2333,
											"end": 2412,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2333,
											"end": 2412,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2333,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2414,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2295,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2477,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2496,
											"end": 2502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2523,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2607,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2490,
											"end": 2607,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2526,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2526,
											"end": 2605,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2526,
											"end": 2605,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2526,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2607,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2490,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2712,
											"end": 2719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2701,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2631,
											"end": 2720,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2631,
											"end": 2720,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2631,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2884,
											"end": 2893,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2875,
											"end": 2882,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2894,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2899,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2983,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2864,
											"end": 2983,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2902,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2902,
											"end": 2981,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2902,
											"end": 2981,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2902,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2983,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2864,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3022,
											"end": 3023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3106,
											"end": 3113,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3047,
											"end": 3114,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3047,
											"end": 3114,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3047,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3114,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3189,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3248,
											"end": 3255,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3237,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3224,
											"end": 3246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3189,
											"end": 3256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3189,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3189,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3279,
											"end": 3458,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3279,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3411,
											"end": 3414,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3409,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3369,
											"end": 3415,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3369,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3442,
											"end": 3445,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3458,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3458,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3464,
											"end": 3572,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3464,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3559,
											"end": 3564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3541,
											"end": 3565,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3541,
											"end": 3565,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3541,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3572,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3578,
											"end": 3696,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3578,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3683,
											"end": 3688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 3690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3696,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3732,
											"end": 4464,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3732,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3928,
											"end": 3933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3880,
											"end": 3934,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3880,
											"end": 3934,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3880,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3950,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4029,
											"end": 4035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4027,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3950,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3950,
											"end": 4036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3950,
											"end": 4036,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3950,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3943,
											"end": 4036,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3943,
											"end": 4036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4110,
											"end": 4115,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4060,
											"end": 4116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4060,
											"end": 4116,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4060,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4170,
											"end": 4171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4439,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4155,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4186,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4177,
											"end": 4178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4187,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4439,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4155,
											"end": 4439,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4256,
											"end": 4262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4342,
											"end": 4345,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4283,
											"end": 4346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4283,
											"end": 4346,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4283,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4346,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4422,
											"end": 4428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4369,
											"end": 4429,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4369,
											"end": 4429,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4369,
											"end": 4429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4359,
											"end": 4429,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4359,
											"end": 4429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4203,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4199,
											"end": 4200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4155,
											"end": 4439,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4439,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4155,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4159,
											"end": 4173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4458,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4458,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3856,
											"end": 4464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3856,
											"end": 4464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3856,
											"end": 4464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 4464,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 4464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 4464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 4464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 4464,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4470,
											"end": 4588,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4470,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4575,
											"end": 4580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4545,
											"end": 4582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4470,
											"end": 4588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4470,
											"end": 4588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4470,
											"end": 4588,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4594,
											"end": 4816,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4594,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4727,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4714,
											"end": 4723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4710,
											"end": 4728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4738,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4806,
											"end": 4807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4795,
											"end": 4804,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4782,
											"end": 4788,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4738,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4738,
											"end": 4809,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4738,
											"end": 4809,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4738,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4816,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4816,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4822,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4822,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 4955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4951,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 4956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 5034,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5010,
											"end": 5016,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4966,
											"end": 5037,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4966,
											"end": 5037,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4966,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 5044,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 5044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 5044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 5044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 5044,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5050,
											"end": 5533,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5050,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5221,
											"end": 5225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5259,
											"end": 5261,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 5340,
											"end": 5341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5329,
											"end": 5338,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5325,
											"end": 5342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5316,
											"end": 5322,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5272,
											"end": 5343,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5272,
											"end": 5343,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 5272,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5384,
											"end": 5388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5400,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5377,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5373,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5360,
											"end": 5378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5418,
											"end": 5526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5521,
											"end": 5525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5518,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5418,
											"end": 5526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5418,
											"end": 5526,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5418,
											"end": 5526,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5418,
											"end": 5526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5533,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5533,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5533,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5539,
											"end": 5668,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5539,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5657,
											"end": 5661,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5629,
											"end": 5662,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5629,
											"end": 5662,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5629,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5668,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5668,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5674,
											"end": 5749,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5674,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5740,
											"end": 5742,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5749,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5755,
											"end": 6066,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5755,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5920,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5911,
											"end": 5941,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5964,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5908,
											"end": 5964,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5944,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5944,
											"end": 5962,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5944,
											"end": 5962,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5944,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5964,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5908,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 5998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5986,
											"end": 5992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5982,
											"end": 5999,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 5999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 5999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6048,
											"end": 6052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6044,
											"end": 6059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6036,
											"end": 6059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6036,
											"end": 6059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 6066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 6066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 6066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 6066,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6072,
											"end": 6204,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6072,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6162,
											"end": 6165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6154,
											"end": 6165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6154,
											"end": 6165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6192,
											"end": 6196,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6187,
											"end": 6190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6183,
											"end": 6197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6175,
											"end": 6197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6175,
											"end": 6197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6072,
											"end": 6204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6072,
											"end": 6204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6072,
											"end": 6204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6072,
											"end": 6204,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6210,
											"end": 6324,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6210,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6277,
											"end": 6283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6317,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6324,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6330,
											"end": 6443,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6330,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6427,
											"end": 6430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6415,
											"end": 6437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6415,
											"end": 6437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6330,
											"end": 6443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6330,
											"end": 6443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6330,
											"end": 6443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6330,
											"end": 6443,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6449,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6449,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6622,
											"end": 6626,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6617,
											"end": 6620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6598,
											"end": 6627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6598,
											"end": 6627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6633,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6633,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6633,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6639,
											"end": 6735,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6639,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6676,
											"end": 6683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6723,
											"end": 6728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6705,
											"end": 6729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6705,
											"end": 6729,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6705,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6694,
											"end": 6729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6694,
											"end": 6729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6639,
											"end": 6735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6639,
											"end": 6735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6639,
											"end": 6735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6639,
											"end": 6735,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6741,
											"end": 6851,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 6741,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6821,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 6839,
											"end": 6844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6821,
											"end": 6845,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6821,
											"end": 6845,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 6821,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6851,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6857,
											"end": 6967,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 6857,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6937,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 6955,
											"end": 6960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6937,
											"end": 6961,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6937,
											"end": 6961,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 6937,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6967,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6973,
											"end": 7099,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6973,
											"end": 7099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7010,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7043,
											"end": 7048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7039,
											"end": 7093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7099,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7105,
											"end": 7182,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7105,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7171,
											"end": 7176,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7188,
											"end": 7469,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7188,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 7293,
											"end": 7297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7271,
											"end": 7298,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7271,
											"end": 7298,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 7271,
											"end": 7298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7263,
											"end": 7269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7259,
											"end": 7299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7401,
											"end": 7407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7386,
											"end": 7408,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7353,
											"end": 7363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7384,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7409,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7344,
											"end": 7432,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7432,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7344,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7448,
											"end": 7450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7469,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7475,
											"end": 7655,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 7475,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7523,
											"end": 7600,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7520,
											"end": 7521,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7513,
											"end": 7601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7620,
											"end": 7624,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7617,
											"end": 7618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7610,
											"end": 7625,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7644,
											"end": 7648,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7641,
											"end": 7642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7649,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7841,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 7661,
											"end": 7841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7706,
											"end": 7707,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7699,
											"end": 7787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7806,
											"end": 7810,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7803,
											"end": 7804,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7796,
											"end": 7811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7830,
											"end": 7834,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7827,
											"end": 7828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7820,
											"end": 7835,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7847,
											"end": 7964,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7847,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7956,
											"end": 7957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7953,
											"end": 7954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7958,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7970,
											"end": 8087,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7970,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8076,
											"end": 8077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8093,
											"end": 8210,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 8093,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8199,
											"end": 8200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8204,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8216,
											"end": 8333,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 8216,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8322,
											"end": 8323,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8315,
											"end": 8327,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8441,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 8339,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8380,
											"end": 8386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8431,
											"end": 8433,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8427,
											"end": 8434,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8422,
											"end": 8424,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8415,
											"end": 8420,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8407,
											"end": 8435,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8441,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8447,
											"end": 8569,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 8447,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8520,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8538,
											"end": 8543,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8520,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 8520,
											"end": 8544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8520,
											"end": 8544,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8520,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8510,
											"end": 8545,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8500,
											"end": 8563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8500,
											"end": 8563,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8559,
											"end": 8560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8556,
											"end": 8557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8549,
											"end": 8561,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8500,
											"end": 8563,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8500,
											"end": 8563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8447,
											"end": 8569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8447,
											"end": 8569,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8575,
											"end": 8725,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8575,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 8694,
											"end": 8699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 8662,
											"end": 8700,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8662,
											"end": 8700,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 8662,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8655,
											"end": 8660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8652,
											"end": 8701,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 8642,
											"end": 8719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8712,
											"end": 8713,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8717,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8719,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 8642,
											"end": 8719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8575,
											"end": 8725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8575,
											"end": 8725,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8731,
											"end": 8881,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8731,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8818,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 8850,
											"end": 8855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8818,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8818,
											"end": 8856,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8818,
											"end": 8856,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 8818,
											"end": 8856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8811,
											"end": 8816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8808,
											"end": 8857,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8798,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 8798,
											"end": 8875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8871,
											"end": 8872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8868,
											"end": 8869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 8873,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8798,
											"end": 8875,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 8798,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8881,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8887,
											"end": 9009,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8887,
											"end": 9009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8960,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 8978,
											"end": 8983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8960,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8960,
											"end": 8984,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8960,
											"end": 8984,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 8960,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8953,
											"end": 8958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8950,
											"end": 8985,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8940,
											"end": 9003,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8996,
											"end": 8997,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9001,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 9003,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8940,
											"end": 9003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8887,
											"end": 9009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8887,
											"end": 9009,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BUSD()": "484f4ea9",
							"CalcLpPrice(address,address)": "344e49d9",
							"WBNB()": "8dd95002"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"},{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"name\":\"CalcLpPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LpUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x92b8f4153c899ad3658b54992b2852268c8b727a6df27f9148e5abf46efd4f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a12ade63ba2334c3ddacb8824436ae83d95acdc29bb46204e4f40115f027c7\",\"dweb:/ipfs/QmYBp1YrgeFtaLryKSiErGxzgYeBMnmEh43uwsgwABB5xd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "WBNB",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 335,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "BUSD",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 338,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "amount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[])": "d06ca61f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x92b8f4153c899ad3658b54992b2852268c8b727a6df27f9148e5abf46efd4f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a12ade63ba2334c3ddacb8824436ae83d95acdc29bb46204e4f40115f027c7\",\"dweb:/ipfs/QmYBp1YrgeFtaLryKSiErGxzgYeBMnmEh43uwsgwABB5xd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/LpPrice.sol:255:9:\n    |\n255 |         address token0 = lpAddress.token0();\n    |         ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9685,
					"file": "contracts/LpPrice.sol",
					"start": 9671
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/LpPrice.sol": {
				"ast": {
					"absolutePath": "contracts/LpPrice.sol",
					"exportedSymbols": {
						"Address": [
							293
						],
						"IERC20": [
							317
						],
						"LpUtils": [
							413
						],
						"Router": [
							329
						]
					},
					"id": 414,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 293,
							"linearizedBaseContracts": [
								293
							],
							"name": "Address",
							"nameLocation": "68:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "1134:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 9,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "1363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1363:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1363:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1363:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 8,
												"id": 14,
												"nodeType": "Return",
												"src": "1356:30:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "83:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1077:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1096:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1088:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:17:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1128:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:6:0"
									},
									"scope": 293,
									"src": "1068:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "2400:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 27,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2427:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 26,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2419:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 25,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2419:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2419:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2419:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 30,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2444:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2419:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2452:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "2411:73:0"
											},
											{
												"assignments": [
													36,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2503:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 49,
														"src": "2498:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 35,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 43,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2546:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 37,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2516:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2516:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 39,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2538:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2516:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2516:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2497:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 45,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "2568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2560:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2560:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "2560:78:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "1402:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2338:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2364:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2348:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2383:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2375:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:43:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2400:0:0"
									},
									"scope": 293,
									"src": "2329:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "3497:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 61,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "3528:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 62,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "3536:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3542:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 60,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															67,
															87
														],
														"referencedDeclaration": 87,
														"src": "3515:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 59,
												"id": 65,
												"nodeType": "Return",
												"src": "3508:67:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2654:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3417:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3438:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3430:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3459:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3446:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 54,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3446:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3429:35:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3483:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:14:0"
									},
									"scope": 293,
									"src": "3408:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "3964:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 80,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "4004:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 81,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4012:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 83,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "4021:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 79,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "3982:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3982:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 78,
												"id": 85,
												"nodeType": "Return",
												"src": "3975:59:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "3591:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3822:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3853:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3845:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3883:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3870:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 71,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3870:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3912:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3898:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 73,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3898:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:97:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3950:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 76,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3950:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3949:14:0"
									},
									"scope": 293,
									"src": "3813:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4564:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 100,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "4604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 101,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4612:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 102,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4618:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4625:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 99,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "4582:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4582:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 98,
												"id": 105,
												"nodeType": "Return",
												"src": "4575:94:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "4050:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4426:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4483:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 91,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:84:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4550:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 96,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4550:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:14:0"
									},
									"scope": 293,
									"src": "4417:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "5117:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 124,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5144:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5136:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 122,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5136:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5136:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5136:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 127,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5161:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5136:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5168:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5128:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5128:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "5128:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 134,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "5239:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 133,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "5228:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5228:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5248:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5220:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "5220:60:0"
											},
											{
												"assignments": [
													140,
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5299:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5294:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 139,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5294:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5321:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5308:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 141,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5308:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"id": 147,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 143,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "5335:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5335:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 145,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5354:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5335:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5335:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5293:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 152,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5410:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 153,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "5422:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 150,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "5384:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 120,
												"id": 155,
												"nodeType": "Return",
												"src": "5377:58:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "4685:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4982:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4974:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5035:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5027:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5065:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5051:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5051:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:121:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5103:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5103:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5102:14:0"
									},
									"scope": 293,
									"src": "4933:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "5728:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5765:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "5773:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5779:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 167,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															209
														],
														"referencedDeclaration": 209,
														"src": "5746:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5746:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 166,
												"id": 172,
												"nodeType": "Return",
												"src": "5739:80:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5451:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5637:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5664:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5656:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5672:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5655:35:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5714:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:14:0"
									},
									"scope": 293,
									"src": "5628:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "6181:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 188,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "6211:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 187,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "6200:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6200:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6220:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6192:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "6192:67:0"
											},
											{
												"assignments": [
													194,
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6278:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6273:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 193,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6273:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6300:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6287:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 195,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"arguments": [
														{
															"id": 199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "6332:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 197,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6314:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6314:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6314:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6272:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "6372:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 204,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "6381:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 205,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "6393:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 202,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "6355:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6355:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 185,
												"id": 207,
												"nodeType": "Return",
												"src": "6348:58:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "5835:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6028:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6065:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6057:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6095:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6082:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6082:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6124:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6110:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6110:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6046:97:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6167:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6167:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6166:14:0"
									},
									"scope": 293,
									"src": "6019:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "6698:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6737:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6751:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 219,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															226,
															261
														],
														"referencedDeclaration": 261,
														"src": "6716:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6716:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 218,
												"id": 224,
												"nodeType": "Return",
												"src": "6709:84:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6422:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6610:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6639:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6647:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6630:35:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6684:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6684:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6683:14:0"
									},
									"scope": 293,
									"src": "6601:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "7154:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 240,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "7184:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 239,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "7173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7173:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "7165:69:0"
											},
											{
												"assignments": [
													246,
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7253:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7248:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7275:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7262:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 247,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7262:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [
														{
															"id": 251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7289:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7289:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7289:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7247:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "7349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 256,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7358:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 257,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7370:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 254,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "7332:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7332:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 237,
												"id": 259,
												"nodeType": "Return",
												"src": "7325:58:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "6809:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7004:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7043:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7035:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7073:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7060:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7060:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7102:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7088:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7024:97:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7140:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7140:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7139:14:0"
									},
									"scope": 293,
									"src": "6995:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "7783:548:0",
										"statements": [
											{
												"condition": {
													"id": 273,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 264,
													"src": "7798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "7857:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "7943:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7943:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7943:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 287,
																"nodeType": "Block",
																"src": "8258:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 284,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "8284:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 283,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8277:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8277:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 286,
																		"nodeType": "ExpressionStatement",
																		"src": "8277:20:0"
																	}
																]
															},
															"id": 288,
															"nodeType": "IfStatement",
															"src": "7939:374:0",
															"trueBody": {
																"id": 282,
																"nodeType": "Block",
																"src": "7966:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8089:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8112:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8141:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8135:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8135:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8116:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8185:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8189:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8181:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8181:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8202:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8174:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8174:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8174:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8141:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8189:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 281,
																		"nodeType": "InlineAssembly",
																		"src": "8080:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "7794:530:0",
												"trueBody": {
													"id": 276,
													"nodeType": "Block",
													"src": "7807:44:0",
													"statements": [
														{
															"expression": {
																"id": 274,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "7829:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 272,
															"id": 275,
															"nodeType": "Return",
															"src": "7822:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "7399:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7628:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7655:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7655:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7691:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7678:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7678:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7726:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7712:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7712:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7644:101:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7769:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7769:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7768:14:0"
									},
									"scope": 293,
									"src": "7619:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 414,
							"src": "60:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 317,
							"linearizedBaseContracts": [
								317
							],
							"name": "IERC20",
							"nameLocation": "8348:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "8362:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "8445:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8456:2:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "8482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8481:9:0"
									},
									"scope": 317,
									"src": "8436:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "8508:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8514:2:0"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8540:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8539:9:0"
									},
									"scope": 317,
									"src": "8499:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "8566:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8572:2:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "8598:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8597:9:0"
									},
									"scope": 317,
									"src": "8557:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8624:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8642:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8634:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8633:17:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8674:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8673:9:0"
									},
									"scope": 317,
									"src": "8615:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 414,
							"src": "8338:348:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 329,
							"linearizedBaseContracts": [
								329
							],
							"name": "Router",
							"nameLocation": "8700:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d06ca61f",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "8723:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "8742:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8737:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "8769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8752:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 320,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8752:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 321,
													"nodeType": "ArrayTypeName",
													"src": "8752:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8736:38:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "8830:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8816:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 324,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "8816:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 325,
													"nodeType": "ArrayTypeName",
													"src": "8816:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8815:23:0"
									},
									"scope": 329,
									"src": "8714:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 414,
							"src": "8690:152:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 413,
							"linearizedBaseContracts": [
								413
							],
							"name": "LpUtils",
							"nameLocation": "8855:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8dd95002",
									"id": 332,
									"mutability": "mutable",
									"name": "WBNB",
									"nameLocation": "8885:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 413,
									"src": "8870:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 330,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8870:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
										"id": 331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8892:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "484f4ea9",
									"id": 335,
									"mutability": "mutable",
									"name": "BUSD",
									"nameLocation": "8956:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 413,
									"src": "8941:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 333,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8941:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837383836374262456546343466323332366246384444643139343161343433393338324546324137",
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8963:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "9020:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 413,
									"src": "9012:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 336,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9012:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 337,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9029:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "9139:196:0",
										"statements": [
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "9167:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 385,
														"src": "9150:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 350,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9150:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 351,
															"nodeType": "ArrayTypeName",
															"src": "9150:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "33",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9188:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9174:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 353,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9178:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 354,
															"nodeType": "ArrayTypeName",
															"src": "9178:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9174:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9150:40:0"
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 359,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9201:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 361,
														"indexExpression": {
															"hexValue": "30",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9206:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 362,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "9211:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9201:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "9201:15:0"
											},
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 365,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9227:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 367,
														"indexExpression": {
															"hexValue": "31",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9232:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9227:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 368,
														"name": "WBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "9237:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9227:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "9227:14:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 371,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 373,
														"indexExpression": {
															"hexValue": "32",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9257:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9252:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 374,
														"name": "BUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "9262:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9252:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "9252:14:0"
											},
											{
												"expression": {
													"baseExpression": {
														"arguments": [
															{
																"id": 379,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "9312:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 380,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "9319:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															],
															"expression": {
																"id": 377,
																"name": "routerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "9284:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Router_$329",
																	"typeString": "contract Router"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 328,
															"src": "9284:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9284:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 383,
													"indexExpression": {
														"hexValue": "32",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9325:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9284:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 347,
												"id": 384,
												"nodeType": "Return",
												"src": "9277:50:0"
											}
										]
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "price",
									"nameLocation": "9066:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "9079:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9072:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$329",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 340,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 339,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 329,
														"src": "9072:6:0"
													},
													"referencedDeclaration": 329,
													"src": "9072:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$329",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9102:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9094:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9071:37:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9131:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9131:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9130:9:0"
									},
									"scope": 413,
									"src": "9057:278:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "9434:339:0",
										"statements": [
											{
												"assignments": [
													398
												],
												"declarations": [
													{
														"constant": false,
														"id": 398,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "9679:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 411,
														"src": "9671:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 397,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9671:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 402,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 399,
															"name": "lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "9688:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$317",
																"typeString": "contract IERC20"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 304,
														"src": "9688:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9688:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9671:35:0"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 404,
																	"name": "routerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "9731:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Router_$329",
																		"typeString": "contract Router"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 405,
																			"name": "lpAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 389,
																			"src": "9745:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$317",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 304,
																		"src": "9745:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9745:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Router_$329",
																		"typeString": "contract Router"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 403,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "9725:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_Router_$329_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (contract Router,address) view returns (uint256)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9725:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 409,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9724:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 396,
												"id": 410,
												"nodeType": "Return",
												"src": "9717:48:0"
											}
										]
									},
									"functionSelector": "344e49d9",
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CalcLpPrice",
									"nameLocation": "9352:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9371:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "9364:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$317",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 388,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 387,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 317,
														"src": "9364:6:0"
													},
													"referencedDeclaration": 317,
													"src": "9364:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$317",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "9389:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "9382:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$329",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 391,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 390,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 329,
														"src": "9382:6:0"
													},
													"referencedDeclaration": 329,
													"src": "9382:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$329",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9363:40:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "9426:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9425:9:0"
									},
									"scope": 413,
									"src": "9343:430:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 414,
							"src": "8846:930:0",
							"usedErrors": []
						}
					],
					"src": "33:9743:0"
				},
				"id": 0
			}
		}
	}
}